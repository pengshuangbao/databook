(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{623:function(a,t,s){"use strict";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"第十六章、垃圾回收相关概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第十六章、垃圾回收相关概念"}},[a._v("#")]),a._v(" 第十六章、垃圾回收相关概念")]),a._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#system-gc的理解"}},[a._v("System.gc的理解")]),s("ul",[s("li",[s("a",{attrs:{href:"#手动调用system-gc理解不可达对象的回收行为"}},[a._v("手动调用System.gc理解不可达对象的回收行为")]),s("ul",[s("li",[s("a",{attrs:{href:"#localvargc1"}},[a._v("localvarGC1")])]),s("li",[s("a",{attrs:{href:"#localvargc2"}},[a._v("localvarGC2")])]),s("li",[s("a",{attrs:{href:"#localvargc2"}},[a._v("localvarGC2")])]),s("li",[s("a",{attrs:{href:"#localvargc4"}},[a._v("localvarGC4")])])])])])]),s("li",[s("a",{attrs:{href:"#内存溢出和内存泄漏"}},[a._v("内存溢出和内存泄漏")]),s("ul",[s("li",[s("a",{attrs:{href:"#内存溢出-oom"}},[a._v("内存溢出（OOM）")])]),s("li",[s("a",{attrs:{href:"#内存泄漏"}},[a._v("内存泄漏")])]),s("li",[s("a",{attrs:{href:"#内存泄漏举例"}},[a._v("内存泄漏举例")])])])]),s("li",[s("a",{attrs:{href:"#stop-the-world"}},[a._v("Stop the world")])]),s("li",[s("a",{attrs:{href:"#垃圾回收的并行与并发"}},[a._v("垃圾回收的并行与并发")]),s("ul",[s("li",[s("a",{attrs:{href:"#并发-concurrent"}},[a._v("并发（Concurrent）")])]),s("li",[s("a",{attrs:{href:"#并行-parallel"}},[a._v("并行（Parallel）")])]),s("li",[s("a",{attrs:{href:"#并发-vs-并行"}},[a._v("并发 vs 并行")])]),s("li",[s("a",{attrs:{href:"#垃圾回收的并行与并发"}},[a._v("垃圾回收的并行与并发")]),s("ul",[s("li",[s("a",{attrs:{href:"#并行-parallel"}},[a._v("并行（Parallel）")])]),s("li",[s("a",{attrs:{href:"#串行-serial"}},[a._v("串行（Serial）")])]),s("li",[s("a",{attrs:{href:"#并发-concurrent"}},[a._v("并发（Concurrent）")])])])])])]),s("li",[s("a",{attrs:{href:"#安全点与安全区域"}},[a._v("安全点与安全区域")]),s("ul",[s("li",[s("a",{attrs:{href:"#安全点"}},[a._v("安全点")]),s("ul",[s("li",[s("a",{attrs:{href:"#抢先式中断-目前没有虚拟机采用了"}},[a._v("抢先式中断：（目前没有虚拟机采用了）")])]),s("li",[s("a",{attrs:{href:"#主动式中断"}},[a._v("主动式中断")])])])]),s("li",[s("a",{attrs:{href:"#安全区域-safe-resion"}},[a._v("安全区域（Safe Resion）")])]),s("li",[s("a",{attrs:{href:"#实际执行时"}},[a._v("实际执行时：")])]),s("li",[s("a",{attrs:{href:"#安全区域"}},[a._v("安全区域")])])])]),s("li",[s("a",{attrs:{href:"#再谈引用-强引用-不回收"}},[a._v("再谈引用：强引用-不回收")]),s("ul",[s("li",[s("a",{attrs:{href:"#强-软-弱-虚"}},[a._v("强-> 软-> 弱 -> 虚")])]),s("li",[s("a",{attrs:{href:"#强引用-strong-reference-不回收"}},[a._v("强引用（Strong Reference）——不回收")])])])]),s("li",[s("a",{attrs:{href:"#再谈引用-软引用-内存不足即回收"}},[a._v("再谈引用：软引用-内存不足即回收")])]),s("li",[s("a",{attrs:{href:"#再谈引用-弱引用-发现即回收"}},[a._v("再谈引用：弱引用-发现即回收")]),s("ul",[s("li",[s("a",{attrs:{href:"#弱引用-weak-reference-发现即回收"}},[a._v("弱引用（Weak Reference）——发现即回收")])]),s("li",[s("a",{attrs:{href:"#weakhashmap"}},[a._v("WeakHashMap")])]),s("li",[s("a",{attrs:{href:"#举例"}},[a._v("举例")])])])]),s("li",[s("a",{attrs:{href:"#谈引用-虚引用"}},[a._v("谈引用：虚引用")]),s("ul",[s("li",[s("a",{attrs:{href:"#虚引用-phantom-reference-对象回收跟踪"}},[a._v("虚引用（Phantom Reference）——对象回收跟踪")])])])]),s("li",[s("a",{attrs:{href:"#再谈引用-终结器引用-了解"}},[a._v("再谈引用：终结器引用(了解)")])])])]),s("p"),a._v(" "),s("h2",{attrs:{id:"system-gc的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#system-gc的理解"}},[a._v("#")]),a._v(" System.gc的理解")]),a._v(" "),s("p",[a._v("在默认情况下，通过system.gc()或者Runtime.getRuntime().gc() 的调用，"),s("mark",[a._v("会显式触发Full GC")]),a._v("，同时对老年代和新生代进行回收，尝试释放被丢弃对象占用的内存。")]),a._v(" "),s("p",[a._v("然而System.gc() 调用附带一个免责声明，无法保证对垃圾收集器的调用。(不能确保立即生效)")]),a._v(" "),s("p",[a._v("JVM实现者可以通过System.gc() 调用来决定JVM的GC行为。而一般情况下，垃圾回收应该是自动进行的，"),s("mark",[a._v("无须手动触发，否则就太过于麻烦了")]),a._v("。在一些特殊情况下，如我们正在编写一个性能基准，我们可以在运行之间调用System.gc()")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-25-0f8e8b8c1c4199d1b348d43af8c610f1.png",alt:"image"}})]),a._v(" "),s("h3",{attrs:{id:"手动调用system-gc理解不可达对象的回收行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手动调用system-gc理解不可达对象的回收行为"}},[a._v("#")]),a._v(" 手动调用System.gc理解不可达对象的回收行为")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalVarGC")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("localvarGC1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//10MB")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("gc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("localvarGC2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("gc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("localvarGC3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("gc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("localvarGC4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("gc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("localvarGC5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("localvarGC1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("gc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalVarGC")]),a._v(" local "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("LocalVarGC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        local"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("localvarGC5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"localvargc1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#localvargc1"}},[a._v("#")]),a._v(" localvarGC1")]),a._v(" "),s("p",[a._v("没有触发GC，新生代没有回收掉，full gc后新生代归零，放入到老年代")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-25-873c79d727931248a253c34a7903cf9a.png",alt:"image"}})]),a._v(" "),s("p",[a._v("![image-20201225091851191](/Users/apple/Library/Application Support/typora-user-images/image-20201225091851191.png)")]),a._v(" "),s("h4",{attrs:{id:"localvargc2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#localvargc2"}},[a._v("#")]),a._v(" localvarGC2")]),a._v(" "),s("p",[a._v("full gc 的时候 已经回收了")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-25-ee329f579e3d2ee010251dca68588e3c.png",alt:"image"}})]),a._v(" "),s("h4",{attrs:{id:"localvargc2-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#localvargc2-2"}},[a._v("#")]),a._v(" localvarGC2")]),a._v(" "),s("p",[a._v("full gc的时候，没有被回收掉，为什么？")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-25-05cc5ffcf74a05ef6063804b2f4e021d.png",alt:"image"}})]),a._v(" "),s("p",[a._v("为什么？")]),a._v(" "),s("p",[a._v("局部变量表的长度是2，但是局部变量表里面只有一个this，索引为0的是this，索引为1的其实就是buffer，还占用着1这个位置，回收的时候就不会回收了")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-25-18a615a28a5b5921459054bf6ccd3cb0.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-25-af90c3d7720c943e39ae4e5a3e6e576e.png",alt:"image"}})]),a._v(" "),s("h4",{attrs:{id:"localvargc4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#localvargc4"}},[a._v("#")]),a._v(" localvarGC4")]),a._v(" "),s("p",[a._v("buffer已经回收了")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-25-83c8f9c1536220440f31e4988986882e.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-25-f9fb1352d8605dcda1d106b727ccbdac.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-25-e8b9c0653d1ae9cb942724e5ac35a392.png",alt:"image"}})]),a._v(" "),s("p",[a._v("局部变量表的长度还是2，索引为1的地方一开始还是 buffer，后来被value占据了，所以buffer就被回收了，。")]),a._v(" "),s("p",[a._v("localvarGC5")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-82e56954b537eda2517dcf7f882ea379.png",alt:"image"}})]),a._v(" "),s("h2",{attrs:{id:"内存溢出和内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存溢出和内存泄漏"}},[a._v("#")]),a._v(" 内存溢出和内存泄漏")]),a._v(" "),s("h3",{attrs:{id:"内存溢出-oom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存溢出-oom"}},[a._v("#")]),a._v(" 内存溢出（OOM）")]),a._v(" "),s("p",[a._v("内存溢出相对于内存泄漏来说，尽管更容易被理解，但是同样的，内存溢出也是引发程序崩溃的罪魁祸首之一。")]),a._v(" "),s("p",[a._v("由于GC一直在发展，所有一般情况下，除非应用程序占用的内存增长速度非常快，造成垃圾回收已经跟不上内存消耗的速度，否则不太容易出现ooM的情况。")]),a._v(" "),s("p",[a._v("大多数情况下，GC会进行各种年龄段的垃圾回收，实在不行了就放大招，来一次独占式的Full GC操作，这时候会回收大量的内存，供应用程序继续使用。")]),a._v(" "),s("p",[a._v("javadoc中对OutOfMemoryError的解释是，"),s("mark",[a._v("没有空闲内存，并且垃圾收集器也无法提供更多内存")]),a._v("。")]),a._v(" "),s("p",[a._v("首先说没有空闲内存的情况：说明Java虚拟机的堆内存不够。原因有二：")]),a._v(" "),s("ol",[s("li",[s("p",[s("mark",[a._v("Java虚拟机的堆内存设置不够。")])]),a._v(" "),s("p",[a._v("比如：可能存在内存泄漏问题；也很有可能就是堆的大小不合理，比如我们要处理比较可观的数据量，但是没有显式指定JVM堆大小或者指定数值偏小。我们可以通过参数"),s("code",[a._v("-Xms")]),a._v(" 、"),s("code",[a._v("-Xmx")]),a._v("来调整。")])]),a._v(" "),s("li",[s("p",[s("mark",[a._v("代码中创建了大量大对象，并且长时间不能被垃圾收集器收集（存在被引用）")])]),a._v(" "),s("p",[a._v("对于老版本的Oracle JDK，因为永久代的大小是有限的，并且JVM对永久代垃圾回收（如，常量池回收、卸载不再需要的类型）非常不积极，所以当我们不断添加新类型的时候，永久代出现OutOfMemoryError也非常多见，尤其是在运行时存在大量动态类型生成的场合；类似intern字符串缓存占用太多空间，也会导致OOM问题。对应的异常信息，会标记出来和永久代相关：“"),s("code",[a._v("java.lang.OutOfMemoryError: PermGen space")]),a._v('"。')]),a._v(" "),s("p",[a._v("随着元数据区的引入，方法区内存已经不再那么窘迫，所以相应的ooM有所改观，出现OOM，异常信息则变成了：“"),s("code",[a._v("java.lang.OutofMemoryError:Metaspace")]),a._v('"。直接内存不足，也会导致OOM。')])])]),a._v(" "),s("p",[a._v("这里面隐含着一层意思是，在抛出OutOfMemoryError之前，通常垃圾收集器会被触发，尽其所能去清理出空间。")]),a._v(" "),s("ul",[s("li",[a._v("例如：在引用机制分析中，涉及到JVM会去尝试回收软引用指向的对象等。")]),a._v(" "),s("li",[a._v("在"),s("code",[a._v("java.nio.BIts.reserveMemory()")]),a._v("方法中，我们能清楚的看到，"),s("code",[a._v("System.gc()")]),a._v("会被调用，以清理空间。")])]),a._v(" "),s("p",[a._v("当然，也不是在任何情况下垃圾收集器都会被触发的")]),a._v(" "),s("ul",[s("li",[a._v("比如，我们去分配一个超大对象，类似一个超大数组超过堆的最大值，JVM可以判断出垃圾收集并不能解决这个问题，所以直接抛出OutOfMemoryError。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-e987d4bc85462e05f3fd3d5357f06e7f.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-82faae5752e1f8368af5740e73a43564.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-6e33ec137aa85a31c4eca456ded78be8.png",alt:"image"}})]),a._v(" "),s("h3",{attrs:{id:"内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏"}},[a._v("#")]),a._v(" 内存泄漏")]),a._v(" "),s("p",[a._v("也称作“存储渗漏”。严格来说，"),s("mark",[a._v("只有对象不会再被程序用到了，但是GC又不能回收他们的情况，才叫内存泄漏")]),a._v("。")]),a._v(" "),s("p",[a._v("但实际情况很多时候一些不太好的实践（或疏忽）会导致对象的生命周期变得很长甚至导致00M，也可以叫做"),s("mark",[a._v("宽泛意义上的“内存泄漏”")]),a._v("。")]),a._v(" "),s("p",[a._v("尽管内存泄漏并不会立刻引起程序崩溃，但是一旦发生内存泄漏，程序中的可用内存就会被逐步蚕食，直至耗尽所有内存，最终出现OutOfMemory异常，导致程序崩溃。")]),a._v(" "),s("p",[a._v("注意，这里的存储空间并不是指物理内存，而是指虚拟内存大小，这个虚拟内存大小取决于磁盘交换区设定的大小。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-6adafae24a5e7b370ea2056cd3c9a697.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-90bb213fb7d9b33ac05e56aebae54e91.png",alt:"image"}})]),a._v(" "),s("blockquote",[s("p",[a._v("右图右上角 对象不用了，但是无法回收，有一根线")])]),a._v(" "),s("h3",{attrs:{id:"内存泄漏举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏举例"}},[a._v("#")]),a._v(" 内存泄漏举例")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("单例模式")]),a._v(" "),s("p",[a._v("单例的生命周期和应用程序是一样长的，所以单例程序中，如果持有对外部对象的引用的话，那么这个外部对象是不能被回收的，则会导致内存泄漏的产生。")])]),a._v(" "),s("li",[s("p",[a._v("一些提供close的资源未关闭导致内存泄漏")]),a._v(" "),s("p",[a._v("数据库连接（dataSourse.getConnection() ），网络连接（socket）和io连接必须手动close，否则是不能被回收的。")])])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-4016996f25fbd5fa3cc3d0dd5fff4d18.png",alt:"image"}})]),a._v(" "),s("h2",{attrs:{id:"stop-the-world"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stop-the-world"}},[a._v("#")]),a._v(" Stop the world")]),a._v(" "),s("p",[a._v("Stop-the-World，简称STW，指的是GC事件发生过程中，会产生应用程序的停顿。"),s("mark",[a._v("停顿产生时整个应用程序线程都会被暂停，没有任何响应")]),a._v("，有点像卡死的感觉，这个停顿称为STW。")]),a._v(" "),s("p",[a._v("可达性分析算法中枚举根节点（GC Roots）会导致所有Java执行线程停顿。")]),a._v(" "),s("ul",[s("li",[a._v("分析工作必须在一个能确保一致性的快照中进行")]),a._v(" "),s("li",[a._v("一致性指整个分析期间整个执行系统看起来像被冻结在某个时间点上")]),a._v(" "),s("li",[s("mark",[a._v("如果出现分析过程中对象引用关系还在不断变化，则分析结果的准确性无法保证")])])]),a._v(" "),s("p",[a._v("被STW中断的应用程序线程会在完成GC之后恢复，频繁中断会让用户感觉像是网速不快造成电影卡带一样，所以我们需要减少STW的发生。")]),a._v(" "),s("p",[a._v("STW事件和采用哪款GC无关，所有的GC都有这个事件。")]),a._v(" "),s("p",[a._v("哪怕是G1也不能完全避免Stop-the-World情况发生，只能说垃圾回收器越来越优秀，回收效率越来越高，尽可能地缩短了暂停时间。")]),a._v(" "),s("p",[a._v("STW是JVM在"),s("mark",[a._v("后台自动发起和自动完成")]),a._v("的。在用户不可见的情况下，把用户正常的工作线程全部停掉。")]),a._v(" "),s("p",[a._v("开发中不要用System.gc() 会导致Stop-the-World的发生。")]),a._v(" "),s("blockquote",[s("p",[a._v("GC root 是不断变化的")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-465d079882bbbd4937e33a41d0703753.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-62a74f670b61e7b54b3a56db46af4de7.png",alt:"image"}})]),a._v(" "),s("h2",{attrs:{id:"垃圾回收的并行与并发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收的并行与并发"}},[a._v("#")]),a._v(" 垃圾回收的并行与并发")]),a._v(" "),s("h3",{attrs:{id:"并发-concurrent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发-concurrent"}},[a._v("#")]),a._v(" 并发（Concurrent）")]),a._v(" "),s("p",[a._v("在操作系统中，是指一个时间段中有几个程序都处于已启动运行到运行完毕之间，且这几个程序都是在同一个处理器上运行。")]),a._v(" "),s("p",[a._v("并发不是真正意义上的“同时进行”，只是CPU把一个时间段划分成几个时间片段（时间区间），然后在这几个时间区间之间来回切换，由于CPU处理的速度非常快，只要时间间隔处理得当，即可让用户感觉是多个应用程序同时在进行。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-98f1f5eba8b7ce1dd74c22451a5b7fe0.png",alt:"image"}})]),a._v(" "),s("h3",{attrs:{id:"并行-parallel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并行-parallel"}},[a._v("#")]),a._v(" 并行（Parallel）")]),a._v(" "),s("p",[a._v("当系统有一个以上CPU时，当一个CPU执行一个进程时，另一个CPU可以执行另一个进程，两个进程互不抢占CPU资源，可以同时进行，我们称之为并行（Parallel）。")]),a._v(" "),s("p",[a._v("其实决定并行的因素不是CPU的数量，而是CPU的核心数量，比如一个CPU多个核也可以并行。")]),a._v(" "),s("p",[a._v("适合科学计算，后台处理等弱交互场景")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-e82de90845bd7a3cdfb4ce06ad0686f5.png",alt:"image"}})]),a._v(" "),s("h3",{attrs:{id:"并发-vs-并行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发-vs-并行"}},[a._v("#")]),a._v(" 并发 vs 并行")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("并发，指的是多个事情，在"),s("mark",[a._v("同一时间段内")]),a._v("同时发生了。")])]),a._v(" "),s("li",[s("p",[a._v("并行，指的是多个事情，在"),s("mark",[a._v("同一时间点上")]),a._v("同时发生了。")])]),a._v(" "),s("li",[s("p",[a._v("并发的多个任务之间是互相抢占资源的。")])]),a._v(" "),s("li",[s("p",[a._v("并行的多个任务之间是不互相抢占资源的。")])]),a._v(" "),s("li",[s("p",[a._v("只有在多CPU或者一个CPU多核的情况中，才会发生并行。")])]),a._v(" "),s("li",[s("p",[a._v("否则，看似同时发生的事情，其实都是并发执行的。")])])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-a566fda2107e022abdf028355c6d98f8.png",alt:"image"}})]),a._v(" "),s("h3",{attrs:{id:"垃圾回收的并行与并发-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收的并行与并发-2"}},[a._v("#")]),a._v(" 垃圾回收的并行与并发")]),a._v(" "),s("p",[a._v("并发和并行，在谈论垃圾收集器的上下文语境中，它们可以解释如下：")]),a._v(" "),s("h4",{attrs:{id:"并行-parallel-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并行-parallel-2"}},[a._v("#")]),a._v(" 并行（Parallel）")]),a._v(" "),s("p",[a._v("指多条垃圾收集线程并行工作，但此时用户线程仍处于等待状态。如ParNew、Parallel Scavenge、Parallel Old；")]),a._v(" "),s("h4",{attrs:{id:"串行-serial"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#串行-serial"}},[a._v("#")]),a._v(" 串行（Serial）")]),a._v(" "),s("p",[a._v("相较于并行的概念，单线程执行。如果内存不够，则程序暂停，启动JM垃圾回收器进行垃圾回收。回收完，再启动程序的线程。")]),a._v(" "),s("h4",{attrs:{id:"并发-concurrent-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发-concurrent-2"}},[a._v("#")]),a._v(" 并发（Concurrent）")]),a._v(" "),s("p",[a._v("指用户线程与垃圾收集线程同时执行（但不一定是并行的，可能会交替执行），垃圾回收线程在执行时不会停顿用户程序的运行。用户程序在继续运行，而垃圾收集程序线程运行于另一个CPU上；如：CMS、G1")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-87bc9ce8993afb755fd1eba87e137e02.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-9d7de95d606aa9229e2627a3784d3021.png",alt:"image"}})]),a._v(" "),s("h2",{attrs:{id:"安全点与安全区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全点与安全区域"}},[a._v("#")]),a._v(" 安全点与安全区域")]),a._v(" "),s("h3",{attrs:{id:"安全点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全点"}},[a._v("#")]),a._v(" 安全点")]),a._v(" "),s("p",[a._v("程序执行时并非在所有地方都能停顿下来开始GC，只有在特定的位置才能停顿下来开始GC，这些位置称为“安全点（Safepoint）”。")]),a._v(" "),s("p",[a._v("Safe Point的选择很重要，"),s("mark",[a._v("如果太少可能导致GC等待的时间太长，如果太频繁可能导致运行时的性能问题")]),a._v("。大部分指令的执行时间都非常短暂，通常会根据“"),s("mark",[a._v("是否具有让程序长时间执行的特征")]),a._v("”为标准。比如：选择一些执行时间较长的指令作为Safe Point，如"),s("mark",[a._v("方法调用、循环跳转和异常跳转等")]),a._v("。")]),a._v(" "),s("p",[a._v("如何在GC发生时，检查所有线程都跑到最近的安全点停顿下来呢？")]),a._v(" "),s("h4",{attrs:{id:"抢先式中断-目前没有虚拟机采用了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抢先式中断-目前没有虚拟机采用了"}},[a._v("#")]),a._v(" 抢先式中断：（目前没有虚拟机采用了）")]),a._v(" "),s("ul",[s("li",[a._v("首先中断所有线程。如果还有线程不在安全点，就恢复线程，让线程跑到安全点。\\")])]),a._v(" "),s("h4",{attrs:{id:"主动式中断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主动式中断"}},[a._v("#")]),a._v(" 主动式中断")]),a._v(" "),s("p",[a._v("设置一个中断标志，各个线程运行到Safe Point的时候主动轮询这个标志，如果中断标志为真，则将自己进行中断挂起。（有轮询的机制）")]),a._v(" "),s("h3",{attrs:{id:"安全区域-safe-resion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全区域-safe-resion"}},[a._v("#")]),a._v(" 安全区域（Safe Resion）")]),a._v(" "),s("p",[a._v("Safepoint 机制保证了程序执行时，在不太长的时间内就会遇到可进入GC的Safepoint。但是，程序“不执行”的时候呢？例如线程处于Sleep 状态或Blocked 状态，这时候线程无法响应JVM的中断请求，“走”到安全点去中断挂起，JVM也不太可能等待线程被唤醒。对于这种情况，就需要安全区域（Safe Region）来解决。")]),a._v(" "),s("p",[s("mark",[a._v("安全区域是指在一段代码片段中，对象的引用关系不会发生变化，在这个区域中的任何位置开始Gc都是安全的。")]),a._v("我们也可以把Safe Region看做是被扩展了的Safepoint。")]),a._v(" "),s("h3",{attrs:{id:"实际执行时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实际执行时"}},[a._v("#")]),a._v(" 实际执行时：")]),a._v(" "),s("ol",[s("li",[a._v("当线程运行到Safe Region的代码时，首先标识已经进入了Safe Relgion，如果这段时间内发生GC，JVM会忽略标识为Safe Region状态的线程")]),a._v(" "),s("li",[a._v("当线程即将离开Safe Region时，会检查JVM是否已经完成GC，如果完成了，则继续运行，否则线程必须等待直到收到可以安全离开Safe Region的信号为止；")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-d865a02be69aceff40ddf74ef42ad8c9.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-e58207c57aadd63a3418b268d81d2b56.png",alt:"image"}})]),a._v(" "),s("h3",{attrs:{id:"安全区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全区域"}},[a._v("#")]),a._v(" 安全区域")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-ca316f8fed771259bf3b05ef4892c8fa.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-28-bee3aac5102fbb9dd389ef5a954cd0de.png",alt:"image"}})]),a._v(" "),s("h2",{attrs:{id:"再谈引用-强引用-不回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#再谈引用-强引用-不回收"}},[a._v("#")]),a._v(" 再谈引用：强引用-不回收")]),a._v(" "),s("p",[a._v("我们希望能描述这样一类对象：当内存空间还足够时，则能保留在内存中；如果内存空间在进行垃圾收集后还是很紧张，则可以抛弃这些对象。")]),a._v(" "),s("p",[a._v("【既"),s("mark",[a._v("偏门")]),a._v("又非常"),s("mark",[a._v("高频")]),a._v("的面试题】强引用、软引用、弱引用、虚引用有什么区别？具体使用场景是什么？")]),a._v(" "),s("p",[a._v("在JDK1.2版之后，Java对引用的概念进行了扩充，将引用分为：强引用（Strong Reference）、软引用（Soft Reference）、弱引用（Weak Reference）、虚引用（Phantom Reference）这4种引用强度依次逐渐减弱。")]),a._v(" "),s("p",[a._v("除强引用外，其他3种引用均可以在java.lang.ref包中找到它们的身影。如下图，显示了这3种引用类型对应的类，开发人员可以在应用程序中直接使用它们。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-03-a3045ce2b494d0a4396a9d01cae1ca5e.png",alt:"image"}})]),a._v(" "),s("ul",[s("li")]),a._v(" "),s("h3",{attrs:{id:"强-软-弱-虚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强-软-弱-虚"}},[a._v("#")]),a._v(" 强-> 软-> 弱 -> 虚")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-15e7bc00073086aa18ade5a9718a79f9.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-6c27340f01467a985e77e9909ffdf61e.png",alt:"image"}})]),a._v(" "),s("p",[a._v("Reference子类中只有终结器引用是包内可见的，其他3种引用类型均为public，可以在应用程序中直接使用")]),a._v(" "),s("ul",[s("li",[s("mark",[a._v("强引用（StrongReference）")]),a._v("：最传统的“引用”的定义，是指在程序代码之中普遍存在的引用赋值，即类似“"),s("code",[a._v("Object obj = new Object()")]),a._v("”这种引用关系。无论任何情况下，只要强引用关系还存在，垃圾收集器就永远不会回收掉被引用的对象。")]),a._v(" "),s("li",[s("mark",[a._v("软引用（SoftReference）")]),a._v("：在系统将要发生内存溢出之前，将会把这些对象列入回收范围之中进行第二次回收。如果这次回收后还没有足够的内存，才会抛出内存流出异常。")]),a._v(" "),s("li",[s("mark",[a._v("弱引用（WeakReference）")]),a._v("：被弱引用关联的对象只能生存到下一次垃圾收集之前。当垃圾收集器工作时，无论内存空间是否足够，都会回收掉被弱引用关联的对象。")]),a._v(" "),s("li",[s("mark",[a._v("虚引用（PhantomReference）")]),a._v("：一个对象是否有虚引用的存在，完全不会对其生存时间构成影响，也无法通过虚引用来获得一个对象的实例。为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-f7397bcd214a7f585645fb18e4247f29.png",alt:"image"}})]),a._v(" "),s("h3",{attrs:{id:"强引用-strong-reference-不回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强引用-strong-reference-不回收"}},[a._v("#")]),a._v(" 强引用（Strong Reference）——不回收")]),a._v(" "),s("p",[a._v("在Java程序中，最常见的引用类型是强引用（"),s("mark",[a._v("普通系统99%以上都是强引用")]),a._v("），也就是我们最常见的普通对象引用，"),s("mark",[a._v("也是默认的引用类型")]),a._v("。")]),a._v(" "),s("p",[a._v("当在Java语言中使用new操作符创建一个新的对象，并将其赋值给一个变量的时候，这个变量就成为指向该对象的一个强引用。")]),a._v(" "),s("p",[s("mark",[a._v("强引用的对象是可触及的，垃圾收集器就永远不会回收掉被引用的对象。")])]),a._v(" "),s("p",[a._v("对于一个普通的对象，如果没有其他的引用关系，只要超过了引用的作用域或者显式地将相应（强）引用赋值为nu11，就是可以当做垃圾被收集了，当然具体回收时机还是要看垃圾收集策略。")]),a._v(" "),s("p",[a._v("相对的，软引用、弱引用和虚引用的对象是软可触及、弱可触及和虚可触及的，在一定条件下，都是可以被回收的。所以，"),s("mark",[a._v("强引用是造成Java内存泄漏的主要原因之一")]),a._v("。")]),a._v(" "),s("p",[s("strong",[a._v("强引用例子")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StringBuffer")]),a._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StringBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello mogublog"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("局部变量str指向StringBuffer实例所在堆空间，通过str可以操作该实例，那么str就是StringBuffer实例的强引用")]),a._v(" "),s("p",[s("strong",[a._v("对应内存结构")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-03-c5c95fa8aa9415baab0ffe5149cbc8f9.png",alt:"image"}})]),a._v(" "),s("p",[a._v("此时，如果再运行一个赋值语句")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StringBuffer")]),a._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[s("strong",[a._v("对应的内存结构")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-03-83468bff0b9988c97639e24aefc1f4aa.png",alt:"image"}})]),a._v(" "),s("p",[a._v("本例中的两个引用，都是强引用，强引用具备以下特点：")]),a._v(" "),s("ul",[s("li",[a._v("强引用可以直接访问目标对象。")]),a._v(" "),s("li",[a._v("强引用所指向的对象在任何时候都不会被系统回收，虚拟机宁愿抛出OOM异常，也不会回收强引用所指向对象。")]),a._v(" "),s("li",[a._v("强引用可能导致内存泄漏。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-733ec735170184d63daa399fb7a95989.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-e1b608ad66398334877e4a6df5ad2e4e.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-ce7c96429b3aa10e677d34e4db2d0d17.png",alt:"image"}})]),a._v(" "),s("h2",{attrs:{id:"再谈引用-软引用-内存不足即回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#再谈引用-软引用-内存不足即回收"}},[a._v("#")]),a._v(" 再谈引用：软引用-内存不足即回收")]),a._v(" "),s("p",[a._v("软引用是用来描述一些还有用，但非必需的对象。"),s("mark",[a._v("只被软引用关联着的对象，在系统将要发生内存溢出异常前，会把这些对象列进回收范围之中进行第二次回收")]),a._v("，如果这次回收还没有足够的内存，才会抛出内存溢出异常。")]),a._v(" "),s("p",[a._v("软引用通常用来实现内存敏感的缓存。比如："),s("mark",[a._v("高速缓存")]),a._v("就有用到软引用。如果还有空闲内存，就可以暂时保留缓存，当内存不足时清理掉，这样就保证了使用缓存的同时，不会耗尽内存。")]),a._v(" "),s("p",[a._v("垃圾回收器在某个时刻决定回收软可达的对象的时候，会清理软引用，并可选地把引用存放到一个引用队列（Reference Queue）。")]),a._v(" "),s("p",[a._v("类似弱引用，只不过Java虚拟机会尽量让软引用的存活时间长一些，迫不得已才清理。")]),a._v(" "),s("p",[a._v("在JDK1.2版之后提供了java.lang.ref.SoftReference类来实现软引用")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 声明强引用")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SoftReference")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" sf "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SoftReference")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nobj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//销毁强引用")]),a._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-b2afb08f07fbc934b93acae04f2d91fe.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-27d0f47b036f2029569e3eb8997a6a72.png",alt:"image"}})]),a._v(" "),s("blockquote",[s("p",[a._v("内存足够，不会清楚软引用")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-5ce2cc04f7ad60e1b589bf4357d73b1d.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-09704bff9275027873ea147d4dfd3984.png",alt:"image"}})]),a._v(" "),s("h2",{attrs:{id:"再谈引用-弱引用-发现即回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#再谈引用-弱引用-发现即回收"}},[a._v("#")]),a._v(" 再谈引用：弱引用-发现即回收")]),a._v(" "),s("h3",{attrs:{id:"弱引用-weak-reference-发现即回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#弱引用-weak-reference-发现即回收"}},[a._v("#")]),a._v(" 弱引用（Weak Reference）——发现即回收")]),a._v(" "),s("p",[a._v("弱引用也是用来描述那些非必需对象，"),s("mark",[a._v("只被弱引用关联的对象只能生存到下一次垃圾收集发生为止")]),a._v("。在系统GC时，只要发现弱引用，不管系统堆空间使用是否充足，都会回收掉只被弱引用关联的对象。")]),a._v(" "),s("p",[a._v("但是，由于垃圾回收器的线程通常优先级很低，因此，并不一定能很快地发现持有弱引用的对象。在这种情况下，"),s("mark",[a._v("弱引用对象可以存在较长的时间")]),a._v("。")]),a._v(" "),s("p",[a._v("弱引用和软引用一样，在构造弱引用时，也可以指定一个引用队列，当弱引用对象被回收时，就会加入指定的引用队列，通过这个队列可以跟踪对象的回收情况。")]),a._v(" "),s("p",[s("mark",[a._v("软引用、弱引用都非常适合来保存那些可有可无的缓存数据")]),a._v("。如果这么做，当系统内存不足时，这些缓存数据会被回收，不会导致内存溢出。而当内存资源充足时，这些缓存数据又可以存在相当长的时间，从而起到加速系统的作用。")]),a._v(" "),s("p",[a._v("在JDK1.2版之后提供了WeakReference类来实现弱引用")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 声明强引用")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("WeakReference")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" sf "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("WeakReference")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nobj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//销毁强引用")]),a._v("\n")])])]),s("p",[s("mark",[a._v("弱引用对象与软引用对象的最大不同")]),a._v("就在于，当GC在进行回收时，需要通过算法检查是否回收软引用对象，而对于弱引用对象，GC总是进行回收。"),s("mark",[a._v("弱引用对象更容易、更快被GC回收")]),a._v("。")]),a._v(" "),s("p",[s("strong",[a._v("面试题：你开发中使用过WeakHashMap吗？")])]),a._v(" "),s("p",[a._v("WeakHashMap用来存储图片信息，可以在内存不足的时候，及时回收，避免了OOM")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-1a6b4b847e06578e1270f17ef549948c.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-7f5cbe722d3601231d61e28e53c1a63a.png",alt:"image"}})]),a._v(" "),s("h3",{attrs:{id:"weakhashmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakhashmap"}},[a._v("#")]),a._v(" WeakHashMap")]),a._v(" "),s("p",[a._v("内部的Entry继承了WeakReference")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-b60a8553ee376ab7e600aad239a50d2d.png",alt:"image"}})]),a._v(" "),s("h3",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[a._v("#")]),a._v(" 举例")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-97cd065157c225a7c34e8aa3060fbb2f.png",alt:"image"}})]),a._v(" "),s("h2",{attrs:{id:"谈引用-虚引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈引用-虚引用"}},[a._v("#")]),a._v(" 谈引用：虚引用")]),a._v(" "),s("h3",{attrs:{id:"虚引用-phantom-reference-对象回收跟踪"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚引用-phantom-reference-对象回收跟踪"}},[a._v("#")]),a._v(" 虚引用（Phantom Reference）——对象回收跟踪")]),a._v(" "),s("p",[a._v("也称为“幽灵引用”或者“幻影引用”，是所有引用类型中最弱的一个。")]),a._v(" "),s("p",[a._v("一个对象是否有虚引用的存在，完全不会决定对象的生命周期。如果一个对象仅持有虚引用，那么它和没有引用几乎是一样的，随时都可能被垃圾回收器回收。")]),a._v(" "),s("p",[a._v("它不能单独使用，也无法通过虚引用来获取被引用的对象。当试图通过虚引用的get()方法取得对象时，总是null")]),a._v(" "),s("p",[s("mark",[a._v("为一个对象设置虚引用关联的唯一目的在于跟踪垃圾回收过程。比如：能在这个对象被收集器回收时收到一个系统通知。")])]),a._v(" "),s("p",[a._v("虚引用必须和引用队列一起使用。虚引用在创建时必须提供一个引用队列作为参数。当垃圾回收器准备回收一个对象时，如果发现它还有虚引用，就会在回收对象后，将这个虚引用加入引用队列，以通知应用程序对象的回收情况。")]),a._v(" "),s("p",[s("mark",[a._v("由于虚引用可以跟踪对象的回收时间，因此，也可以将一些资源释放操作放置在虚引用中执行和记录。")])]),a._v(" "),s("p",[a._v("在JDK1.2版之后提供了PhantomReference类来实现虚引用。")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 声明强引用")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ReferenceQueue")]),a._v(" phantomQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ReferenceQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PhantomReference")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" sf "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PhantomReference")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" phantomQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nobj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-ece4925a6c070ced93316a04ec739c12.png",alt:"image"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-29-049d195a42b46423f8d64c6ccc0432ff.png",alt:"image"}})]),a._v(" "),s("p",[a._v("虚引用不可获取对象")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-30-dda512beb44c6d8be66bb53f825c38d1.png",alt:"image"}})]),a._v(" "),s("h2",{attrs:{id:"再谈引用-终结器引用-了解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#再谈引用-终结器引用-了解"}},[a._v("#")]),a._v(" 再谈引用：终结器引用(了解)")]),a._v(" "),s("p",[a._v("它用于实现对象的finalize() 方法，也可以称为终结器引用。无需手动编码，其内部配合引用队列使用。")]),a._v(" "),s("p",[a._v("在GC时，终结器引用入队。由Finalizer线程通过终结器引用找到被引用对象调用它的finalize()方法，第二次GC时才回收被引用的对象")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-12-30-3c94a5013c16343a6e0d59faa88e8759.png",alt:"image"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);