(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{617:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"第九章、方法区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第九章、方法区"}},[t._v("#")]),t._v(" 第九章、方法区")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#堆、栈、方法区的交互方法"}},[t._v("堆、栈、方法区的交互方法")]),s("ul",[s("li",[s("a",{attrs:{href:"#从线程共享的角度来看"}},[t._v("从线程共享的角度来看")])])])]),s("li",[s("a",{attrs:{href:"#方法区的理解"}},[t._v("方法区的理解")]),s("ul",[s("li",[s("a",{attrs:{href:"#方法区在哪里"}},[t._v("方法区在哪里")])]),s("li",[s("a",{attrs:{href:"#基本理解"}},[t._v("基本理解")])]),s("li",[s("a",{attrs:{href:"#hospot虚拟机方法区演进"}},[t._v("hospot虚拟机方法区演进")])])])]),s("li",[s("a",{attrs:{href:"#设置方法区的大小与oom"}},[t._v("设置方法区的大小与OOM")]),s("ul",[s("li",[s("a",{attrs:{href:"#如何结局oom"}},[t._v("如何结局OOM")])])])]),s("li",[s("a",{attrs:{href:"#方法区的内部结构"}},[t._v("方法区的内部结构")]),s("ul",[s("li",[s("a",{attrs:{href:"#存储什么"}},[t._v("存储什么")]),s("ul",[s("li",[s("a",{attrs:{href:"#类型信息"}},[t._v("类型信息")])]),s("li",[s("a",{attrs:{href:"#域-field-信息"}},[t._v("域（Field）信息")])]),s("li",[s("a",{attrs:{href:"#方法-method-信息"}},[t._v("方法（Method）信息")])]),s("li",[s("a",{attrs:{href:"#non-final的类变量"}},[t._v("non-final的类变量")])]),s("li",[s("a",{attrs:{href:"#补充说明-全局常量-static-final"}},[t._v("补充说明：全局常量（static final）")])])])]),s("li",[s("a",{attrs:{href:"#运行时常量池vs常量池"}},[t._v("运行时常量池vs常量池")]),s("ul",[s("li",[s("a",{attrs:{href:"#为什么需要常量池"}},[t._v("为什么需要常量池")])]),s("li",[s("a",{attrs:{href:"#常量池里有什么"}},[t._v("常量池里有什么？")])]),s("li",[s("a",{attrs:{href:"#小结"}},[t._v("小结")])])])]),s("li",[s("a",{attrs:{href:"#运行时常量池"}},[t._v("运行时常量池")])])])]),s("li",[s("a",{attrs:{href:"#方法区的使用举例"}},[t._v("方法区的使用举例")])]),s("li",[s("a",{attrs:{href:"#方法区的演进细节"}},[t._v("方法区的演进细节")]),s("ul",[s("li",[s("a",{attrs:{href:"#jdk6"}},[t._v("JDK6")])]),s("li",[s("a",{attrs:{href:"#jdk7"}},[t._v("JDK7")])]),s("li",[s("a",{attrs:{href:"#jdk8"}},[t._v("JDK8")])]),s("li",[s("a",{attrs:{href:"#永久代为什么要被元空间替换"}},[t._v("永久代为什么要被元空间替换？")])]),s("li",[s("a",{attrs:{href:"#stringtable调整位置"}},[t._v("StringTable调整位置")])]),s("li",[s("a",{attrs:{href:"#_7-6-3-静态变量存放在那里"}},[t._v("7.6.3. 静态变量存放在那里？")])]),s("li",[s("a",{attrs:{href:"#静态变量存在哪里"}},[t._v("静态变量存在哪里")]),s("ul",[s("li",[s("a",{attrs:{href:"#例1"}},[t._v("例1")])]),s("li",[s("a",{attrs:{href:"#例2"}},[t._v("例2")])])])])])]),s("li",[s("a",{attrs:{href:"#方法区的垃圾回收"}},[t._v("方法区的垃圾回收")])]),s("li",[s("a",{attrs:{href:"#总结"}},[t._v("总结")])]),s("li",[s("a",{attrs:{href:"#面试题"}},[t._v("面试题")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"堆、栈、方法区的交互方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆、栈、方法区的交互方法"}},[t._v("#")]),t._v(" 堆、栈、方法区的交互方法")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-8d75ecc994cdeeb1ef8597789707d669.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"从线程共享的角度来看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从线程共享的角度来看"}},[t._v("#")]),t._v(" 从线程共享的角度来看")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-ecac8865a4b059b4c3924af2f1653026.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-c71800f073825492f8b757a461761790.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("double 和 long 占用两个slot")])]),t._v(" "),s("h2",{attrs:{id:"方法区的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区的理解"}},[t._v("#")]),t._v(" 方法区的理解")]),t._v(" "),s("h3",{attrs:{id:"方法区在哪里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区在哪里"}},[t._v("#")]),t._v(" 方法区在哪里")]),t._v(" "),s("p",[t._v("官方文档："),s("a",{attrs:{href:"https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-2.html#jvms-2.5.4",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chapter 2. The Structure of the Java Virtual Machine (oracle.com)"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("《Java虚拟机规范》中明确说明：“尽管所有的方法区在逻辑上是属于堆的一部分，但一些简单的实现可能不会选择去进行垃圾收集或者进行压缩。”但对于HotSpotJVM而言，方法区还有一个别名叫做Non-Heap（非堆），目的就是要和堆分开。")]),t._v(" "),s("p",[t._v("所以，"),s("mark",[t._v("方法区看作是一块独立于Java堆的内存空间")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-9e09c0df50e1cab542888767f70a9641.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"基本理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本理解"}},[t._v("#")]),t._v(" 基本理解")]),t._v(" "),s("ul",[s("li",[t._v("方法区（Method Area）与Java堆一样，是各个线程共享的内存区域。")]),t._v(" "),s("li",[t._v("方法区在JVM启动的时候被创建，并且它的实际的物理内存空间中和Java堆区一样都可以是不连续的。")]),t._v(" "),s("li",[t._v("方法区的大小，跟堆空间一样，可以选择固定大小或者可扩展。")]),t._v(" "),s("li",[t._v("方法区的大小决定了系统可以保存多少个类，如果系统定义了太多的类，导致方法区溢出，虚拟机同样会抛出内存溢出错误："),s("code",[t._v("java.lang.OutOfMemoryError: PermGen space")]),t._v(" 或者"),s("code",[t._v("java.lang.OutOfMemoryError: Metaspace")]),t._v(" "),s("ul",[s("li",[s("mark",[t._v("加载大量的第三方的jar包；Tomcat部署的工程过多（30~50个）；大量动态的生成反射类")])])])]),t._v(" "),s("li",[t._v("关闭JVM就会释放这个区域的内存。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-2a0b952f9b3e716c605d72957637019e.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"hospot虚拟机方法区演进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hospot虚拟机方法区演进"}},[t._v("#")]),t._v(" hospot虚拟机方法区演进")]),t._v(" "),s("p",[t._v("在jdk7及以前，习惯上把方法区，称为永久代。jdk8开始，使用元空间取代了永久代。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-03-51c3ecea36cd0ceea0cd8db763f32641.png",alt:"image"}})]),t._v(" "),s("p",[t._v("本质上，方法区和永久代并不等价。仅是对hotspot而言的。《Java虚拟机规范》对如何实现方法区，不做统一要求。例如：BEA JRockit / IBM J9 中不存在永久代的概念。")]),t._v(" "),s("p",[t._v("现在来看，当年使用永久代，不是好的idea。导致Java程序更容易OOM（超过"),s("code",[t._v("-XX:MaxPermsize")]),t._v("上限）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/vectorx/ImageCloud/raw/master/img/20210510142658.png",alt:"image-20210510142656677"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-2a0b952f9b3e716c605d72957637019e.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-c9c49c66bb148001e630fff12d00e842.png",alt:"image"}})]),t._v(" "),s("p",[t._v("而到了JDK8，终于完全废弃了永久代的概念，改用与JRockit、J9一样在本地内存中实现的元空间（Metaspace）来代替")]),t._v(" "),s("p",[t._v("元空间的本质和永久代类似，都是对JVM规范中方法区的实现。不过元空间与永久代最大的区别在于："),s("mark",[t._v("元空间不在虚拟机设置的内存中，而是使用本地内存")])]),t._v(" "),s("p",[t._v("永久代、元空间二者并不只是名字变了，内部结构也调整了")]),t._v(" "),s("p",[t._v("根据《Java虚拟机规范》的规定，如果方法区无法满足新的内存分配需求时，将抛出OOM异常")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-d43cb3208e623099b6da5fc8a5c13300.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"设置方法区的大小与oom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置方法区的大小与oom"}},[t._v("#")]),t._v(" 设置方法区的大小与OOM")]),t._v(" "),s("p",[t._v("方法区的大小不必是固定的，JVM可以根据应用的需要动态调整。")]),t._v(" "),s("p",[s("strong",[t._v("jdk7及以前")])]),t._v(" "),s("ul",[s("li",[s("mark",[t._v("通过"),s("code",[t._v("-XX:Permsize")]),t._v("来设置永久代初始分配空间。默认值是20.75M")])]),t._v(" "),s("li",[s("mark",[t._v("通过"),s("code",[t._v("-XX:MaxPermsize")]),t._v("来设定永久代最大可分配空间。32位机器默认是64M，64位机器模式是82M")])]),t._v(" "),s("li",[t._v("当JVM加载的类信息容量超过了这个值，会报异常"),s("code",[t._v("OutOfMemoryError:PermGen space")]),t._v("。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-c7138e66bf7c9fa6e0d4b29b32c6fa13.png",alt:"image"}})]),t._v(" "),s("p",[s("strong",[t._v("JDK8以后")])]),t._v(" "),s("ul",[s("li",[t._v("元数据区大小可以使用参数 "),s("code",[t._v("-XX:MetaspaceSize")]),t._v(" 和 "),s("code",[t._v("-XX:MaxMetaspaceSize")]),t._v("指定")]),t._v(" "),s("li",[t._v("默认值依赖于平台。windows下，"),s("code",[t._v("-XX:MetaspaceSize=21M -XX:MaxMetaspaceSize=-1//即没有限制")]),t._v("。")]),t._v(" "),s("li",[t._v("与永久代不同，如果不指定大小，默认情况下，虚拟机会耗尽所有的可用系统内存。如果元数据区发生溢出，虚拟机一样会抛出异常"),s("code",[t._v("OutOfMemoryError:Metaspace")])]),t._v(" "),s("li",[s("code",[t._v("-XX:MetaspaceSize")]),t._v("：设置初始的元空间大小。对于一个64位的服务器端JVM来说，其默认的"),s("code",[t._v("-XX:MetaspaceSize")]),t._v("值为21MB。这就是初始的高水位线，一旦触及这个水位线，Full GC将会被触发并卸载没用的类（即这些类对应的类加载器不再存活），然后这个高水位线将会重置。新的高水位线的值取决于GC后释放了多少元空间。如果释放的空间不足，那么在不超过"),s("code",[t._v("MaxMetaspaceSize")]),t._v("时，适当提高该值。如果释放空间过多，则适当降低该值。")]),t._v(" "),s("li",[t._v("如果初始化的高水位线设置过低，上述高水位线调整情况会发生很多次。通过垃圾回收器的日志可以观察到Full GC多次调用。为了避免频繁地GC，建议将"),s("code",[t._v("-XX:MetaspaceSize")]),t._v("设置为一个相对较高的值。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-fe357bbbf98ab7c63469bbb738907ec4.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"如何结局oom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何结局oom"}},[t._v("#")]),t._v(" 如何结局OOM")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("要解决OOM异常或heap space的异常，一般的手段是首先通过内存映像分析工具（如Eclipse Memory Analyzer）对dump出来的堆转储快照进行分析，重点是确认内存中的对象是否是必要的，也就是要先分清楚到底是出现了内存泄漏（Memory Leak）还是内存溢出（Memory Overflow）")])]),t._v(" "),s("li",[s("p",[t._v("如果是内存泄漏，可进一步通过工具查看泄漏对象到GC Roots的引用链。于是就能找到泄漏对象是通过怎样的路径与GCRoots相关联并导致垃圾收集器无法自动回收它们的。掌握了泄漏对象的类型信息，以及GCRoots引用链的信息，就可以比较准确地定位出泄漏代码的位置。")])]),t._v(" "),s("li",[s("p",[t._v("如果不存在内存泄漏，换句话说就是内存中的对象确实都还必须存活着，那就应当检查虚拟机的堆参数（"),s("code",[t._v("-Xmx")]),t._v("与"),s("code",[t._v("-Xms")]),t._v("），与机器物理内存对比看是否还可以调大，从代码上检查是否存在某些对象生命周期过长、持有状态时间过长的情况，尝试减少程序运行期的内存消耗。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-6027ce7fc1a45df90cbafc74ebd8dc3b.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"方法区的内部结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区的内部结构"}},[t._v("#")]),t._v(" 方法区的内部结构")]),t._v(" "),s("blockquote",[s("p",[t._v("不同JDK版本中，字符串常量池会有一些变化")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-d63e1c17f1c43adb998a7e54814f29b7.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"存储什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储什么"}},[t._v("#")]),t._v(" 存储什么")]),t._v(" "),s("p",[t._v("《深入理解Java虚拟机》书中对方法区（Method Area）存储内容描述如下：")]),t._v(" "),s("blockquote",[s("p",[t._v("它用于存储已被虚拟机加载的类型信息、常量、静态变量、即时编译器编译后的代码缓存等。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-242b48472be0a4fa4d901ec912319cda.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"类型信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型信息"}},[t._v("#")]),t._v(" 类型信息")]),t._v(" "),s("p",[t._v("对每个加载的类型（类class、接口interface、枚举enum、注解annotation），JVM必须在方法区中存储以下类型信息：")]),t._v(" "),s("ol",[s("li",[t._v("这个类型的完整有效名称（全名=包名.类名）")]),t._v(" "),s("li",[t._v("这个类型直接父类的完整有效名（对于interface或是java.lang.object，都没有父类）")]),t._v(" "),s("li",[t._v("这个类型的修饰符（public，abstract，final的某个子集）")]),t._v(" "),s("li",[t._v("这个类型直接接口的一个有序列表")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-d1947ee8b2d0c1ff5bfc6299e0339b11.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"域-field-信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#域-field-信息"}},[t._v("#")]),t._v(" 域（Field）信息")]),t._v(" "),s("p",[t._v("JVM必须在方法区中保存类型的所有域的相关信息以及域的声明顺序。")]),t._v(" "),s("p",[t._v("域的相关信息包括：域名称、域类型、域修饰符（public，private，protected，static，final，volatile，transient的某个子集）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-ad7f12ab87dbad7a70cf9d1c0a74b510.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"方法-method-信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法-method-信息"}},[t._v("#")]),t._v(" 方法（Method）信息")]),t._v(" "),s("p",[t._v("JVM必须保存所有方法的以下信息，同域信息一样包括声明顺序：")]),t._v(" "),s("ol",[s("li",[t._v("方法名称")]),t._v(" "),s("li",[t._v("方法的返回类型（或void）")]),t._v(" "),s("li",[t._v("方法参数的数量和类型（按顺序）")]),t._v(" "),s("li",[t._v("方法的修饰符（public，private，protected，static，final，synchronized，native，abstract的一个子集）")]),t._v(" "),s("li",[t._v("方法的字节码（bytecodes）、操作数栈、局部变量表及大小（abstract和native方法除外）")]),t._v(" "),s("li",[t._v("异常表（abstract和native方法除外）\n"),s("ul",[s("li",[t._v("每个异常处理的开始位置、结束位置、代码处理在程序计数器中的偏移地址、被捕获的异常类的常量池索引")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-22-e5cace118c54674d29f579d740fa1007.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"non-final的类变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#non-final的类变量"}},[t._v("#")]),t._v(" non-final的类变量")]),t._v(" "),s("ul",[s("li",[t._v("静态变量和类关联在一起，随着类的加载而加载，他们成为类数据在逻辑上的一部分")]),t._v(" "),s("li",[t._v("类变量被类的所有实例共享，即使没有类实例时，你也可以访问它")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodAreaTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),t._v(" order "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-23-ef84d700f206dfc3acc6d75dc12f338a.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("不会出现空指针异常")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-23-b517ef55d6445b0f506731b71ac4714d.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"补充说明-全局常量-static-final"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充说明-全局常量-static-final"}},[t._v("#")]),t._v(" 补充说明：全局常量（static final）")]),t._v(" "),s("p",[t._v("被声明为final的类变量的处理方法则不同，每个全局常量在编译的时候就会被分配了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-23-bed18dd978fde75bcf3cdcd77cabf3d7.png",alt:"image"}})]),t._v(" "),s("p",[t._v("常量在编译的时候，值都已经设置进去了，类变量是在链接的prepare阶段设置初始值，在initialize阶段进行设置值，对应clint方法")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-23-464c2819528305d0067183192af298d6.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"运行时常量池vs常量池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时常量池vs常量池"}},[t._v("#")]),t._v(" 运行时常量池vs常量池")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-23-b106902a229c2d5dc976557b26750d0d.png",alt:"image"}})]),t._v(" "),s("ul",[s("li",[t._v("方法区，内部包含了运行时常量池")]),t._v(" "),s("li",[t._v("字节码文件，内部包含了常量池")]),t._v(" "),s("li",[t._v("要弄清楚方法区，需要理解清楚ClassFile，因为加载类的信息都在方法区。")]),t._v(" "),s("li",[t._v("要弄清楚方法区的运行时常量池，需要理解清楚ClassFile中的常量池。")])]),t._v(" "),s("p",[t._v("官方文档：[https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html](")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-23-b90a0a01d43c9608380130dcd6f97ffb.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-23-fc4a91eaad24f9cbb20301ccf28a1373.png",alt:"image"}})]),t._v(" "),s("p",[t._v("一个有效的字节码文件中除了包含类的版本信息、字段、方法以及接口等描述符信息外，还包含一项信息就是常量池表（Constant Pool Table），包括各种字面量和对类型、域和方法的符号引用")]),t._v(" "),s("h4",{attrs:{id:"为什么需要常量池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要常量池"}},[t._v("#")]),t._v(" 为什么需要常量池")]),t._v(" "),s("p",[t._v("一个java源文件中的类、接口，编译后产生一个字节码文件。而Java中的字节码需要数据支持，通常这种数据会很大以至于不能直接存到字节码里，换另一种方式，可以存到常量池，这个字节码包含了指向常量池的引用。在动态链接的时候会用到运行时常量池，之前有介绍。")]),t._v(" "),s("p",[t._v("比如：如下的代码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("虽然只有194字节，但是里面却使用了String、System、PrintStream及Object等结构。这里的代码量其实很少了，如果代码多的话，引用的结构将会更多，这里就需要用到常量池了。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-23-e2e3aaf7be33ef3b159cefeee39b908c.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("如上面的文件，虽说class文件只有194，但是里面包含了很多其他的类，如果把所有的其他类都写在这个文件之中，那么这个文件，就会非常非常大，所以就只是写一个符号，在真正运行的时候，才会转换为直接引用了。")])]),t._v(" "),s("h4",{attrs:{id:"常量池里有什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量池里有什么"}},[t._v("#")]),t._v(" 常量池里有什么？")]),t._v(" "),s("p",[t._v("击中常量池内存储的数据类型包括：")]),t._v(" "),s("ul",[s("li",[t._v("数量值")]),t._v(" "),s("li",[t._v("字符串值")]),t._v(" "),s("li",[t._v("类引用")]),t._v(" "),s("li",[t._v("字段引用")]),t._v(" "),s("li",[t._v("方法引用")])]),t._v(" "),s("p",[t._v("例如下面这段代码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MethodAreaTest2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("Object obj = new Object();")]),t._v("将会被翻译成如下字节码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" #"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Class java/lang/Object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" dup\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" invokespecial "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Method java/lang/Object "<init>"() V')]),t._v("\n")])])]),s("h4",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("常量池、可以看做是一张表，虚拟机指令根据这张常量表找到要执行的类名、方法名、参数类型、字面量等类型")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-23-976faed5df8a1d80138a1547521ee882.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-23-b7fd2e51074f5ad7eca73a18ccd08423.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"运行时常量池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时常量池"}},[t._v("#")]),t._v(" 运行时常量池")]),t._v(" "),s("ul",[s("li",[t._v("运行时常量池（Runtime Constant Pool）是方法区的一部分。")]),t._v(" "),s("li",[s("mark",[t._v("常量池表（Constant Pool Table）是Class文件的一部分，用于存放编译期生成的各种字面量与符号引用，这部分内容将在类加载后存放到方法区的运行时常量池中。")])]),t._v(" "),s("li",[t._v("运行时常量池，在加载类和接口到虚拟机后，就会创建对应的运行时常量池。")]),t._v(" "),s("li",[t._v("JVM为每个已加载的类型（类或接口）都维护一个常量池。池中的数据项像数组项一样，是通过"),s("mark",[t._v("索引访问")]),t._v("的。")]),t._v(" "),s("li",[t._v("运行时常量池中包含多种不同的常量，包括编译期就已经明确的数值字面量，也包括到运行期解析后才能够获得的方法或者字段引用。此时不再是常量池中的符号地址了，这里换为"),s("mark",[t._v("真实地址")]),t._v("。")]),t._v(" "),s("li",[t._v("运行时常量池，相对于Class文件常量池的另一重要特征是：具备"),s("mark",[t._v("动态性")]),t._v("。")]),t._v(" "),s("li",[t._v("运行时常量池类似于传统编程语言中的符号表（symboltable），但是它所包含的数据却比符号表要更加丰富一些。")]),t._v(" "),s("li",[t._v("当创建类或接口的运行时常量池时，如果构造运行时常量池所需的内存空间超过了方法区所能提供的最大值，则JVM会抛OutOfMemoryError异常。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-23-2c12c37a217ce45c64882244c4b258ea.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("动态性")])]),t._v(" "),s("h2",{attrs:{id:"方法区的使用举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区的使用举例"}},[t._v("#")]),t._v(" 方法区的使用举例")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-05f647a141cd1a3c980e4d4fede9bcda.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-96e1bc4cf2dc03d1e54d62df2ca2b92d.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("常量池和方法定义，都会存到方法区的。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-4a26d07da14b283baa595f33265b1f24.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-0bf3687513e9d4c45c5e84eb9e704b5e.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-e0e9454577fc514cb2ae1e7b7f5acd86.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-b5a28796c21f2a63525a4beb6b612907.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-f9372d7ce1387695b6376806680a5bbc.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-b5a770047ec8aa448a8896ab5583d162.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-96a7b79ded6a05c318d72a8898c5bb79.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-42d56e5529befe91c04c7dfc1ed1e1f2.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-0600897df126146d3c8a558d1376ba9a.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-fc68c7308a08e6bcae42f2ff1601e779.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-920dc91c13dedadadbbf1c6df26abf17.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-8ba54483d391fab14355a7f4ab701dea.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("在这里就会看 这个 Java.lang.System是否载入到方法区了，如果没有，则加载，并且将这个符号引用转换为直接的引用了。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-6b832d9db02d1337992f33797005d828.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-17c28256c9bcb8f4992a4657f937927e.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-4ff20a6c16c2d3679e7f36943708296e.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-933de22ed4f5b86eaa023d1cd045d673.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"方法区的演进细节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区的演进细节"}},[t._v("#")]),t._v(" 方法区的演进细节")]),t._v(" "),s("ol",[s("li",[t._v("首先明确：只有Hotspot才有永久代。BEA JRockit、IBMJ9等来说，是不存在永久代的概念的。原则上如何实现方法区属于虚拟机实现细节，不受《Java虚拟机规范》管束，并不要求统一")]),t._v(" "),s("li",[t._v("Hotspot中方法区的变化：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("JDK1.6及之前")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("有永久代（permanet），静态变量存储在永久代上")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JDK1.7")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("有永久代，但已经逐步 “去永久代”，字符串常量池，静态变量移除，保存在堆中")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JDK1.8")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("无永久代，类型信息，字段，方法，常量保存在本地内存的元空间，但字符串常量池、静态变量仍然在堆中。")])])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-4990ff67729218bb5bb3b1e1ca3d748f.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"jdk6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk6"}},[t._v("#")]),t._v(" JDK6")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-9aff81a6e66a003d8710a7b975f48605.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"jdk7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk7"}},[t._v("#")]),t._v(" JDK7")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-418d51d6f9b7389f56995142eaeefdb7.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("此时，方法区永久代，还是使用的是虚拟机的内存")])]),t._v(" "),s("h3",{attrs:{id:"jdk8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk8"}},[t._v("#")]),t._v(" JDK8")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-fb1fc10a42925d924b656a403f9d2ad7.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"永久代为什么要被元空间替换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#永久代为什么要被元空间替换"}},[t._v("#")]),t._v(" 永久代为什么要被元空间替换？")]),t._v(" "),s("p",[t._v("官网地址：[JEP 122: Remove the Permanent Generation (java.net)](")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-f2b53f06c28515ee8619cb292fc13726.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("融合工作的一部分 hospot 和 jrocket 融合，oracle已经有这两个虚拟机了， 而jrocket，是没有永久代的，所以jrocket用户就不用配置永久代")])]),t._v(" "),s("p",[t._v("JRockit是和HotSpot融合后的结果，因为JRockit没有永久代，所以他们不需要配置永久代")]),t._v(" "),s("p",[t._v("随着Java8的到来，HotSpot VM中再也见不到永久代了。但是这并不意味着类的元数据信息也消失了。这些数据被移到了一个"),s("mark",[t._v("与堆不相连的本地内存区域，这个区域叫做元空间（Metaspace）")]),t._v("。")]),t._v(" "),s("p",[t._v("由于类的元数据分配在本地内存中，元空间的最大可分配空间就是系统可用内存空间。")]),t._v(" "),s("p",[t._v("这项改动是很有必要的，原因有：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("为永久代设置空间大小是很难确定的。在某些场景下，如果动态加载类过多，容易产生Perm区的oom。比如某个实际Web工 程中，因为功能点比较多，在运行过程中，要不断动态加载很多类，经常出现致命错误。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Exception in thread 'dubbo client x.x connector' java.lang.OutOfMemoryError:PermGen space\"")]),t._v("\n")])])]),s("p",[t._v("而元空间和永久代之间最大的区别在于：元空间并不在虚拟机中，而是使用本地内存。 因此，默认情况下，元空间的大小仅受本地内存限制。")])]),t._v(" "),s("li",[s("p",[t._v("对永久代进行调优是很困难的。")])])]),t._v(" "),s("p",[t._v("有些人认为方法区（如HotSpot虚拟机中的元空间或者永久代）是没有垃圾收集行为的，其实不然。《Java虚拟机规范》对方法区的约束是非常宽松的，提到过可以不要求虚拟机在方法区中实现垃圾收集。事实上也确实有未实现或未能完整实现方法区类型卸载的收集器存在（如JDK 11时期的ZGC收集器就不支持类卸载）。 一般来说这个区域的回收效果比较难令人满意，尤其是类型的卸载，条件相当苛刻。但是这部分区域的回收有时又确实是必要的。以前Sun公司的Bug列表中，曾出现过的若干个严重的Bug就是由于低版本的HotSpot虚拟机对此区域未完全回收而导致内存泄漏")]),t._v(" "),s("p",[t._v("方法区的垃圾收集主要回收两部分内容：常量池中废弃的常量和不再使用的类型")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-669e5b61c774ec7a78a0e06f600475d2.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"stringtable调整位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stringtable调整位置"}},[t._v("#")]),t._v(" StringTable调整位置")]),t._v(" "),s("p",[t._v("jdk7中将StringTable放到了堆空间中。因为永久代的回收效率很低，在full gc的时候才会触发。而full gc是老年代的空间不足、永久代不足时才会触发。")]),t._v(" "),s("p",[t._v("这就导致StringTable回收效率不高。而我们开发中会有大量的字符串被创建，回收效率低，导致永久代内存不足。放到堆里，能及时回收内存。")]),t._v(" "),s("h3",{attrs:{id:"_7-6-3-静态变量存放在那里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-3-静态变量存放在那里"}},[t._v("#")]),t._v(" 7.6.3. 静态变量存放在那里？")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 静态引用对应的对象实体始终都存在堆空间\n * jdk7:\n * -Xms200m -Xmx200m -XX:PermSize=300m -XX:MaxPermSize=300m -XX:+PrintGCDetails\n * jdk8:\n * -Xms200m -Xmx200m-XX:MetaspaceSize=300m -XX:MaxMetaspaceSize=300m -XX:+PrintGCDetails\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StaticFieldTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StaticFieldTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * staticobj、instanceobj、Localobj存放在哪里？\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StaticobjTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectHolder")]),t._v(" staticobj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectHolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectHolder")]),t._v(" instanceobj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectHolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectHolder")]),t._v(" localobj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectHolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"done"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectHolder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" test "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StaticobjTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("使用JHSDB工具进行分析，这里细节略掉")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-bb08c24cc92c56500538e3822e795899.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"静态变量存在哪里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态变量存在哪里"}},[t._v("#")]),t._v(" 静态变量存在哪里")]),t._v(" "),s("h4",{attrs:{id:"例1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例1"}},[t._v("#")]),t._v(" 例1")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-a7fbe93c53210a8ead85d2e0dca702f3.png",alt:"image"}})]),t._v(" "),s("h5",{attrs:{id:"jdk7-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk7-2"}},[t._v("#")]),t._v(" JDK7")]),t._v(" "),s("blockquote",[s("p",[t._v("进入到老年代")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-a9c33dee6cf216711c5fbbfcf48e9edb.png",alt:"image"}})]),t._v(" "),s("h5",{attrs:{id:"jdk6-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk6-2"}},[t._v("#")]),t._v(" JDK6")]),t._v(" "),s("blockquote",[s("p",[t._v("放入到老年代")]),t._v(" "),s("p",[t._v("对于对象，始终放在堆空间")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-81285debb59383acb659637438e912e1.png",alt:"image"}})]),t._v(" "),s("h5",{attrs:{id:"jdk8-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk8-2"}},[t._v("#")]),t._v(" JDK8")]),t._v(" "),s("blockquote",[s("p",[t._v("都是放在老年代")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-cd4ee41b40faa4679277f733f6cf8365.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"例2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例2"}},[t._v("#")]),t._v(" 例2")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-3f334300772de3a1f5af36089bb83dcc.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-747656dd3692694aba0d99195841b41a.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-8975cde3462e7d8d55e9374e19276738.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"方法区的垃圾回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区的垃圾回收"}},[t._v("#")]),t._v(" 方法区的垃圾回收")]),t._v(" "),s("p",[t._v("有些人认为方法区（如Hotspot虚拟机中的元空间或者永久代）是没有垃圾收集行为的，其实不然。《Java虚拟机规范》对方法区的约束是非常宽松的，提到过可以不要求虚拟机在方法区中实现垃圾收集。事实上也确实有未实现或未能完整实现方法区类型卸载的收集器存在（如JDK11时期的zGC收集器就不支持类卸载）。")]),t._v(" "),s("p",[t._v("一般来说"),s("mark",[t._v("这个区域的回收效果比较难令人满意，尤其是类型的卸载，条件相当苛刻")]),t._v("。但是这部分区域的回收"),s("mark",[t._v("有时又确实是必要的")]),t._v("。以前sun公司的Bug列表中，曾出现过的若干个严重的Bug就是由于低版本的HotSpot虚拟机对此区域未完全回收而导致内存泄漏。")]),t._v(" "),s("p",[s("mark",[t._v("方法区的垃圾收集主要回收两部分内容：常量池中废弃的常量和不再使用的类型。")])]),t._v(" "),s("p",[t._v("先来说说方法区内常量池之中主要存放的两大类常量：字面量和符号引用。字面量比较接近Java语言层次的常量概念，如文本字符串、被声明为final的常量值等。而符号引用则属于编译原理方面的概念，包括下面三类常量：")]),t._v(" "),s("ul",[s("li",[t._v("类和接口的全限定名")]),t._v(" "),s("li",[t._v("字段的名称和描述符")]),t._v(" "),s("li",[t._v("方法的名称和描述符")])]),t._v(" "),s("p",[t._v("HotSpot虚拟机对常量池的回收策略是很明确的，"),s("mark",[t._v("只要常量池中的常量没有被任何地方引用，就可以被回收")]),t._v("。")]),t._v(" "),s("p",[t._v("回收废弃常量与回收Java堆中的对象非常类似。")]),t._v(" "),s("p",[t._v("判定一个常量是否“废弃”还是相对简单，而要判定一个类型是否属于“不再被使用的类”的条件就比较苛刻了。需要同时满足下面三个条件：")]),t._v(" "),s("ul",[s("li",[s("p",[s("mark",[t._v("该类所有的实例都已经被回收")]),t._v("，也就是Java堆中不存在该类及其任何派生子类的实例。")])]),t._v(" "),s("li",[s("p",[s("mark",[t._v("加载该类的类加载器已经被回收")]),t._v("，这个条件除非是经过精心设计的可替换类加载器的场景，如OSGi、JSP的重加载等，否则通常是很难达成的。")])]),t._v(" "),s("li",[s("p",[s("mark",[t._v("该类对应的java.lang.Class对象没有在任何地方被引用")]),t._v("，无法在任何地方通过反射访问该类的方法。")])])]),t._v(" "),s("p",[t._v("Java虚拟机被允许对满足上述三个条件的无用类进行回收，这里说的仅仅是“被允许”，而并不是和对象一样，没有引用了就必然会回收。关于是否要对类型进行回收，HotSpot虚拟机提供了"),s("code",[t._v("-Xnoclassgc")]),t._v("参数进行控制，还可以使用"),s("code",[t._v("-verbose:class")]),t._v(" 以及 "),s("code",[t._v("-XX:+TraceClassLoading")]),t._v("、"),s("code",[t._v("-XX:+TraceClassUnLoading")]),t._v("查看类加载和卸载信息")]),t._v(" "),s("p",[t._v("在大量使用反射、动态代理、CGLib等字节码框架，动态生成JSP以及OSGi这类频繁自定义类加载器的场景中，通常都需要Java虚拟机具备类型卸载的能力，以保证不会对方法区造成过大的内存压力。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-24-98ad7e72a0600dd029ffbb368412e03d.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-b015419416b8ff788cdd2822f1440b54.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-6bc33c879cd322f5688078be6bbd23af.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-333766685d33993aaf03567e96216d2c.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("方法区是虚拟机规范中的一个定义，具体实现看不同厂商的实现")])]),t._v(" "),s("h2",{attrs:{id:"面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[t._v("#")]),t._v(" 面试题")]),t._v(" "),s("p",[s("mark",[t._v("百度")]),t._v("：")]),t._v(" "),s("p",[t._v("说一下JVM内存模型吧，有哪些区？分别干什么的？")]),t._v(" "),s("p",[s("mark",[t._v("蚂蚁金服")]),t._v("：")]),t._v(" "),s("p",[t._v("Java8的内存分代改进 JVM内存分哪几个区，每个区的作用是什么？")]),t._v(" "),s("p",[t._v("一面：JVM内存分布/内存结构？栈和堆的区别？堆的结构？为什么两个survivor区？")]),t._v(" "),s("p",[t._v("二面：Eden和survior的比例分配")]),t._v(" "),s("p",[s("mark",[t._v("小米")]),t._v("：")]),t._v(" "),s("p",[t._v("jvm内存分区，为什么要有新生代和老年代")]),t._v(" "),s("p",[s("mark",[t._v("字节跳动")]),t._v("：")]),t._v(" "),s("p",[t._v("二面：Java的内存分区")]),t._v(" "),s("p",[t._v("二面：讲讲vm运行时数据库区 什么时候对象会进入老年代？")]),t._v(" "),s("p",[s("mark",[t._v("京东")]),t._v("：")]),t._v(" "),s("p",[t._v("JVM的内存结构，Eden和Survivor比例。")]),t._v(" "),s("p",[t._v("JVM内存为什么要分成新生代，老年代，持久代。")]),t._v(" "),s("p",[t._v("新生代中为什么要分为Eden和survivor。")]),t._v(" "),s("p",[s("mark",[t._v("天猫")]),t._v("：")]),t._v(" "),s("p",[t._v("一面：Jvm内存模型以及分区，需要详细到每个区放什么。")]),t._v(" "),s("p",[t._v("一面：JVM的内存模型，Java8做了什么改")]),t._v(" "),s("p",[s("mark",[t._v("拼多多")]),t._v("：")]),t._v(" "),s("p",[t._v("JVM内存分哪几个区，每个区的作用是什么？")]),t._v(" "),s("p",[s("mark",[t._v("美团")]),t._v("：")]),t._v(" "),s("p",[t._v("java内存分配 jvm的永久代中会发生垃圾回收吗？")]),t._v(" "),s("p",[t._v("一面：jvm内存分区，为什么要有新生代和老年代？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-a420dbb15fc0df84b156c927cc95b54d.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-0d5e1e5b948da9672d0836f9a5e8e98b.png",alt:"image"}})])])}),[],!1,null,null,null);a.default=n.exports}}]);