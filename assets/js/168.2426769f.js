(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{629:function(a,s,t){"use strict";t.r(s);var n=t(14),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"第四章、再谈类的加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第四章、再谈类的加载器"}},[a._v("#")]),a._v(" 第四章、再谈类的加载器")]),a._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-概述"}},[a._v("4.1. 概述")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-1-类加载器的分类"}},[a._v("4.1.1. 类加载器的分类")])]),t("li",[t("a",{attrs:{href:"#_4-1-2-类加载器的必要性"}},[a._v("4.1.2. 类加载器的必要性")])]),t("li",[t("a",{attrs:{href:"#_4-1-3-命名空间"}},[a._v("4.1.3. 命名空间")])]),t("li",[t("a",{attrs:{href:"#_4-1-4-类加载机制的基本特征"}},[a._v("4.1.4. 类加载机制的基本特征")])]),t("li",[t("a",{attrs:{href:"#_4-1-5-类加载器之间的关系"}},[a._v("4.1.5. 类加载器之间的关系")])])])]),t("li",[t("a",{attrs:{href:"#_4-2-类的加载器分类"}},[a._v("4.2. 类的加载器分类")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-2-1-引导类加载器"}},[a._v("4.2.1. 引导类加载器")])]),t("li",[t("a",{attrs:{href:"#_4-2-2-扩展类加载器"}},[a._v("4.2.2. 扩展类加载器")])]),t("li",[t("a",{attrs:{href:"#_4-2-3-系统类加载器"}},[a._v("4.2.3. 系统类加载器")])]),t("li",[t("a",{attrs:{href:"#_4-2-4-用户自定义类加载器"}},[a._v("4.2.4. 用户自定义类加载器")])])])]),t("li",[t("a",{attrs:{href:"#_4-3-测试不同的类的加载器"}},[a._v("4.3. 测试不同的类的加载器")])]),t("li",[t("a",{attrs:{href:"#_4-4-classloader源码解析"}},[a._v("4.4. ClassLoader源码解析")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-4-1-classloader的主要方法"}},[a._v("4.4.1. ClassLoader的主要方法")])]),t("li",[t("a",{attrs:{href:"#_4-4-2-secureclassloader与urlclassloader"}},[a._v("4.4.2. SecureClassLoader与URLClassLoader")])]),t("li",[t("a",{attrs:{href:"#_4-4-3-extclassloader与appclassloader"}},[a._v("4.4.3. ExtClassLoader与AppClassLoader")])]),t("li",[t("a",{attrs:{href:"#_4-4-4-class-forname-与classloader-loadclass"}},[a._v("4.4.4. Class.forName()与ClassLoader.loadClass()")])])])]),t("li",[t("a",{attrs:{href:"#_4-5-双亲委派模型"}},[a._v("4.5. 双亲委派模型")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-5-1-定义与本质"}},[a._v("4.5.1. 定义与本质")])]),t("li",[t("a",{attrs:{href:"#_4-5-2-优势与劣势"}},[a._v("4.5.2. 优势与劣势")])]),t("li",[t("a",{attrs:{href:"#_4-5-3-破坏双亲委派机制"}},[a._v("4.5.3. 破坏双亲委派机制")])]),t("li",[t("a",{attrs:{href:"#_4-5-4-热替换的实现"}},[a._v("4.5.4. 热替换的实现")])])])]),t("li",[t("a",{attrs:{href:"#_4-6-沙箱安全机制"}},[a._v("4.6. 沙箱安全机制")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-6-1-jdk1-0时期"}},[a._v("4.6.1. JDK1.0时期")])]),t("li",[t("a",{attrs:{href:"#_4-6-2-jdk1-1时期"}},[a._v("4.6.2. JDK1.1时期")])]),t("li",[t("a",{attrs:{href:"#_4-6-3-jdk1-2时期"}},[a._v("4.6.3. JDK1.2时期")])]),t("li",[t("a",{attrs:{href:"#_4-6-4-jdk1-6时期"}},[a._v("4.6.4. JDK1.6时期")])])])]),t("li",[t("a",{attrs:{href:"#_4-7-自定义类的加载器"}},[a._v("4.7. 自定义类的加载器")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-7-1-为什么要自定义类加载器"}},[a._v("4.7.1. 为什么要自定义类加载器？")])]),t("li",[t("a",{attrs:{href:"#_4-7-2-实现方式"}},[a._v("4.7.2. 实现方式")])])])]),t("li",[t("a",{attrs:{href:"#_4-8-java9新特性"}},[a._v("4.8. Java9新特性")])])])]),t("p"),a._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-概述"}},[a._v("4.1. 概述")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-1-类加载器的分类"}},[a._v("4.1.1. 类加载器的分类")])]),t("li",[t("a",{attrs:{href:"#_4-1-2-类加载器的必要性"}},[a._v("4.1.2. 类加载器的必要性")])]),t("li",[t("a",{attrs:{href:"#_4-1-3-命名空间"}},[a._v("4.1.3. 命名空间")])]),t("li",[t("a",{attrs:{href:"#_4-1-4-类加载机制的基本特征"}},[a._v("4.1.4. 类加载机制的基本特征")])]),t("li",[t("a",{attrs:{href:"#_4-1-5-类加载器之间的关系"}},[a._v("4.1.5. 类加载器之间的关系")])])])]),t("li",[t("a",{attrs:{href:"#_4-2-类的加载器分类"}},[a._v("4.2. 类的加载器分类")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-2-1-引导类加载器"}},[a._v("4.2.1. 引导类加载器")])]),t("li",[t("a",{attrs:{href:"#_4-2-2-扩展类加载器"}},[a._v("4.2.2. 扩展类加载器")])]),t("li",[t("a",{attrs:{href:"#_4-2-3-系统类加载器"}},[a._v("4.2.3. 系统类加载器")])]),t("li",[t("a",{attrs:{href:"#_4-2-4-用户自定义类加载器"}},[a._v("4.2.4. 用户自定义类加载器")])])])]),t("li",[t("a",{attrs:{href:"#_4-3-测试不同的类的加载器"}},[a._v("4.3. 测试不同的类的加载器")])]),t("li",[t("a",{attrs:{href:"#_4-4-classloader源码解析"}},[a._v("4.4. ClassLoader源码解析")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-4-1-classloader的主要方法"}},[a._v("4.4.1. ClassLoader的主要方法")])]),t("li",[t("a",{attrs:{href:"#_4-4-2-secureclassloader与urlclassloader"}},[a._v("4.4.2. SecureClassLoader与URLClassLoader")])]),t("li",[t("a",{attrs:{href:"#_4-4-3-extclassloader与appclassloader"}},[a._v("4.4.3. ExtClassLoader与AppClassLoader")])]),t("li",[t("a",{attrs:{href:"#_4-4-4-class-forname-与classloader-loadclass"}},[a._v("4.4.4. Class.forName()与ClassLoader.loadClass()")])])])]),t("li",[t("a",{attrs:{href:"#_4-5-双亲委派模型"}},[a._v("4.5. 双亲委派模型")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-5-1-定义与本质"}},[a._v("4.5.1. 定义与本质")])]),t("li",[t("a",{attrs:{href:"#_4-5-2-优势与劣势"}},[a._v("4.5.2. 优势与劣势")])]),t("li",[t("a",{attrs:{href:"#_4-5-3-破坏双亲委派机制"}},[a._v("4.5.3. 破坏双亲委派机制")])]),t("li",[t("a",{attrs:{href:"#_4-5-4-热替换的实现"}},[a._v("4.5.4. 热替换的实现")])])])]),t("li",[t("a",{attrs:{href:"#_4-6-沙箱安全机制"}},[a._v("4.6. 沙箱安全机制")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-6-1-jdk1-0时期"}},[a._v("4.6.1. JDK1.0时期")])]),t("li",[t("a",{attrs:{href:"#_4-6-2-jdk1-1时期"}},[a._v("4.6.2. JDK1.1时期")])]),t("li",[t("a",{attrs:{href:"#_4-6-3-jdk1-2时期"}},[a._v("4.6.3. JDK1.2时期")])]),t("li",[t("a",{attrs:{href:"#_4-6-4-jdk1-6时期"}},[a._v("4.6.4. JDK1.6时期")])])])]),t("li",[t("a",{attrs:{href:"#_4-7-自定义类的加载器"}},[a._v("4.7. 自定义类的加载器")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-7-1-为什么要自定义类加载器"}},[a._v("4.7.1. 为什么要自定义类加载器？")])]),t("li",[t("a",{attrs:{href:"#_4-7-2-实现方式"}},[a._v("4.7.2. 实现方式")])])])]),t("li",[t("a",{attrs:{href:"#_4-8-java9新特性"}},[a._v("4.8. Java9新特性")])])])]),t("p"),a._v(" "),t("h1",{attrs:{id:"_4-再谈类的加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-再谈类的加载器"}},[a._v("#")]),a._v(" 4. 再谈类的加载器")]),a._v(" "),t("h2",{attrs:{id:"_4-1-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-概述"}},[a._v("#")]),a._v(" 4.1. 概述")]),a._v(" "),t("p",[a._v("类加载器是JVM执行类加载机制的前提。")]),a._v(" "),t("p",[t("strong",[a._v("ClassLoader的作用：")])]),a._v(" "),t("p",[a._v("ClassLoader是Java的核心组件，所有的Class都是由ClassLoader进行加载的，ClassLoader负责通过各种方式将Class信息的二进制数据流读入JVM内部，转换为一个与目标类对应的java.lang.Class对象实例。然后交给Java虚拟机进行链接、初始化等操作。因此，ClassLoader在整个装载阶段，只能影响到类的加载，而无法通过ClassLoader去改变类的链接和初始化行为。至于它是否可以运行，则由Execution Engine决定。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-a23a7e41841b1675a3635b891271001b.png",alt:"image"}})]),a._v(" "),t("p",[t("strong",[a._v("大厂面试题")])]),a._v(" "),t("blockquote",[t("p",[t("mark",[a._v("蚂蚁金服：")])]),a._v(" "),t("p",[a._v("深入分析ClassLoader，双亲委派机制")]),a._v(" "),t("p",[a._v("类加载器的双亲委派模型是什么？一面：双亲委派机制及使用原因")]),a._v(" "),t("p",[t("mark",[a._v("百度：")])]),a._v(" "),t("p",[a._v("都有哪些类加载器，这些类加载器都加载哪些文件？")]),a._v(" "),t("p",[a._v("手写一个类加载器Demo")]),a._v(" "),t("p",[a._v("Class的forName（“java.lang.String”）和Class的getClassLoader（）的Loadclass（“java.lang.String”）有什么区别？")]),a._v(" "),t("p",[t("mark",[a._v("腾讯：")])]),a._v(" "),t("p",[a._v("什么是双亲委派模型？")]),a._v(" "),t("p",[a._v("类加载器有哪些？")]),a._v(" "),t("p",[t("mark",[a._v("小米：")])]),a._v(" "),t("p",[a._v("双亲委派模型介绍一下")]),a._v(" "),t("p",[t("mark",[a._v("滴滴：")])]),a._v(" "),t("p",[a._v("简单说说你了解的类加载器一面：讲一下双亲委派模型，以及其优点")]),a._v(" "),t("p",[t("mark",[a._v("字节跳动：")])]),a._v(" "),t("p",[a._v("什么是类加载器，类加载器有哪些？")]),a._v(" "),t("p",[t("mark",[a._v("京东：")])]),a._v(" "),t("p",[a._v("类加载器的双亲委派模型是什么？")]),a._v(" "),t("p",[a._v("双亲委派机制可以打破吗？为什么")])]),a._v(" "),t("h3",{attrs:{id:"_4-1-1-类加载器的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-类加载器的分类"}},[a._v("#")]),a._v(" 4.1.1. 类加载器的分类")]),a._v(" "),t("p",[a._v("类的加载分类：显式加载 vs 隐式加载")]),a._v(" "),t("p",[a._v("class文件的显式加载与隐式加载的方式是指JVM加载class文件到内存的方式。")]),a._v(" "),t("ul",[t("li",[a._v("显式加载指的是在代码中通过调用ClassLoader加载class对象，如直接使用Class.forName(name)或this.getClass().getClassLoader().loadClass()加载class对象。")]),a._v(" "),t("li",[a._v("隐式加载则是不直接在代码中调用ClassLoader的方法加载class对象，而是通过虚拟机自动加载到内存中，如在加载某个类的class文件时，该类的class文件中引用了另外一个类的对象，此时额外引用的类将通过JVM自动加载到内存中。")])]),a._v(" "),t("p",[a._v("在日常开发以上两种方式一般会混合使用。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//隐式加载")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("User")]),a._v(" user"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("User")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//显式加载，并初始化")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" clazz"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("forName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"com.test.java.User"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//显式加载，但不初始化")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSystemClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"com.test.java.Parent"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),t("h3",{attrs:{id:"_4-1-2-类加载器的必要性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2-类加载器的必要性"}},[a._v("#")]),a._v(" 4.1.2. 类加载器的必要性")]),a._v(" "),t("p",[a._v("一般情况下，Java开发人员并不需要在程序中显式地使用类加载器，但是了解类加载器的加载机制却显得至关重要。从以下几个方面说：")]),a._v(" "),t("ul",[t("li",[a._v("避免在开发中遇到java.lang.ClassNotFoundException异常或java.lang.NoClassDefFoundError异常时，手足无措。只有了解类加载器的 加载机制才能够在出现异常的时候快速地根据错误异常日志定位问题和解决问题")]),a._v(" "),t("li",[a._v("需要支持类的动态加载或需要对编译后的字节码文件进行加解密操作时，就需要与类加载器打交道了。")]),a._v(" "),t("li",[a._v("开发人员可以在程序中编写自定义类加载器来重新定义类的加载规则，以便实现一些自定义的处理逻辑。")])]),a._v(" "),t("h3",{attrs:{id:"_4-1-3-命名空间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-3-命名空间"}},[a._v("#")]),a._v(" 4.1.3. 命名空间")]),a._v(" "),t("p",[t("strong",[a._v("何为类的唯一性？")])]),a._v(" "),t("p",[a._v("$\\color{red}{对于任意一个类，都需要由加载它的类加载器和这个类本身一同确认其在Java虚拟机中的唯一性。}$每一个类加载器，都拥有一个独立的类名称空间：$\\color{red}{比较两个类是否相等，只有在这两个类是由同一个类加载器加载的前提下才有意义。}$否则，即使这两个类源自同一个Class文件，被同一个虚拟机加载，只要加载他们的类加载器不同，那这两个类就必定不相等。")]),a._v(" "),t("p",[t("strong",[a._v("命名空间")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("每个类加载器都有自己的命名空间，命名空间由该加载器及所有的父加载器所加载的类组成")])]),a._v(" "),t("li",[t("p",[a._v("在同一命名空间中，不会出现类的完整名字（包括类的包名）相同的两个类")])]),a._v(" "),t("li",[t("p",[a._v("在不同的命名空间中，有可能会出现类的完整名字（包括类的包名）相同的两个类")])])]),a._v(" "),t("p",[a._v("在大型应用中，我们往往借助这一特性，来运行同一个类的不同版本。")]),a._v(" "),t("h3",{attrs:{id:"_4-1-4-类加载机制的基本特征"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-4-类加载机制的基本特征"}},[a._v("#")]),a._v(" 4.1.4. 类加载机制的基本特征")]),a._v(" "),t("p",[a._v("双亲委派模型。但不是所有类加载都遵守这个模型，有的时候，启动类加载器所加载的类型，是可能要加载用户代码的，比如JDK内部的ServiceProvider/ServiceLoader机制，用户可以在标准API框架上，提供自己的实现，JDK也需要提供些默认的参考实现。例如，Java中JNDI、JDBC、文件系统、Cipher等很多方面，都是利用的这种机制，这种情况就不会用双亲委派模型去加载，而是利用所谓的上下文加载器。")]),a._v(" "),t("p",[t("mark",[a._v("可见性")]),a._v("，子类加载器可以访问父加载器加载的类型，但是反过来是不允许的。不然，因为缺少必要的隔离，我们就没有办法利用类加载器去实现容器的逻辑。")]),a._v(" "),t("p",[t("mark",[a._v("单一性")]),a._v("，由于父加载器的类型对于子加载器是可见的，所以父加载器中加载过的类型，就不会在子加载器中重复加载。但是注意，类加载器“邻居”间，同一类型仍然可以被加载多次，因为互相并不可见。")]),a._v(" "),t("h3",{attrs:{id:"_4-1-5-类加载器之间的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-5-类加载器之间的关系"}},[a._v("#")]),a._v(" 4.1.5. 类加载器之间的关系")]),a._v(" "),t("p",[a._v("Launcher类核心代码")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Launcher")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ExtClassLoader")]),a._v(" var1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    var1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Launcher")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ExtClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getExtClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IOException")]),a._v(" var10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InternalError")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Could not create extension class loader"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" var10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("loader "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Launcher")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AppClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getAppClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("var1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IOException")]),a._v(" var9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InternalError")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Could not create application class loader"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" var9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setContextClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("loader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("ul",[t("li",[t("p",[t("strong",[a._v("ExtClassLoader的Parent类是null")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("AppClassLoader的Parent类是ExtClassLoader")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("当前线程的ClassLoader是AppClassLoader")])])])]),a._v(" "),t("p",[a._v("$\\color{red}{注意，这里的Parent类并不是Java语言意义上的继承关系，而是一种包含关系}$")]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"_4-2-类的加载器分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-类的加载器分类"}},[a._v("#")]),a._v(" 4.2. 类的加载器分类")]),a._v(" "),t("p",[a._v("JVM支持两种类型的类加载器，分别为引导类加载器（Bootstrap ClassLoader）和自定义类加载器（User-Defined ClassLoader）。")]),a._v(" "),t("p",[a._v("从概念上来讲，自定义类加载器一般指的是程序中由开发人员自定义的一类类加载器，但是Java虚拟机规范却没有这么定义，而是将所有派生于抽象类ClassLoader的类加载器都划分为自定义类加载器。无论类加载器的类型如何划分，在程序中我们最常见的类加载器结构主要是如下情况：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-cbec43eb5981e04bcfb2ef9930af801f.png",alt:"image"}})]),a._v(" "),t("ul",[t("li",[a._v("除了顶层的启动类加载器外，其余的类加载器都应当有自己的“父类”加戟器。")]),a._v(" "),t("li",[a._v("不同类加载器看似是继承（Inheritance）关系，实际上是包含关系。在下层加载器中，包含着上层加载器的引用。")])]),a._v(" "),t("p",[a._v("父类加载器和子类加载器的关系：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//父类加载器")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ParentClassLoader")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ParentClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ChildClassLoader")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ChildClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//parent = new ParentClassLoader();")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("正是由于子类加载器中包含着父类加载器的引用，所以可以通过子类加载器的方法获取对应的父类加载器")]),a._v(" "),t("p",[t("strong",[a._v("注意：")])]),a._v(" "),t("p",[a._v("启动类加载器通过C/C++语言编写，而自定义类加载器都是由Java语言编写的，虽然扩展类加载器和应用程序类加载器是被jdk开发人员使用java语言来编写的，但是也是由java语言编写的，所以也被称为自定义类加载器")]),a._v(" "),t("h3",{attrs:{id:"_4-2-1-引导类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-引导类加载器"}},[a._v("#")]),a._v(" 4.2.1. 引导类加载器")]),a._v(" "),t("p",[t("mark",[a._v("启动类加载器（引导类加载器，Bootstrap ClassLoader）")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("这个类加载使用C/C++语言实现的，嵌套在JVM内部。")])]),a._v(" "),t("li",[t("p",[a._v("它用来加载Java的核心库（JAVAHOME/jre/lib/rt.jar或sun.boot.class.path路径下的内容）。用于提供JVM自身需要的类。")])]),a._v(" "),t("li",[t("p",[a._v("并不继承自java.lang.ClassLoader，没有父加载器。")])]),a._v(" "),t("li",[t("p",[a._v("出于安全考虑，Bootstrap启动类加载器只加载包名为java、javax、sun等开头的类")])]),a._v(" "),t("li",[t("p",[a._v("加载扩展类和应用程序类加载器，并指定为他们的父类加载器。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-2b4b84f416fee96dd82061fe4d318162.png",alt:"image"}}),a._v(" "),t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-ed7e141dc7634a368c83233606ec78c7.png",alt:"image"}}),a._v("\n使用-XX:+TraceClassLoading参数得到。")])])]),a._v(" "),t("p",[a._v("启动类加载器使用C++编写的？Yes！")]),a._v(" "),t("ul",[t("li",[a._v("C/C++：指针函数&函数指针、C++支持多继承、更加高效")]),a._v(" "),t("li",[a._v("Java：由C++演变而来，（C++）–版，单继承")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"＊＊＊＊＊＊＊＊＊＊启动类加载器＊＊＊＊＊＊＊＊＊＊"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获取BootstrapclassLoader能够加载的api的路径")]),a._v("\nURL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" urLs "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("misc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Launcher")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBootstrapcLassPath")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getURLs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("URL element "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" urLs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("element"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("toExternalForm")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 从上面的路径中随意选择一个类，来看看他的类加载器是什么：引导类加载器")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" classLoader "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("security"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Provider")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("classLoader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[t("strong",[a._v("执行结果：")]),a._v(" "),t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-3381e1754438c8aa9b9a5e1556826555.png",alt:"image"}})]),a._v(" "),t("h3",{attrs:{id:"_4-2-2-扩展类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-扩展类加载器"}},[a._v("#")]),a._v(" 4.2.2. 扩展类加载器")]),a._v(" "),t("p",[t("mark",[a._v("扩展类加载器（Extension ClassLoader）")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Java语言编写，由sun.misc.Launcher$ExtClassLoader实现。")])]),a._v(" "),t("li",[t("p",[a._v("继承于ClassLoader类")])]),a._v(" "),t("li",[t("p",[a._v("父类加载器为启动类加载器")])]),a._v(" "),t("li",[t("p",[a._v("从java.ext.dirs系统属性所指定的目录中加载类库，或从JDK的安装目录的jre/lib/ext子目录下加载类库。如果用户创建的JAR放在此目录下，也会自动由扩展类加载器加载。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-b30656b8257a2a87b29cb9030f3c823c.png",alt:"image"}})])])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"＊＊＊＊＊＊＊＊＊＊＊扩展类加载器＊＊＊＊＊＊＊＊＊＊＊"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" extDirs "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getProperty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"java.ext.dirs"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" path "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("extDirs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("split")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" regex"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('";"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 从上面的路径中随意选择一个类，来看看他的类加载器是什么：扩展类加载器")]),a._v("\nlassLoader classLoader1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("security"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CurveDB")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("print1n")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("classLoader1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//sun.misc. Launcher$ExtCLassLoader@1540e19d")]),a._v("\n")])])]),t("p",[t("strong",[a._v("执行结果：")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-318998a272ea8150c027ae317df3e9c3.png",alt:"image"}})]),a._v(" "),t("h3",{attrs:{id:"_4-2-3-系统类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-系统类加载器"}},[a._v("#")]),a._v(" 4.2.3. 系统类加载器")]),a._v(" "),t("p",[t("mark",[a._v("应用程序类加载器（系统类加载器，AppClassLoader）")])]),a._v(" "),t("ul",[t("li",[a._v("java语言编写，由sun.misc.Launcher$AppClassLoader实现")]),a._v(" "),t("li",[a._v("继承于ClassLoader类")]),a._v(" "),t("li",[a._v("父类加载器为扩展类加载器")]),a._v(" "),t("li",[a._v("它负责加载环境变量classpath或系统属性java.class.path 指定路径下的类库")]),a._v(" "),t("li",[a._v("$\\color{red}{应用程序中的类加载器默认是系统类加载器。}$")]),a._v(" "),t("li",[a._v("它是用户自定义类加载器的默认父加载器")]),a._v(" "),t("li",[a._v("通过ClassLoader的getSystemClassLoader()方法可以获取到该类加载器")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-a9e401047e8a1a4da94d0adb9f03e465.png",alt:"image"}})]),a._v(" "),t("h3",{attrs:{id:"_4-2-4-用户自定义类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-4-用户自定义类加载器"}},[a._v("#")]),a._v(" 4.2.4. 用户自定义类加载器")]),a._v(" "),t("p",[t("mark",[a._v("用户自定义类加载器")])]),a._v(" "),t("ul",[t("li",[a._v("在Java的日常应用程序开发中，类的加载几乎是由上述3种类加载器相互配合执行的。在必要时，我们还可以自定义类加载器，来定制类的加载方式。")]),a._v(" "),t("li",[a._v("体现Java语言强大生命力和巨大魅力的关键因素之一便是，Java开发者可以自定义类加载器来实现类库的动态加载，加载源可以是本地的JAR包，也可以是网络上的远程资源。")]),a._v(" "),t("li",[a._v("$\\color{red}{通过类加载器可以实现非常绝妙的插件机制}$，这方面的实际应用案例举不胜举。例如，著名的OSGI组件框架，再如Eclipse的插件机制。类加载器为应用程序提供了一种动态增加新功能的机制，这种机制无须重新打包发布应用程序就能实现。")]),a._v(" "),t("li",[a._v("同时，$\\color{red}{自定义加载器能够实现应用隔离}$，例如Tomcat，Spring等中间件和组件框架都在内部实现了自定义的加载器，并通过自定义加载器隔离不同的组件模块。这种机制比C/C++程序要好太多，想不修改C/C++程序就能为其新增功能，几乎是不可能的，仅仅一个兼容性便能阻挡住所有美好的设想。")]),a._v(" "),t("li",[a._v("自定义类加载器通常需要继承于ClassLoader。")])]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"_4-3-测试不同的类的加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-测试不同的类的加载器"}},[a._v("#")]),a._v(" 4.3. 测试不同的类的加载器")]),a._v(" "),t("p",[a._v("每个Class对象都会包含一个定义它的ClassLoader的一个引用。\n"),t("strong",[a._v("获取ClassLoader的途径")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获得当前类的ClassLoader")]),a._v("\nclazz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获得当前线程上下文的ClassLoader")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getContextClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获得系统的ClassLoader")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSystemClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[t("strong",[a._v("说明：")])]),a._v(" "),t("ul",[t("li",[a._v("站在程序的角度看，引导类加载器与另外两种类加载器（系统类加载器和扩展类加载器）并不是同一个层次意义上的加\n载器，引导类加载器是使用C++语言编写而成的，而另外两种类加载器则是使用Java语言编写而成的。由于引导类加载\n器压根儿就不是一个Java类，因此在Java程序中只能打印出空值。")]),a._v(" "),t("li",[a._v("数组类的Class对象，不是由类加载器去创建的，而是在Java运行期JVM根据需要自动创建的。对于数组类的类加载器\n来说，是通过Class.getClassLoader()返回的，与数组当中元素类型的类加载器是一样的；如果数组当中的元素类型\n是基本数据类型，数组类是没有类加载器的。")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 运行结果：null")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" strArr "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("strArr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 运行结果：sun．misc．Launcher＄AppCLassLoader＠18b4aac2")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoaderTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" test"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoaderTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 运行结果：null")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("ints "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("ints"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[t("strong",[a._v("代码：")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoaderTest1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取系统该类加载器")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" systemClassLoader"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSystemCLassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("print1n")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("systemClassLoader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//sun.misc.Launcher$AppCLassLoader@18b4aac2")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取扩展类加载器")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" extClassLoader "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("systemClassLoader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("extClassLoader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//sun.misc. Launcher$ExtCLassLoader@1540e19d")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//试图获取引导类加载器：失败")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" bootstrapClassLoader "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("extClassLoader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("print1n")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("bootstrapClassLoader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//null")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//##################################")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" classLoader "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("forName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"java.lang.String"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("classLoader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//自定义的类默认使用系统类加载器")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" classLoader1"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("forName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"com.atguigu.java.ClassLoaderTest1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("classLoader1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            \n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//关于数组类型的加载：使用的类的加载器与数组元素的类的加载器相同")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" arrstr "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("arrstr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//null：表示使用的是引导类加载器")]),a._v("\n                \n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoaderTest1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" arr1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoaderTest1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("arr1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//sun.misc. Launcher$AppcLassLoader@18b4aac2")]),a._v("\n            \n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" arr2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("arr2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//null:")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassNotFoundException")]),a._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("hr"),a._v(" "),t("h2",{attrs:{id:"_4-4-classloader源码解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-classloader源码解析"}},[a._v("#")]),a._v(" 4.4. ClassLoader源码解析")]),a._v(" "),t("p",[t("strong",[a._v("ClassLoader与现有类的关系：")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-95e09d9045c8ddc8cfe7e7fb197c484d.png",alt:"image"}})]),a._v(" "),t("p",[a._v("除了以上虚拟机自带的加载器外，用户还可以定制自己的类加载器。Java提供了抽象类java.lang.ClassLoader，所有用户自定义的类加载器都应该继承ClassLoader类。")]),a._v(" "),t("h3",{attrs:{id:"_4-4-1-classloader的主要方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-classloader的主要方法"}},[a._v("#")]),a._v(" 4.4.1. ClassLoader的主要方法")]),a._v(" "),t("p",[a._v("抽象类ClassLoader的主要方法：（内部没有抽象方法）")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("返回该类加载器的超类加载器")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassNotFoundException")]),a._v("\n")])])]),t("p",[a._v("加载名称为name的类，返回结果为java.lang.Class类的实例。如果找不到类，则返回 ClassNotFoundException异常。该方法中的逻辑就是双亲委派模式的实现。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("findClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassNotFoundException")]),a._v("\n")])])]),t("p",[a._v("查找二进制名称为name的类，返回结果为java.lang.Class类的实例。这是一个受保护的方法，JVM鼓励我们重写此方法，需要自定义加载器遵循双亲委托机制，该方法会在检查完父类加载器之后被loadClass()方法调用。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("在JDK1.2之前，在自定义类加载时，总会去继承ClassLoader类并重写loadClass方法，从而实现自定义的类加载类。但是在JDK1.2之后已不再建议用户去覆盖loadClass()方法，而是建议把自定义的类加载逻辑写在findClass()方法中，从前面的分析可知，findClass()方法是在loadClass()方法中被调用的，当loadClass()方法中父加载器加载失败后，则会调用自己的findClass()方法来完成类加载，这样就可以保证自定义的类加载器也符合双亲委托模式。")])]),a._v(" "),t("li",[t("p",[a._v("需要注意的是ClassLoader类中并没有实现findClass()方法的具体代码逻辑，取而代之的是抛出ClassNotFoundException异常，同时应该知道的是findClass方法通常是和defineClass方法一起使用的。$\\color{red}{一般情况下，在自定义类加载器时，会直接覆盖ClassLoader的findClass()方法并编写加载规则，取得要加载类的字节码后转换成流，然后调用defineClass()方法生成类的Class对象。}$")])])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("defineClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" off"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" len"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("根据给定的字节数组b转换为Class的实例，off和len参数表示实际Class信息在byte数组中的位置和长度，其中byte数组b是ClassLoader从外部获取的。这是受保护的方法，只有在自定义ClassLoader子类中可以使用。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("defineClass()方法是用来将byte字节流解析成JVM能够识别的Class对象（ClassLoader中已实现该方法逻辑），通过这个方法不仅能够通过class文件实例化class对象，也可以通过其他方式实例化class对象，如通过网络接收一个类的字节码，然后转换为byte字节流创建对应的Class对象。")])]),a._v(" "),t("li",[t("p",[a._v("$\\color{red}{defineClass()方法通常与findClass()方法一起使用，一般情况下，在自定义类加载器时，会直接覆盖ClassLoader的findClass()方法并编写加载规则，取得要加载类的字节码后转换成流，然后调用defineClass()方法生成类的Class对象}$")])])]),a._v(" "),t("p",[t("strong",[a._v("简单举例：")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("findClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassNotFoundException")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获取类的字节数组")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" classData "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassData")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("classData "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassNotFoundException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//使用defineClass生成class对象")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("defineClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("classData"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("θ"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("classData"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolveClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("链接指定的一个Java类。使用该方法可以使用类的Class对象创建完成的同时也被解析。前面我们说链接阶段主要是对字节码进行验证，为类变量分配内存并设置初始值同时将字节码文件中的符号引用转换为直接引用。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("findLoadedClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("查找名称为name的已经被加载过的类，返回结果为java.lang.Class类的实例。这个方法是final方法，无法被修改。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("它也是一个ClassLoader的实例，这个字段所表示的ClassLoader也称为这个ClassLoader的双亲。在类加载的过程中，ClassLoader可能会将某些请求交予自己的双亲处理。")]),a._v(" "),t("h3",{attrs:{id:"_4-4-2-secureclassloader与urlclassloader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-secureclassloader与urlclassloader"}},[a._v("#")]),a._v(" 4.4.2. SecureClassLoader与URLClassLoader")]),a._v(" "),t("p",[a._v("接着SecureClassLoader扩展了ClassLoader，新增了几个与使用相关的代码源（对代码源的位置及其证书的验证）和权限定义类验证（主要指对class源码的访问权限）的方法，一般我们不会直接跟这个类打交道，更多是与它的子类URLClassLoader有所关联。")]),a._v(" "),t("p",[a._v("前面说过，ClassLoader是一个抽象类，很多方法是空的没有实现，比如findClass()、findResource()等。而URLClassLoader这个实现类为这些方法提供了具体的实现。并新增了URLClassPath类协助取得Class字节码流等功能。$\\color{red}{在编写自定义类加载器时，如果没有太过于复杂的需求，可以直接继承URLClassLoader类}$，这样就可以避免自己去编写findClass()方法及其获取字节码流的方式，使自定义类加载器编写更加简洁。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-96ff550c5fab8a01e80107b69d52247b.png",alt:"image"}})]),a._v(" "),t("h3",{attrs:{id:"_4-4-3-extclassloader与appclassloader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-3-extclassloader与appclassloader"}},[a._v("#")]),a._v(" 4.4.3. ExtClassLoader与AppClassLoader")]),a._v(" "),t("p",[a._v("了解完URLClassLoader后接着看看剩余的两个类加载器，即拓展类加载器ExtClassLoader和系统类加载器AppClassLoader，这两个类都继承自URLClassLoader，是sun.misc.Launcher的静态内部类。")]),a._v(" "),t("p",[a._v("sun.misc.Launcher主要被系统用于启动主应用程序，ExtClassLoader和AppClassLoader都是由sun.misc.Launcher创建的，其类主要类结构如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-12df856ac15fe760b445181f1febe068.png",alt:"image"}})]),a._v(" "),t("p",[a._v("我们发现ExtClassLoader并没有重写loadClass()方法，这足矣说明其遵循双亲委派模式，而AppClassLoader重载了loadClass()方法，但最终调用的还是父类loadClass()方法，因此依然遵守双亲委派模式。")]),a._v(" "),t("h3",{attrs:{id:"_4-4-4-class-forname-与classloader-loadclass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-4-class-forname-与classloader-loadclass"}},[a._v("#")]),a._v(" 4.4.4. Class.forName()与ClassLoader.loadClass()")]),a._v(" "),t("p",[t("strong",[a._v("Class.forName()")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Class.forName()：是一个静态方法，最常用的是Class.forName(String className);")])]),a._v(" "),t("li",[t("p",[a._v("根据传入的类的全限定名返回一个Class对象。该方法在将Class文件加载到内存的同时，会执行类的初始化。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("forName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"com.atguigu.java.Helloworld"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])])])]),a._v(" "),t("p",[t("strong",[a._v("ClassLoader.loadClass()")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("ClassLoader.loadClass()：这是一个实例方法，需要一个ClassLoader对象来调用该方法。")])]),a._v(" "),t("li",[t("p",[a._v("该方法将Class文件加载到内存时，并不会执行类的初始化，直到这个类第一次使用时才进行初始化。该方法因为需要得到一个ClassLoader对象，所以可以根据需要指定使用哪个类加载器。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Classloader")]),a._v(" cl "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" cl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"com.atguigu.java.Helloworld"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("hr")])]),a._v(" "),t("h2",{attrs:{id:"_4-5-双亲委派模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-双亲委派模型"}},[a._v("#")]),a._v(" 4.5. 双亲委派模型")]),a._v(" "),t("h3",{attrs:{id:"_4-5-1-定义与本质"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-1-定义与本质"}},[a._v("#")]),a._v(" 4.5.1. 定义与本质")]),a._v(" "),t("p",[a._v("类加载器用来把类加载到Java虚拟机中。从JDK1.2版本开始，类的加载过程采用双亲委派机制，这种机制能更好地保证Java平台的安全。")]),a._v(" "),t("p",[t("strong",[a._v("定义")])]),a._v(" "),t("p",[a._v("如果一个类加载器在接到加载类的请求时，它首先不会自己尝试去加载这个类，而是把这个请求任务委托给父类加载器去完成，依次递归，如果父类加载器可以完成类加载任务，就成功返回。只有父类加载器无法完成此加载任务时，才自己去加载。")]),a._v(" "),t("p",[t("strong",[a._v("本质")])]),a._v(" "),t("p",[a._v("规定了类加载的顺序是：引导类加载器先加载，若加载不到，由扩展类加载器加载，若还加载不到，才会由系统类加载器或自定义的类加载器进行加载。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-05bf18f0ceb18ee952d20164706c8cac.png",alt:"image"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-238b2b109ef988d7a56fa2b93884fe46.png",alt:"image"}})]),a._v(" "),t("h3",{attrs:{id:"_4-5-2-优势与劣势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-2-优势与劣势"}},[a._v("#")]),a._v(" 4.5.2. 优势与劣势")]),a._v(" "),t("p",[t("strong",[a._v("双亲委派机制优势")])]),a._v(" "),t("ul",[t("li",[t("p",[a._v("避免类的重复加载，确保一个类的全局唯一性")]),a._v(" "),t("p",[a._v("$\\color{red}{Java类随着它的类加载器一起具备了一种带有优先级的层次关系，通过这种层级关可以避免类的重复加载，当父亲已经加载了该类时，就没有必要子ClassLoader再加载一次。}$")])]),a._v(" "),t("li",[t("p",[a._v("保护程序安全，防止核心API被随意篡改")])])]),a._v(" "),t("p",[t("strong",[a._v("代码支持")])]),a._v(" "),t("p",[a._v("双亲委派机制在java.lang.ClassLoader.loadClass(String，boolean)接口中体现。该接口的逻辑如下：")]),a._v(" "),t("p",[a._v("（1）先在当前加载器的缓存中查找有无目标类，如果有，直接返回。")]),a._v(" "),t("p",[a._v("（2）判断当前加载器的父加载器是否为空，如果不为空，则调用parent.loadClass(name，false)接口进行加载。")]),a._v(" "),t("p",[a._v("（3）反之，如果当前加载器的父类加载器为空，则调用findBootstrapClassorNull(name)接口，让引导类加载器进行加载。")]),a._v(" "),t("p",[a._v("（4）如果通过以上3条路径都没能成功加载，则调用findClass(name)接口进行加载。该接口最终会调用java.lang.ClassLoader接口的defineClass系列的native接口加载目标Java类。")]),a._v(" "),t("p",[a._v("双亲委派的模型就隐藏在这第2和第3步中。")]),a._v(" "),t("p",[t("strong",[a._v("举例")])]),a._v(" "),t("p",[a._v("假设当前加载的是java.lang.Object这个类，很显然，该类属于JDK中核心得不能再核心的一个类，因此一定只能由引导类加载器进行加载。当]VM准备加载javaJang.Object时，JVM默认会使用系统类加载器去加载，按照上面4步加载的逻辑，在第1步从系统类的缓存中肯定查找不到该类，于是进入第2步。由于从系统类加载器的父加载器是扩展类加载器，于是扩展类加载器继续从第1步开始重复。由于扩展类加载器的缓存中也一定查找不到该类，因此进入第2步。扩展类的父加载器是null，因此系统调用findClass（String），最终通过引导类加载器进行加载。")]),a._v(" "),t("p",[t("strong",[a._v("思考")])]),a._v(" "),t("p",[a._v("如果在自定义的类加载器中重写java.lang.ClassLoader.loadClass(String)或java.lang.ClassLoader.loadclass(String，boolean)方法，抹去其中的双亲委派机制，仅保留上面这4步中的第l步与第4步，那么是不是就能够加载核心类库了呢？")]),a._v(" "),t("p",[a._v("这也不行！因为JDK还为核心类库提供了一层保护机制。不管是自定义的类加载器，还是系统类加载器抑或扩展类加载器，最终都必须调用 java.lang.ClassLoader.defineclass(String，byte[]，int，int，ProtectionDomain)方法，而该方法会执行preDefineClass()接口，该接口中提供了对JDK核心类库的保护。")]),a._v(" "),t("p",[t("strong",[a._v("弊端")])]),a._v(" "),t("p",[a._v("检查类是否加载的委托过程是单向的，这个方式虽然从结构上说比较清晰，使各个ClassLoader的职责非常明确，但是同时会带来一个问题，即顶层的ClassLoader无法访问底层的ClassLoader所加载的类。")]),a._v(" "),t("p",[a._v("通常情况下，启动类加载器中的类为系统核心类，包括一些重要的系统接口，而在应用类加载器中，为应用类。按照这种模式，应用类访问系统类自然是没有问题，但是系统类访问应用类就会出现问题。比如在系统类中提供了一个接口，该接口需要在应用类中得以实现，该接口还绑定一个工厂方法，用于创建该接口的实例，而接口和工厂方法都在启动类加载器中。这时，就会出现该工厂方法无法创建由应用类加载器加载的应用实例的问题。")]),a._v(" "),t("p",[t("strong",[a._v("结论")])]),a._v(" "),t("p",[a._v("$\\color{red}{由于Java虚拟机规范并没有明确要求类加载器的加载机制一定要使用双亲委派模型，只是建议采用这种方式而已。}$比如在Tomcat中，类加载器所采用的加载机制就和传统的双亲委派模型有一定区别，当缺省的类加载器接收到一个类的加载任务时，首先会由它自行加载，当它加载失败时，才会将类的加载任务委派给它的超类加载器去执行，这同时也是Serylet规范推荐的一种做法。")]),a._v(" "),t("h3",{attrs:{id:"_4-5-3-破坏双亲委派机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-3-破坏双亲委派机制"}},[a._v("#")]),a._v(" 4.5.3. 破坏双亲委派机制")]),a._v(" "),t("p",[a._v("双亲委派模型并不是一个具有强制性约束的模型，而是Java设计者推荐给开发者们的类加载器实现方式。")]),a._v(" "),t("p",[a._v("在Java的世界中大部分的类加载器都遵循这个模型，但也有例外的情况，直到Java模块化出现为止，双亲委派模型主要出现过3次较大规模“被破坏”的情况。")]),a._v(" "),t("p",[t("strong",[a._v("第一次破坏双亲委派机制")])]),a._v(" "),t("p",[a._v("双亲委派模型的第一次“被破坏”其实发生在双亲委派模型出现之前一—即JDK1.2面世以前的“远古”时代。")]),a._v(" "),t("p",[a._v("由于双亲委派模型在JDK 1.2之后才被引入，但是类加载器的概念和抽象类java.lang.ClassLoader则在Java的第一个版本中就已经存在，面对经存在的用户自定义类加载器的代码，Java设计者们引入双亲委派模型时不得不做出一些妥协，$\\color{red}{为了兼容这些已有代码，无法再以技术手段避免loadClass()被子类覆盖的可能性}$，只能在JDK1.2之后的java.lang.ClassLoader中添加一个新的protected方法findClass()，并引导用户编写的类加载逻辑时尽可能去重写这个方法，而不是在loadClass()中编写代码。上节我们已经分析过loadClass()方法，双亲委派的具体逻辑就实现在这里面，按照loadClass()方法的逻辑，如果父类加载失败，会自动调用自己的findClass()方法来完成加载，这样既不影响用户按照自己的意愿去加载类，又可以保证新写出来的类加载器是符合双亲委派规则的。")]),a._v(" "),t("p",[t("strong",[a._v("第二次破坏双亲委派机制：线程上下文类加载器")])]),a._v(" "),t("p",[a._v("双亲委派模型的第二次“被破坏”是由这个模型自身的缺陷导致的，双亲委派很好地解决了各个类加载器协作时基础类型的一致性问题（$\\color{red}{越基础的类由越上层的加载器进行加载}$），基础类型之所以被称为“基础”，是因为它们总是作为被用户代码继承、调用的API存在，但程序设计往往没有绝对不变的完美规则，如果有$\\color{red}{基础类型又要调用回用户的代码，那该怎么办呢？}$")]),a._v(" "),t("p",[a._v("这并非是不可能出现的事情，一个典型的例子便是JNDI服务，JNDI现在已经是Java的标准服务，它的代码由启动类加载器来完成加载（在JDK 1.3时加入到rt.jar的），肯定属于Java中很基础的类型了。但JNDI存在的目的就是对资源进行查找和集中管理，它需要调用由其他厂商实现并部署在应用程序的ClassPath下的JNDI服务提供者接口（Service Provider Interface，SPI）的代码，现在问题来了，$\\color{red}{启动类加载器是绝不可能认识、加载这些代码的，那该怎么办？}$ SPI：在Java平台中，通常把核心类rt.jar中提供外部服务、可由应用层自行实现的接口称为SPI）")]),a._v(" "),t("p",[a._v("为了解决这个困境，Java的设计团队只好引入了一个不太优雅的设计：$\\color{red}{线程上下文类加载器（Thread Context ClassLoader）}$。这个类加载器可以通过java.lang.Thread类的setContextClassLoader()方法进行设置，如果创建线程时还未设置，它将会从父线程中继承一个，如果在应用程序的全局范围内都没有设置过的话，那这个类加载器默认就是应用程序类加载器。")]),a._v(" "),t("p",[a._v("有了线程上下文类加载器，程序就可以做一些“舞弊”的事情了。JNDI服务使用这个线程上下文类加载器去加载所需的SPI服务代码，$\\color{red}{这是一种父类加载器去请求子类加载器完成类加载的行为，这种行为实际上是打通了双亲委派模型的层次结构来逆向使用类加载器，已经违背了双亲委派模型的一般性原则}$，但也是无可奈何的事情。 ，例如JNDI、JDBC、JCE、JAXB和JBI等。不过，当SPI的服务提供者多于一个的时候，代码就只能根据具体提供者的类型来硬编码判断，为了消除这种极不优雅的实现方式，在JDK6时，JDK提供了java.util.ServiceLoader类，以META-INF/services中的配置信息，辅以责任链模式，这才算是给SPI的加载提供了一种相对合理的解决方案。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-5a8c6c7fc8c8fa7756c7cd4629d1b82a.png",alt:"image"}})]),a._v(" "),t("p",[a._v("默认上下文加载器就是应用类加载器，这样以上下文加载器为中介，使得启动类加载器中的代码也可以访问应用类加载器中的类。")]),a._v(" "),t("p",[t("strong",[a._v("第三次破坏双亲委派机制")])]),a._v(" "),t("p",[a._v("双亲委派模型的第三次“被破坏”是由于用户对程序动态性的追求而导致的。如：**代码热替换(Hot Swap)、模块热部署(Hot Deployment)**等")]),a._v(" "),t("p",[a._v("IBM公司主导的JSR-291(即OSGiR4.2)实现模块化热部署的关键是它自定义的类加载器机制的实现，每一个程序模块(osGi中称为Bundle)都有一个自己的类加载器，当需要更换一个Bundle时，就把Bund1e连同类加载器一起换掉以实现代码的热替换。在oSGi环境下，类加载器不再双亲委派模型推荐的树状结构，而是进一步发展为更加复杂的网状结构。")]),a._v(" "),t("p",[a._v("当收到类加载请求时，OSGi将按照下面的顺序进行类搜索：")]),a._v(" "),t("p",[a._v("1）$\\color{red}{将以java.*开头的类，委派给父类加载器加载。}$")]),a._v(" "),t("p",[a._v("2）$\\color{red}{否则，将委派列表名单内的类，委派给父类加载器加载。}$")]),a._v(" "),t("p",[a._v("3）否则，将Import列表中的类，委派给Export这个类的Bundle的类加载器加载。")]),a._v(" "),t("p",[a._v("4）否则，查找当前Bundle的ClassPath，使用自己的类加载器加载。")]),a._v(" "),t("p",[a._v("5）否则，查找类是否在自己的Fragment Bundle中，如果在，则委派给Fragment Bundle的类加载器加载。")]),a._v(" "),t("p",[a._v("6）否则，查找Dynamic Import列表的Bundle，委派给对应Bund1e的类加载器加载。")]),a._v(" "),t("p",[a._v("7）否则，类查找失败。")]),a._v(" "),t("p",[a._v("说明：只有开头两点仍然符合双亲委派模型的原则，其余的类查找都是在平级的类加载器中进行的")]),a._v(" "),t("p",[a._v("小结：这里，我们使用了“被破坏”这个词来形容上述不符合双亲委派模型原则的行为，但这里“被破坏”并不一定是带有贬义的。只要有明确的目的和充分的理由，突破旧有原则无疑是一种创新。")]),a._v(" "),t("p",[a._v("正如：OSGi中的类加载器的设计不符合传统的双亲委派的类加载器架构，且业界对其为了实现热部署而带来的额外的高复杂度还存在不少争议，但对这方面有了解的技术人员基本还是能达成一个共识，认为"),t("strong",[a._v("OSGi中对类加载器的运用是值得学习的，完全弄懂了OSGi的实现，就算是掌握了类加载器的精粹。")])]),a._v(" "),t("h3",{attrs:{id:"_4-5-4-热替换的实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-4-热替换的实现"}},[a._v("#")]),a._v(" 4.5.4. 热替换的实现")]),a._v(" "),t("p",[a._v("热替换是指在程序的运行过程中，不停止服务，只通过替换程序文件来修改程序的行为。$\\color{red}{热替换的关键需求在于服务不能中断，修改必须立即表现正在运行的系统之中。}$基本上大部分脚本语言都是天生支持热替换的，比如：PHP，只要替换了PHP源文件，这种改动就会立即生效，而无需重启Web服务器。")]),a._v(" "),t("p",[a._v("但对Java来说，热替换并非天生就支持，如果一个类已经加载到系统中，通过修改类文件，并无法让系统再来加载并重定义这个类。因此，在Java中实现这一功能的一个可行的方法就是灵活运用ClassLoader。")]),a._v(" "),t("p",[a._v("注意：由不同ClassLoader加载的同名类属于不同的类型，不能相互转换和兼容。即两个不同的ClassLoader加载同一个类，在虚拟机内部，会认为这2个类是完全不同的。")]),a._v(" "),t("p",[a._v("根据这个特点，可以用来模拟热替换的实现，基本思路如下图所示：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-2f6640874ba04377aeca59e202477746.png",alt:"image"}})]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"_4-6-沙箱安全机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-沙箱安全机制"}},[a._v("#")]),a._v(" 4.6. 沙箱安全机制")]),a._v(" "),t("p",[a._v("沙箱安全机制")]),a._v(" "),t("ul",[t("li",[a._v("保证程序安全")]),a._v(" "),t("li",[a._v("保护Java原生的JDK代码")])]),a._v(" "),t("p",[a._v("$\\color{red}{Java安全模型的核心就是Java沙箱（sandbox）}$。什么是沙箱？沙箱是一个限制程序运行的环境。")]),a._v(" "),t("p",[a._v("沙箱机制就是将Java代码$\\color{red}{限定在虚拟机（JVM）特定的运行范围中，并且严格限制代码对本地系统资源访问}$。通过这样的措施来保证对代码的有限隔离，防止对本地系统造成破坏。")]),a._v(" "),t("p",[a._v("沙箱主要限制系统资源访问，那系统资源包括什么？CPU、内存、文件系统、网络。不同级别的沙箱对这些资源访问的限制也可以不一样。")]),a._v(" "),t("p",[a._v("所有的Java程序运行都可以指定沙箱，可以定制安全策略。")]),a._v(" "),t("h3",{attrs:{id:"_4-6-1-jdk1-0时期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-1-jdk1-0时期"}},[a._v("#")]),a._v(" 4.6.1. JDK1.0时期")]),a._v(" "),t("p",[a._v("在Java中将执行程序分成本地代码和远程代码两种，本地代码默认视为可信任的，而远程代码则被看作是不受信的。对于授信的本地代码，可以访问一切本地资源。而对于非授信的远程代码在早期的Java实现中，安全依赖于"),t("strong",[a._v("沙箱（Sandbox）机制")]),a._v("。如下图所示JDK1.0安全模型")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-1b3e037de34bc89cd1d2ac5281030d79.png",alt:"image"}})]),a._v(" "),t("h3",{attrs:{id:"_4-6-2-jdk1-1时期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-2-jdk1-1时期"}},[a._v("#")]),a._v(" 4.6.2. JDK1.1时期")]),a._v(" "),t("p",[a._v("JDK1.0中如此严格的安全机制也给程序的功能扩展带来障碍，比如当用户希望远程代码访问本地系统的文件时候，就无法实现。")]),a._v(" "),t("p",[a._v("因此在后续的Java1.1版本中，针对安全机制做了改进，增加了"),t("strong",[a._v("安全策略")]),a._v("。允许用户指定代码对本地资源的访问权限。")]),a._v(" "),t("p",[a._v("如下图所示JDK1.1安全模型")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-455f0d5eec46a8519a57915ad584a249.png",alt:"image"}})]),a._v(" "),t("h3",{attrs:{id:"_4-6-3-jdk1-2时期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-3-jdk1-2时期"}},[a._v("#")]),a._v(" 4.6.3. JDK1.2时期")]),a._v(" "),t("p",[a._v("在Java1.2版本中，再次改进了安全机制，增加了"),t("strong",[a._v("代码签名")]),a._v("。不论本地代码或是远程代码，都会按照用户的安全策略设定，由类加载器加载到虚拟机中权限不同的运行空间，来实现差异化的代码执行权限控制。如下图所示JDK1.2安全模型：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-a065288d1bf1cc503c161470f43a2094.png",alt:"image"}})]),a._v(" "),t("h3",{attrs:{id:"_4-6-4-jdk1-6时期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-4-jdk1-6时期"}},[a._v("#")]),a._v(" 4.6.4. JDK1.6时期")]),a._v(" "),t("p",[a._v("当前最新的安全机制实现，则引入了**域（Domain）**的概念。")]),a._v(" "),t("p",[a._v("虚拟机会把所有代码加载到不同的系统域和应用域。$\\color{red}{系统域部分专门负责与关键资源进行交互}$，而各个应用域部分则通过系统域的部分代理来对各种需要的资源进行访问。虚拟机中不同的受保护域（Protected Domain），对应不一样的权限（Permission）。存在于不同域中的类文件就具有了当前域的全部权限，如下图所示，最新的安全模型（jdk1.6）")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-8d55432c6039e622004db53474801e85.png",alt:"image"}})]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"_4-7-自定义类的加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-自定义类的加载器"}},[a._v("#")]),a._v(" 4.7. 自定义类的加载器")]),a._v(" "),t("h3",{attrs:{id:"_4-7-1-为什么要自定义类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-1-为什么要自定义类加载器"}},[a._v("#")]),a._v(" 4.7.1. 为什么要自定义类加载器？")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("$\\color{red}{隔离加载类}$")]),a._v(" "),t("p",[a._v("在某些框架内进行中间件与应用的模块隔离，把类加载到不同的环境。比如:阿里内某容器框架通过自定义类加载器确保应用中依赖的jar包不会影响到中间件运行时使用的jar包。再比如:Tomcat这类Web应用服务器，内部自定义了好几种类加载器，用于隔离同一个Web应用服务器上的不同应用程序。")])]),a._v(" "),t("li",[t("p",[a._v("$\\color{red}{修改类加载的方式}$")]),a._v(" "),t("p",[a._v("类的加载模型并非强制，除Bootstrap外，其他的加载并非一定要引入，或者根据实际情况在某个时间点进行按需进行动态加载")])]),a._v(" "),t("li",[t("p",[a._v("$\\color{red}{扩展加载源}$")]),a._v(" "),t("p",[a._v("比如从数据库、网络、甚至是电视机机顶盒进行加载")])]),a._v(" "),t("li",[t("p",[a._v("$\\color{red}{防止源码泄漏}$")]),a._v(" "),t("p",[a._v("Java代码容易被编译和篡改，可以进行编译加密。那么类加载也需要自定义，还原加密的字节码。")])])]),a._v(" "),t("p",[t("strong",[a._v("常见的场景")])]),a._v(" "),t("ul",[t("li",[a._v("实现类似进程内隔离，类加载器实际上用作不同的命名空间，以提供类似容器、模块化的效果。例如，两个模块依赖于某个类库的不同版本，如果分别被不同的容器加载，就可以互不干扰。这个方面的集大成者是JavaEE和OSGI、JPMS等框架。")]),a._v(" "),t("li",[a._v("应用需要从不同的数据源获取类定义信息，例如网络数据源，而不是本地文件系统。或者是需要自己操纵字节码，动态修改或者生成类型。")])]),a._v(" "),t("p",[t("strong",[a._v("注意")])]),a._v(" "),t("p",[a._v("在一般情况下，使用不同的类加载器去加载不同的功能模块，会提高应用程序的安全性。但是，如果涉及Java类型转换，则加载器反而容易产生不美好的事情。在做Java类型转换时，只有两个类型都是由同一个加载器所加载，才能进行类型转换，否则转换时会发生异常。")]),a._v(" "),t("h3",{attrs:{id:"_4-7-2-实现方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-2-实现方式"}},[a._v("#")]),a._v(" 4.7.2. 实现方式")]),a._v(" "),t("p",[a._v("Java提供了抽象类java.lang.ClassLoader，所有用户自定义的类加载器都应该继承ClassLoader类。")]),a._v(" "),t("p",[a._v("在自定义ClassLoader的子类时候，我们常见的会有两种做法:")]),a._v(" "),t("ul",[t("li",[a._v("方式一:重写loadClass()方法")]),a._v(" "),t("li",[a._v("方式二:重写findclass()方法")])]),a._v(" "),t("p",[t("strong",[a._v("对比")])]),a._v(" "),t("ul",[t("li",[a._v("这两种方法本质上差不多，毕竟loadClass()也会调用findClass()，但是从逻辑上讲我们最好不要直接修改loadClass()的内部逻辑。建议的做法是只在findClass()里重写自定义类的加载方法，根据参数指定类的名字，返回对应的Class对象的引用。")]),a._v(" "),t("li",[a._v("loadclass()这个方法是实现双亲委派模型逻辑的地方，擅自修改这个方法会导致模型被破坏，容易造成问题。$\\color{red}{因此我们最好是在双亲委派模型框架内进行小范围的改动，不破坏原有的稳定结构}$。同时，也避免了自己重写loadClass()方法的过程中必须写双亲委托的重复代码，从代码的复用性来看，不直接修改这个方法始终是比较好的选择。")]),a._v(" "),t("li",[a._v("当编写好自定义类加载器后，便可以在程序中调用loadClass()方法来实现类加载操作。")])]),a._v(" "),t("p",[t("strong",[a._v("说明")])]),a._v(" "),t("ul",[t("li",[a._v("其父类加载器是系统类加载器")]),a._v(" "),t("li",[a._v("JVM中的所有类加载都会使用java.lang.ClassLoader.loadClass(String)接口(自定义类加载器并重写java.lang.ClassLoader.loadClass(String)接口的除外)，连JDK的核心类库也不能例外。")])]),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"_4-8-java9新特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-java9新特性"}},[a._v("#")]),a._v(" 4.8. Java9新特性")]),a._v(" "),t("p",[a._v("为了保证兼容性，JDK9没有从根本上改变三层类加载器架构和双亲委派模型，但为了模块化系统的顺利运行，仍然发生了一些值得被注意的变动。")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("扩展机制被移除，扩展类加载器由于向后兼容性的原因被保留，不过被重命名为平台类加载器(platform class loader)。可以通过classLoader的新方法getPlatformClassLoader()来获取。")]),a._v(" "),t("p",[a._v("JDK9时基于模块化进行构建(原来的rt.jar和tools.jar被拆分成数十个JMOD文件)，其中的Java类库就已天然地满足了可扩展的需求，那自然无须再保留<JAVA_HOME>\\lib\\ext目录，此前使用这个目录或者java.ext.dirs系统变量来扩展JDK功能的机制已经没有继续存在的价值了。")])]),a._v(" "),t("li",[t("p",[a._v("平台类加载器和应用程序类加载器都不再继承自java.net.URLClassLoader。")]),a._v(" "),t("p",[a._v("现在启动类加载器、平台类加载器、应用程序类加载器全都继承于jdk.internal.loader.BuiltinClassLoader。")])])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-4898a969c350fc76af2d19dbd3899e97.png",alt:"image"}})]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("\t如果有程序直接依赖了这种继承关系，或者依赖了URLClassLoader类的特定方法，那代码很可能会在JDK9及更高版本的JDK中崩溃。\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[a._v("在Java9中，类加载器有了名称。该名称在构造方法中指定，可以通过getName()方法来获取。平台类加载器的名称是platform，应用类加载器的名称是app。类加载器的名称在调试与类加载器相关的问题时会非常有用。")]),a._v(" "),t("li",[a._v("启动类加载器现在是在jvm内部和java类库共同协作实现的类加载器（以前是C++实现），但为了与之前代码兼容，在获取启动类加载器的场景中仍然会返回null，而不会得到BootClassLoader实例。")]),a._v(" "),t("li",[a._v("类加载的委派关系也发生了变动。当平台及应用程序类加载器收到类加载请求，在委派给父加载器加载前，要先判断该类是否能够归属到某一个系统模块中，如果可以找到这样的归属关系，就要优先委派给负责那个模块的加载器完成加载。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-be0af2bbf820d3471548905de1d6bdb6.png",alt:"image"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://static.lovedata.net/21-06-03-fbe9bc11aa11335aee6e2568509daec4.png",alt:"image"}})]),a._v(" "),t("p",[t("strong",[a._v("代码：")])]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoaderTest")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoaderTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoaderTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoaderTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取系统类加载器")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getSystemClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取平台类加载器")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getPlatformClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//获取类的加载器的名称")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoaderTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);