(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{627:function(t,a,s){"use strict";s.r(a);var e=s(14),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"第二章、字节码指令集与解析举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二章、字节码指令集与解析举例"}},[t._v("#")]),t._v(" 第二章、字节码指令集与解析举例")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#概述"}},[t._v("概述")]),s("ul",[s("li",[s("a",{attrs:{href:"#执行模型"}},[t._v("执行模型")])]),s("li",[s("a",{attrs:{href:"#字节码与数据类型"}},[t._v("字节码与数据类型")])]),s("li",[s("a",{attrs:{href:"#指令分类"}},[t._v("指令分类")])])])]),s("li",[s("a",{attrs:{href:"#加载与存储指令"}},[t._v("加载与存储指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#_2-2-1-作用"}},[t._v("2.2.1. 作用")])]),s("li",[s("a",{attrs:{href:"#_2-2-2-常用指令"}},[t._v("2.2.2. 常用指令")])]),s("li",[s("a",{attrs:{href:"#复习-再谈操作数栈与局部变量表"}},[t._v("复习：再谈操作数栈与局部变量表")]),s("ul",[s("li",[s("a",{attrs:{href:"#操作数栈"}},[t._v("操作数栈")])]),s("li",[s("a",{attrs:{href:"#局部变量表"}},[t._v("局部变量表")])])])]),s("li",[s("a",{attrs:{href:"#局部变量入栈指令"}},[t._v("局部变量入栈指令")])]),s("li",[s("a",{attrs:{href:"#常量入栈指令"}},[t._v("常量入栈指令")])]),s("li",[s("a",{attrs:{href:"#出栈装入局部变量表指令"}},[t._v("出栈装入局部变量表指令")])])])]),s("li",[s("a",{attrs:{href:"#算术指令"}},[t._v("算术指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#_2-3-1-作用"}},[t._v("2.3.1. 作用")])]),s("li",[s("a",{attrs:{href:"#_2-3-2-分类"}},[t._v("2.3.2. 分类")])]),s("li",[s("a",{attrs:{href:"#_2-3-3-byte、short、char和boolean类型说明"}},[t._v("2.3.3. byte、short、char和boolean类型说明")])]),s("li",[s("a",{attrs:{href:"#_2-3-4-运算时的溢出"}},[t._v("2.3.4. 运算时的溢出")])]),s("li",[s("a",{attrs:{href:"#_2-3-5-运算模式"}},[t._v("2.3.5. 运算模式")])]),s("li",[s("a",{attrs:{href:"#_2-3-6-nan值使用"}},[t._v("2.3.6. NaN值使用")])]),s("li",[s("a",{attrs:{href:"#所有算数指令"}},[t._v("所有算数指令")])]),s("li",[s("a",{attrs:{href:"#所有算术指令"}},[t._v("所有算术指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#举例"}},[t._v("举例")])]),s("li",[s("a",{attrs:{href:"#曾经的案例1"}},[t._v("曾经的案例1")])]),s("li",[s("a",{attrs:{href:"#曾经的案例2"}},[t._v("曾经的案例2")])]),s("li",[s("a",{attrs:{href:"#彻底搞定-运算符号"}},[t._v("彻底搞定++运算符号")])])])]),s("li",[s("a",{attrs:{href:"#比较指令的说明"}},[t._v("比较指令的说明")])])])]),s("li",[s("a",{attrs:{href:"#类型转换指令"}},[t._v("类型转换指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#宽化类型转换"}},[t._v("宽化类型转换")]),s("ul",[s("li",[s("a",{attrs:{href:"#精度损失问题"}},[t._v("精度损失问题")])])])]),s("li",[s("a",{attrs:{href:"#窄化类型转换"}},[t._v("窄化类型转换")]),s("ul",[s("li",[s("a",{attrs:{href:"#精度损失问题"}},[t._v("精度损失问题")])])])])])]),s("li",[s("a",{attrs:{href:"#对象的创建与访问指令"}},[t._v("对象的创建与访问指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#创建指令"}},[t._v("创建指令")])]),s("li",[s("a",{attrs:{href:"#字段访问指令"}},[t._v("字段访问指令")])]),s("li",[s("a",{attrs:{href:"#数组操作指令"}},[t._v("数组操作指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#boolean类型数组"}},[t._v("boolean类型数组")])])])]),s("li",[s("a",{attrs:{href:"#类型检查指令"}},[t._v("类型检查指令")])])])]),s("li",[s("a",{attrs:{href:"#方法调用与返回指令"}},[t._v("方法调用与返回指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#方法调用指令"}},[t._v("方法调用指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#invokespecial"}},[t._v("invokespecial")])]),s("li",[s("a",{attrs:{href:"#invokestatic"}},[t._v("invokestatic")])]),s("li",[s("a",{attrs:{href:"#invokeinterface"}},[t._v("invokeinterface")])]),s("li",[s("a",{attrs:{href:"#invokevitual"}},[t._v("invokevitual")])])])]),s("li",[s("a",{attrs:{href:"#方法返回指令"}},[t._v("方法返回指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#ireturn"}},[t._v("ireturn")])]),s("li",[s("a",{attrs:{href:"#freturn"}},[t._v("freturn")])]),s("li",[s("a",{attrs:{href:"#ireturn"}},[t._v("ireturn")])]),s("li",[s("a",{attrs:{href:"#方法调用"}},[t._v("方法调用")])])])])])]),s("li",[s("a",{attrs:{href:"#操作数栈管理指令"}},[t._v("操作数栈管理指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#dup"}},[t._v("dup")])]),s("li",[s("a",{attrs:{href:"#pop"}},[t._v("Pop")])]),s("li",[s("a",{attrs:{href:"#pop2"}},[t._v("pop2")])]),s("li",[s("a",{attrs:{href:"#dup2"}},[t._v("dup2")])])])]),s("li",[s("a",{attrs:{href:"#控制转移指令"}},[t._v("控制转移指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#_2-8-1-比较指令"}},[t._v("2.8.1. 比较指令")])]),s("li",[s("a",{attrs:{href:"#条件跳转指令"}},[t._v("条件跳转指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#和null进行比较"}},[t._v("和null进行比较")])]),s("li",[s("a",{attrs:{href:"#compare"}},[t._v("compare")])])])]),s("li",[s("a",{attrs:{href:"#比较条件跳转指令"}},[t._v("比较条件跳转指令")])]),s("li",[s("a",{attrs:{href:"#多条件分支跳转"}},[t._v("多条件分支跳转")]),s("ul",[s("li",[s("a",{attrs:{href:"#没有break的情况-直接往下走"}},[t._v("没有break的情况，直接往下走")])])])]),s("li",[s("a",{attrs:{href:"#无条件跳转"}},[t._v("无条件跳转")]),s("ul",[s("li",[s("a",{attrs:{href:"#思考-while循环和for循环的区别"}},[t._v("思考 while循环和for循环的区别")])])])])])]),s("li",[s("a",{attrs:{href:"#异常处理指令"}},[t._v("异常处理指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#抛出异常"}},[t._v("抛出异常")])]),s("li",[s("a",{attrs:{href:"#异常处理与异常表"}},[t._v("异常处理与异常表")]),s("ul",[s("li",[s("a",{attrs:{href:"#思考题"}},[t._v("思考题")])])])])])]),s("li",[s("a",{attrs:{href:"#同步控制指令"}},[t._v("同步控制指令")]),s("ul",[s("li",[s("a",{attrs:{href:"#_2-10-1-方法级的同步"}},[t._v("2.10.1. 方法级的同步")])]),s("li",[s("a",{attrs:{href:"#方法同步指令"}},[t._v("方法同步指令")])]),s("li",[s("a",{attrs:{href:"#方法内指定指令序列同步"}},[t._v("方法内指定指令序列同步")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-e8b3de58b6f8d62492b72abd7d84cfa8.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"执行模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行模型"}},[t._v("#")]),t._v(" 执行模型")]),t._v(" "),s("p",[t._v("如果不考虑异常处理的话，那么Java虚拟机的解释器可以使用下面这个伪代码当做最基本的执行模型来理解")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    自动计算PC寄存器的值加"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    根据PC寄存器的指示位置，从字节码流中取出操作码"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("字节码存在操作数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 从字节码流中取出操作数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    执行操作码所定义的操作"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("字节码长度"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；\n")])])]),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-c283e8f2e2454759f71ac005b4ba954c.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"字节码与数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字节码与数据类型"}},[t._v("#")]),t._v(" 字节码与数据类型")]),t._v(" "),s("p",[t._v("在Java虚拟机的指令集中，大多数的指令都包含了其操作所对应的数据类型信息。例如，iload指令用于从局部变量表中加载int型的数据到操作数栈中，而fload指令加载的则是float类型的数据。")]),t._v(" "),s("p",[t._v("对于大部分与数据类型相关的字节码指令，"),s("mark",[t._v("它们的操作码助记符中都有特殊的字符来表明专门为哪种数据类型服务")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("i代表对int类型的数据操作，")]),t._v(" "),s("li",[t._v("l代表long")]),t._v(" "),s("li",[t._v("s代表short")]),t._v(" "),s("li",[t._v("b代表byte")]),t._v(" "),s("li",[t._v("c代表char")]),t._v(" "),s("li",[t._v("f代表float")]),t._v(" "),s("li",[t._v("d代表double")])]),t._v(" "),s("p",[s("mark",[t._v("也有一些指令的助记符中没有明确地指明操作类型的字母")]),t._v("，如arraylength指令，它没有代表数据类型的特殊字符，但操作数永远只能是一个数组类型的对象。")]),t._v(" "),s("p",[s("mark",[t._v("还有另外一些指令")]),t._v("，如无条件跳转指令goto则是"),s("mark",[t._v("与数据类型无关")]),t._v("的。")]),t._v(" "),s("p",[t._v("大部分的指令都没有支持整数类型byte、char和short，甚至没有任何指令支持boolean类型。编译器会在编译期或运行期将byte和short类型的数据带符号扩展（Sign-Extend）为相应的int类型数据，将boolean和char类型数据零位扩展（Zero-Extend）为相应的int类型数据。与之类似，在处理boolean、byte、short和char类型的数组时，也会转换为使用对应的int类型的字节码指令来处理。因此，大多数对于boolean、byte、short和char类型数据的操作，实际上都是使用相应的int类型作为运算类型。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-ba93e526d55c3ce9434b7b8611eb3cef.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"指令分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指令分类"}},[t._v("#")]),t._v(" 指令分类")]),t._v(" "),s("p",[t._v("由于完全介绍和学习这些指令需要花费大量时间。为了让大家能够更快地熟悉和了解这些基本指令，这里将JVM中的字节码指令集按用途大致分成9类。")]),t._v(" "),s("ul",[s("li",[t._v("加载与存储指令")]),t._v(" "),s("li",[t._v("算术指令")]),t._v(" "),s("li",[t._v("类型转换指令")]),t._v(" "),s("li",[t._v("对象的创建与访问指令")]),t._v(" "),s("li",[t._v("方法调用与返回指令")]),t._v(" "),s("li",[t._v("操作数栈管理指令")]),t._v(" "),s("li",[t._v("比较控制指令")]),t._v(" "),s("li",[t._v("异常处理指令")]),t._v(" "),s("li",[t._v("同步控制指令")])]),t._v(" "),s("p",[t._v("（说在前面）在做值相关操作时：")]),t._v(" "),s("ul",[s("li",[t._v("一个指令，可以从局部变量表、常量池、堆中对象、方法调用、系统调用中等取得数据，这些数据（可能是值，可能是对象的引用）被压入操作数栈。")]),t._v(" "),s("li",[t._v("一个指令，也可以从操作数栈中取出一到多个值（pop多次），完成赋值、加减乘除、方法传参、系统调用等等操作。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-2051bedac32bdd43003ca8def7daf91a.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"加载与存储指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加载与存储指令"}},[t._v("#")]),t._v(" 加载与存储指令")]),t._v(" "),s("h3",{attrs:{id:"_2-2-1-作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-作用"}},[t._v("#")]),t._v(" 2.2.1. 作用")]),t._v(" "),s("p",[t._v("加载和存储指令用于将数据从栈帧的局部变量表和操作数栈之间来回传递。")]),t._v(" "),s("h3",{attrs:{id:"_2-2-2-常用指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-常用指令"}},[t._v("#")]),t._v(" 2.2.2. 常用指令")]),t._v(" "),s("ol",[s("li",[t._v("【局部变量压栈指令】将一个局部变量加载到操作数栈："),s("code",[t._v("xload、xload_<n>")]),t._v("（其中x为i、l、f、d、a，n为0到3）")]),t._v(" "),s("li",[t._v("【常量入栈指令】将一个常量加载到操作数栈："),s("code",[t._v("bipush、sipush、ldc、ldc_w、ldc2_w、aconst_null、iconst_m1、iconst_<i>、lconst_<l>）、fconst_<f>、dconst_<d>")])]),t._v(" "),s("li",[t._v("【出栈装入局部变量表指令】将一个数值从操作数栈存储到局部变量表："),s("code",[t._v("xstore、xstore_<n>")]),t._v("（其中x为i、l、f、d、a，n为0到3）；"),s("code",[t._v("xastore")]),t._v("（其中x为i、l、f、d、a、b、c、s）")]),t._v(" "),s("li",[t._v("扩充局部变量表的访问索引的指令："),s("code",[t._v("wide")]),t._v("。")])]),t._v(" "),s("p",[t._v("上面所列举的指令助记符中，有一部分是以尖括号结尾的（例如iload_<n>）。这些指令助记符实际上代表了一组指令（例如iload_<n>代表了"),s("code",[t._v("iload_0、iload_1、iload_2")]),t._v("和"),s("code",[t._v("iload_3")]),t._v("这几个指令）。这几组指令都是某个带有一个操作数的通用指令（例如iload）的特殊形式，对于这若干组特殊指令来说，它们表面上没有操作数，不需要进行取操作数的动作，但操作数都隐含在指令中。")]),t._v(" "),s("p",[t._v("除此之外，它们的语义与原生的通用指令完全一致（例如"),s("code",[t._v("iload_0")]),t._v("的语义与操作数为0时的iload指令语义完全一致）。在尖括号之间的字母指定了指令隐含操作数的数据类型，<n>代表非负的整数，<i>代表是int类型数据，<l>代表long类型，<f>代表float类型，<d>代表double类型。")]),t._v(" "),s("p",[t._v("操作byte、char、short和boolean类型数据时，经常用int类型的指令来表示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-8b55620d4c2e9786d60f94339c23c83d.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-f75c80eec3f445944fdc977acbebfa56.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"复习-再谈操作数栈与局部变量表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复习-再谈操作数栈与局部变量表"}},[t._v("#")]),t._v(" 复习：再谈操作数栈与局部变量表")]),t._v(" "),s("h4",{attrs:{id:"操作数栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作数栈"}},[t._v("#")]),t._v(" 操作数栈")]),t._v(" "),s("p",[s("strong",[t._v("操作数栈（Operand Stacks）")])]),t._v(" "),s("p",[t._v("我们知道，Java字节码是Java虚拟机所使用的指令集。因此，它与Java虚拟机基于栈的计算模型是密不可分的。在解释执行过程中，每当为Java方法分配栈桢时，Java虚拟机往往需要开辟一块额外的空间作为"),s("mark",[t._v("操作数栈，来存放计算的操作数以及返回结果")]),t._v("。")]),t._v(" "),s("p",[t._v("具体来说便是："),s("mark",[t._v("执行每一条指令之前，Java虚拟机要求该指令的操作数已被压入操作数栈中。在执行指令时，Java虚拟机会将该指令所需的操作数弹出，并且将指令的结果重新压入栈中。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-03-5f373fa6ad0182d291201079e11c0589.png",alt:"image"}})]),t._v(" "),s("p",[t._v("以加法指令iadd为例。假设在执行该指令前，栈顶的两个元素分别为int值1和int值2，那么iadd指令将弹出这两个int，并将求得的和int值3压入栈中。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-03-19a93f881527debf4f3620a94c4e4891.png",alt:"image"}})]),t._v(" "),s("p",[t._v("由于iadd指令只消耗栈顶的两个元素，因此，对于离栈顶距离为2的元素，即图中的问号，iadd 指令并不关心它是否存在，更加不会对其进行修改。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-581e32f5f519b9e2b603fc6698cad208.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"局部变量表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局部变量表"}},[t._v("#")]),t._v(" 局部变量表")]),t._v(" "),s("p",[t._v("Java方法栈桢的另外一个重要组成部分则是局部变量区，"),s("mark",[t._v("字节码程序可以将计算的结果缓存在局部变量区之中")]),t._v("。")]),t._v(" "),s("p",[t._v("实际上，Java虚拟机将局部变量区当成一个数组，依次存放this指针（仅非静态方法），所传入的参数，以及字节码中的局部变量。")]),t._v(" "),s("p",[t._v("和操作数栈一样，long类型以及double类型的值将占据两个单元，其余类型仅占据一个单元。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-5e4e08b036d54a572dcda7de45105d73.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-406444a3d10c1c60d460655b36148af5.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"局部变量入栈指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局部变量入栈指令"}},[t._v("#")]),t._v(" 局部变量入栈指令")]),t._v(" "),s("blockquote",[s("p",[t._v("iload 从局部变量中装载int类型值")]),t._v(" "),s("p",[t._v("lload 从局部变量中装载long类型值")]),t._v(" "),s("p",[t._v("fload 从局部变量中装载float类型值")]),t._v(" "),s("p",[t._v("dload 从局部变量中装载double类型值")]),t._v(" "),s("p",[t._v("aload 从局部变量中装载引用类型值（refernce）")]),t._v(" "),s("p",[t._v("iload_0 从局部变量0中装载int类型值")]),t._v(" "),s("p",[t._v("iload_1 从局部变量1中装载int类型值")]),t._v(" "),s("p",[t._v("iload_2 从局部变量2中装载int类型值")]),t._v(" "),s("p",[t._v("iload_3 从局部变量3中装载int类型值")]),t._v(" "),s("p",[t._v("lload_0 从局部变量0中装载long类型值")]),t._v(" "),s("p",[t._v("lload_1 从局部变量1中装载long类型值")]),t._v(" "),s("p",[t._v("lload_2 从局部变量2中装载long类型值")]),t._v(" "),s("p",[t._v("lload_3 从局部变量3中装载long类型值")]),t._v(" "),s("p",[t._v("fload_0 从局部变量0中装载float类型值")]),t._v(" "),s("p",[t._v("fload_1 从局部变量1中装载float类型值")]),t._v(" "),s("p",[t._v("fload_2 从局部变量2中装载float类型值")]),t._v(" "),s("p",[t._v("fload_3 从局部变量3中装载float类型值")]),t._v(" "),s("p",[t._v("dload_0 从局部变量0中装载double类型值")]),t._v(" "),s("p",[t._v("dload_1 从局部变量1中装载double类型值")]),t._v(" "),s("p",[t._v("dload_2 从局部变量2中装载double类型值")]),t._v(" "),s("p",[t._v("dload_3 从局部变量3中装载double类型值")]),t._v(" "),s("p",[t._v("aload_0 从局部变量0中装载引用类型值")]),t._v(" "),s("p",[t._v("aload_1 从局部变量1中装载引用类型值")]),t._v(" "),s("p",[t._v("aload_2 从局部变量2中装载引用类型值")]),t._v(" "),s("p",[t._v("aload_3 从局部变量3中装载引用类型值")]),t._v(" "),s("p",[t._v("iaload 从数组中装载int类型值")]),t._v(" "),s("p",[t._v("laload 从数组中装载long类型值")]),t._v(" "),s("p",[t._v("faload 从数组中装载float类型值")]),t._v(" "),s("p",[t._v("daload 从数组中装载double类型值")]),t._v(" "),s("p",[t._v("aaload 从数组中装载引用类型值")]),t._v(" "),s("p",[t._v("baload 从数组中装载byte类型或boolean类型值")]),t._v(" "),s("p",[t._v("caload 从数组中装载char类型值")]),t._v(" "),s("p",[t._v("saload 从数组中装载short类型值")])]),t._v(" "),s("p",[s("strong",[t._v("局部变量压栈常用指令集")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("xload_n")]),t._v(" "),s("th",[t._v("xload_0")]),t._v(" "),s("th",[t._v("xload_1")]),t._v(" "),s("th",[t._v("xload_2")]),t._v(" "),s("th",[t._v("xload_3")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("b",[t._v("iload_n")])]),t._v(" "),s("td",[t._v("iload_0")]),t._v(" "),s("td",[t._v("iload_1")]),t._v(" "),s("td",[t._v("iload_2")]),t._v(" "),s("td",[t._v("iload_3")])]),t._v(" "),s("tr",[s("td",[s("b",[t._v("lload_n")])]),t._v(" "),s("td",[t._v("lload_0")]),t._v(" "),s("td",[t._v("lload_1")]),t._v(" "),s("td",[t._v("lload_2")]),t._v(" "),s("td",[t._v("lload_3")])]),t._v(" "),s("tr",[s("td",[s("b",[t._v("fload_n")])]),t._v(" "),s("td",[t._v("fload_0")]),t._v(" "),s("td",[t._v("fload_1")]),t._v(" "),s("td",[t._v("fload_2")]),t._v(" "),s("td",[t._v("fload_3")])]),t._v(" "),s("tr",[s("td",[s("b",[t._v("dload_n")])]),t._v(" "),s("td",[t._v("dload_0")]),t._v(" "),s("td",[t._v("dload_1")]),t._v(" "),s("td",[t._v("dload_2")]),t._v(" "),s("td",[t._v("dload_3")])]),t._v(" "),s("tr",[s("td",[s("b",[t._v("aload_n")])]),t._v(" "),s("td",[t._v("aload_0")]),t._v(" "),s("td",[t._v("aload_1")]),t._v(" "),s("td",[t._v("aload_2")]),t._v(" "),s("td",[t._v("aload_3")])])])]),t._v(" "),s("p",[s("strong",[t._v("局部变量压栈指令剖析")])]),t._v(" "),s("p",[s("mark",[t._v("局部变量压栈指令将给定的局部变量表中的数据压入操作数栈。")])]),t._v(" "),s("p",[t._v("这类指令大体可以分为：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("xload_<n>")]),t._v("（x为i、l、f、d、a，n为0到3）")]),t._v(" "),s("li",[s("code",[t._v("xload")]),t._v("（x为i、l、f、d、a）")])]),t._v(" "),s("p",[t._v("说明：在这里，x的取值表示数据类型。")]),t._v(" "),s("p",[t._v("指令xload_n表示将第n个局部变量压入操作数栈，比如iload_1、fload_0、aload_0等指令。其中aload_n表示将一个对象引用压栈。")]),t._v(" "),s("p",[t._v("指令xload通过指定参数的形式，把局部变量压入操作数栈，当使用这个命令时，表示局部变量的数量可能超过了4个，比如指令iload、fload等。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("字节码执行过程：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-03-711767fa32e65df625c0969b2cd1e275.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-f423054b5f9acf9adb69a0a6d16dd531.png",alt:"image"}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.局部变量压栈指令")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("count是long类型，占用两个slot")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-119b5a3dfd6bd40bc5e2aa3a3398578b.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-7cc1d7a80cb7f3f34d8fd8a021065dd1.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"常量入栈指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量入栈指令"}},[t._v("#")]),t._v(" 常量入栈指令")]),t._v(" "),s("blockquote",[s("p",[t._v("aconst_null 将null对象引用压入栈")]),t._v(" "),s("p",[t._v("iconst_m1 将int类型常量-1压入栈")]),t._v(" "),s("p",[t._v("iconst_0 将int类型常量0压入栈")]),t._v(" "),s("p",[t._v("iconst_1 将int类型常量1压入栈")]),t._v(" "),s("p",[t._v("iconst_2 将int类型常量2压入栈")]),t._v(" "),s("p",[t._v("iconst_3 将int类型常量3压入栈")]),t._v(" "),s("p",[t._v("iconst_4 将int类型常量4压入栈")]),t._v(" "),s("p",[t._v("iconst_5 将int类型常量5压入栈")]),t._v(" "),s("p",[t._v("lconst_0 将long类型常量0压入栈")]),t._v(" "),s("p",[t._v("lconst_1 将long类型常量1压入栈")]),t._v(" "),s("p",[t._v("fconst_0 将float类型常量0压入栈")]),t._v(" "),s("p",[t._v("fconst_1 将float类型常量1压入栈")]),t._v(" "),s("p",[t._v("dconst_0 将double类型常量0压入栈")]),t._v(" "),s("p",[t._v("dconst_1 将double类型常量1压入栈")]),t._v(" "),s("p",[t._v("bipush 将一个8位带符号整数压入栈")]),t._v(" "),s("p",[t._v("sipush 将16位带符号整数压入栈")]),t._v(" "),s("p",[t._v("ldc 把常量池中的项压入栈")]),t._v(" "),s("p",[t._v("ldc_w 把常量池中的项压入栈（使用宽索引）")]),t._v(" "),s("p",[t._v("ldc2_w 把常量池中long类型或者double类型的项压入栈（使用宽索引）")])]),t._v(" "),s("p",[s("strong",[t._v("常量入栈常用指令集")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("xconst_n")]),t._v(" "),s("th",[t._v("范围")]),t._v(" "),s("th",[t._v("xconst_null")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("xconst_m1")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("xconst_0")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("xconst_1")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("xconst_2")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("xconst_3")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("xconst_4")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("xconst_5")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("iconst_n")])]),t._v(" "),s("td",[t._v("[-1, 5]")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("iconst_m1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("iconst_0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("iconst_1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("iconst_2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("iconst_3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("iconst_4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("iconst_5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("lconst_n")])]),t._v(" "),s("td",[t._v("0, 1")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lconst_0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lconst_1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("fconst_n")])]),t._v(" "),s("td",[t._v("0, 1, 2")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("fconst_0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("fconst_1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("fconst_2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("dconst_n")])]),t._v(" "),s("td",[t._v("0, 1")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("dconst_0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("dconst_1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("aconst_n")])]),t._v(" "),s("td",[t._v("null, String literal, Class literal")]),t._v(" "),s("td",[t._v("aconst_null")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("bipush")])]),t._v(" "),s("td",[t._v("一个字节，2^8^，[-2^7^, 2^7^ - 1]，即[-128, 127]")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("sipush")])]),t._v(" "),s("td",[t._v("两个字节，2^16^，[-2^15^, 2^15^ - 1]，即[-32768, 32767]")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("ldc")])]),t._v(" "),s("td",[t._v("四个字节，2^32^，[-2^31^, 2^31^ - 1]")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("ldc_w")])]),t._v(" "),s("td",[t._v("宽索引")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("ldc2_w")])]),t._v(" "),s("td",[t._v("宽索引，long或double")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("p",[s("strong",[t._v("常量入栈指令剖析")])]),t._v(" "),s("p",[t._v("常量入栈指令的功能是将常数压入操作数栈，根据数据类型和入栈内容的不同，又可以分为const系列、push系列和ldc指令。")]),t._v(" "),s("p",[s("mark",[t._v("指令const系列")]),t._v("：用于对特定的常量入栈，入栈的常量隐含在指令本身里。指令有："),s("code",[t._v("iconst_<i>（i从-1到5）、lconst_<l>（1从0到1）、fconst_<f>（f从0到2）、dconst_<d>（d从0到1）、aconst_null")]),t._v("。比如，")]),t._v(" "),s("ul",[s("li",[t._v("iconst_m1将-1压入操作数栈；")]),t._v(" "),s("li",[t._v("iconst_x（x为0到5）将x压入栈；")]),t._v(" "),s("li",[t._v("lconst_0、lconst_1分别将长整数0和1压入栈；")]),t._v(" "),s("li",[t._v("fconst_0、fconst_1、fconst_2分别将浮点数0、1、2压入栈；")]),t._v(" "),s("li",[t._v("dconst_0和dconst_1分别将double型0和1压入栈；")]),t._v(" "),s("li",[t._v("aconst_null将null压入操作数栈；")])]),t._v(" "),s("p",[t._v("从指令的命名上不难找出规律，指令助记符的第一个字符总是喜欢表示数据类型，i表示整数，l表示长整数，f表示浮点数，d表示双精度浮点，习惯上用a表示对象引用。如果指令隐含操作的参数，会以下划线形式给出。")]),t._v(" "),s("p",[s("mark",[t._v("指令push系列")]),t._v("：主要包括bipush和sipush。它们的区别在于接收数据类型的不同，bipush接收8位整数作为参数，sipush接收16位整数，它们都将参数压入栈。")]),t._v(" "),s("p",[s("mark",[t._v("指令ldc系列")]),t._v("：如果以上指令都不能满足需求，那么可以使用万能的")]),t._v(" "),s("ul",[s("li",[t._v("ldc指令，它可以接收一个8位的参数，该参数指向常量池中的int、float或者String的索引，将指定的内容压入堆栈。")]),t._v(" "),s("li",[t._v("类似的还有ldc_w，它接收两个8位参数，能支持的索引范围大于ldc。")]),t._v(" "),s("li",[t._v("如果要压入的元素是long或者double类型的，则使用ldc2_w指令，使用方式都是类似的")])]),t._v(" "),s("p",[t._v("总结如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-03-564f7d138ba3234cb116dcd99bfebe53.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-becf05f11b991c4ce21e4f1a491e2ab4.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-7122b2152282f2fcdc0ab4ff7fd1c5d3.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-2f148ccb07a8b73bce0fcaae025fd111.png",alt:"image"}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.常量入栈指令")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushConstLdc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32767")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32768")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" iconst_m1\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" istore_1\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" iconst_5\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" istore_2\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" bipush "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" istore_3\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" bipush "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" istore "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" sipush "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" istore "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" sipush "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32767")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" istore "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" ldc "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#7 <32768>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" istore "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constLdc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" a1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" a2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" b1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" b2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" c1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" c2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-83c831bb974f35d260add024a68599b9.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"出栈装入局部变量表指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#出栈装入局部变量表指令"}},[t._v("#")]),t._v(" 出栈装入局部变量表指令")]),t._v(" "),s("blockquote",[s("p",[t._v("istore 将int类型值存入局部变量")]),t._v(" "),s("p",[t._v("lstore 将long类型值存入局部变量")]),t._v(" "),s("p",[t._v("fstore 将float类型值存入局部变量")]),t._v(" "),s("p",[t._v("dstore 将double类型值存入局部变量")]),t._v(" "),s("p",[t._v("astore 将将引用类型或returnAddress类型值存入局部变量")]),t._v(" "),s("p",[t._v("istore_0 将int类型值存入局部变量0")]),t._v(" "),s("p",[t._v("istore_1 将int类型值存入局部变量1")]),t._v(" "),s("p",[t._v("istore_2 将int类型值存入局部变量2")]),t._v(" "),s("p",[t._v("istore_3 将int类型值存入局部变量3")]),t._v(" "),s("p",[t._v("lstore_0 将long类型值存入局部变量0")]),t._v(" "),s("p",[t._v("lstore_1 将long类型值存入局部变量1")]),t._v(" "),s("p",[t._v("lstore_2 将long类型值存入局部变量2")]),t._v(" "),s("p",[t._v("lstore_3 将long类型值存入局部变量3")]),t._v(" "),s("p",[t._v("fstore_0 将float类型值存入局部变量0")]),t._v(" "),s("p",[t._v("fstore_1 将float类型值存入局部变量1")]),t._v(" "),s("p",[t._v("fstore_2 将float类型值存入局部变量2")]),t._v(" "),s("p",[t._v("fstore_3 将float类型值存入局部变量3")]),t._v(" "),s("p",[t._v("dstore_0 将double类型值存入局部变量0")]),t._v(" "),s("p",[t._v("dstore_1 将double类型值存入局部变量1")]),t._v(" "),s("p",[t._v("dstore_2 将double类型值存入局部变量2")]),t._v(" "),s("p",[t._v("dstore_3 将double类型值存入局部变量3")]),t._v(" "),s("p",[t._v("astore_0 将引用类型或returnAddress类型值存入局部变量0")]),t._v(" "),s("p",[t._v("astore_1 将引用类型或returnAddress类型值存入局部变量1")]),t._v(" "),s("p",[t._v("astore_2 将引用类型或returnAddress类型值存入局部变量2")]),t._v(" "),s("p",[t._v("astore_3 将引用类型或returnAddress类型值存入局部变量3")]),t._v(" "),s("p",[t._v("iastore 将int类型值存入数组中")]),t._v(" "),s("p",[t._v("lastore 将long类型值存入数组中")]),t._v(" "),s("p",[t._v("fastore 将float类型值存入数组中")]),t._v(" "),s("p",[t._v("dastore 将double类型值存入数组中")]),t._v(" "),s("p",[t._v("aastore 将引用类型值存入数组中")]),t._v(" "),s("p",[t._v("bastore 将byte类型或者boolean类型值存入数组中")]),t._v(" "),s("p",[t._v("castore 将char类型值存入数组中")]),t._v(" "),s("p",[t._v("sastore 将short类型值存入数组中")]),t._v(" "),s("p",[t._v("wide指令")]),t._v(" "),s("p",[t._v("wide 使用附加字节扩展局部变量索引")])]),t._v(" "),s("p",[s("strong",[t._v("出栈装入局部变量表常用指令集")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("xstore_n")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("xstore_0")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("xstore_1")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("xstore_2")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("xstore_3")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("istore_n")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("istore_0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("istore_1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("istore_2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("istore_3")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("lstore_n")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lstore_0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lstore_1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lstore_2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("lstore_3")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("fstore_n")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("fstore_0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("fstore_1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("fstore_2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("fstore_3")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("dstore_n")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("dstore_0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("dstore_1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("dstore_2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("dstore_3")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("astore_n")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("astore_0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("astore_1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("astore_2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("astore_3")])])])]),t._v(" "),s("p",[s("strong",[t._v("出栈装入局部变量表指令剖析")])]),t._v(" "),s("p",[t._v("出栈装入局部变量表指令用于将操作数栈中栈顶元素弹出后，装入局部变量表的指定位置，用于给局部变量赋值。这类指令主要以store的形式存在，比如"),s("code",[t._v("xstore（x为i、l、f、d、a）、xstore_n（x为i、l、f、d、a，n为0至3）")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("其中，指令istore_n将从操作数栈中弹出一个整数，并把它值给局部变量索引n位置。")]),t._v(" "),s("li",[t._v("指令xstore由于没有隐含参数信息，故需要提供一个byte类型的参数类指定目标局部变量表的位置。")])]),t._v(" "),s("p",[t._v("说明："),s("mark",[t._v("一般说来，类似像store这样的命令需要带一个参数，用来指明将弹出的元素放在局部变量表的第几个位置")]),t._v("。但是，为了尽可能压缩指令大小，使用专门的istore_1指令表示将弹出的元素放置在局部变量表第1个位置。类似的还有istore_0、istore_2、istore_3，它们分别表示从操作数栈顶弹出一个元素，存放在局部变量表第0、2、3个位置。由于局部变量表前几个位置总是非常常用，因此这种做法虽然增加了指令数量，但是可以大大压缩生成的字节码的体积。如果局部变量表很大，需要存储的槽位大于3，那么可以使用istore指令，外加一个参数，用来表示需要存放的槽位位置。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-87431f7e29a1cccd81af1bbc8d52ea09.png",alt:"image"}})]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v(" //3.出栈装入局部变量表指令\n    public void store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int k, double d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        int m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" k + "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        long l "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        String str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"atguigu"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        float f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(".0F"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-6895b007d7ec98b2e204eb2c69cb05eb.png",alt:"image"}})]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" iconst_0\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" istore "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" ldc "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#19 <Hello, World>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" astore "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n")])])]),s("p",[t._v("![image-20210110183328733](/Users/apple/Library/Application Support/typora-user-images/image-20210110183328733.png)")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-d0113eac2edd8f05d8dea422864e2502.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"算术指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术指令"}},[t._v("#")]),t._v(" 算术指令")]),t._v(" "),s("h3",{attrs:{id:"_2-3-1-作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-作用"}},[t._v("#")]),t._v(" 2.3.1. 作用")]),t._v(" "),s("p",[t._v("算术指令用于对两个操作数栈上的值进行某种特定运算，并把结果重新压入操作数栈。")]),t._v(" "),s("h3",{attrs:{id:"_2-3-2-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-分类"}},[t._v("#")]),t._v(" 2.3.2. 分类")]),t._v(" "),s("p",[t._v("大体上算术指令可以分为两种：对整型数据进行运算的指令与对浮点类型数据进行运算的指令。")]),t._v(" "),s("h3",{attrs:{id:"_2-3-3-byte、short、char和boolean类型说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-byte、short、char和boolean类型说明"}},[t._v("#")]),t._v(" 2.3.3. byte、short、char和boolean类型说明")]),t._v(" "),s("p",[t._v("在每一大类中，都有针对Java虚拟机具体数据类型的专用算术指令。但没有直接支持byte、short、char和boolean类型的算术指令，对于这些数据的运算，都使用int类型的指令来处理。此外，在处理boolean、byte、short和char类型的数组时，也会转换为使用对应的int类型的字节码指令来处理。")]),t._v(" "),s("h3",{attrs:{id:"_2-3-4-运算时的溢出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-4-运算时的溢出"}},[t._v("#")]),t._v(" 2.3.4. 运算时的溢出")]),t._v(" "),s("p",[t._v("数据运算可能会导致溢出，例如两个很大的正整数相加，结果可能是一个负数。其实Java虚拟机规范并无明确规定过整型数据溢出的具体结果，仅规定了在处理整型数据时，只有除法指令以及求余指令中当出现除数为0时会导致虚拟机抛出异常ArithmeticException。")]),t._v(" "),s("h3",{attrs:{id:"_2-3-5-运算模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-5-运算模式"}},[t._v("#")]),t._v(" 2.3.5. 运算模式")]),t._v(" "),s("p",[s("strong",[t._v("向最接近数舍入模式")]),t._v("：JVM要求在进行浮点数计算时，所有的运算结果都必须舍入到适当的精度，非精确结果必须舍入为可被表示的最接近的精确值，如果有两种可表示的形式与该值一样接近，将优先选择最低有效位为零的；")]),t._v(" "),s("p",[s("strong",[t._v("向零舍入模式")]),t._v("：将浮点数转换为整数时，采用该模式，该模式将在目标数值类型中选择一个最接近但是不大于原值的数字作为最精确的舍入结果；")]),t._v(" "),s("h3",{attrs:{id:"_2-3-6-nan值使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-6-nan值使用"}},[t._v("#")]),t._v(" 2.3.6. NaN值使用")]),t._v(" "),s("p",[t._v("当一个操作产生溢出时，将会使用有符号的无穷大表示，如果某个操作结果没有明确的数学定义的话，将会使用NaN值来表示。而且所有使用NaN值作为操作数的算术操作，结果都会返回NaN；")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-a760041544c15aeaf3c5339299337a6b.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-9aa9382656775388a27cffa145c1563f.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-fc85044683d3ae1ec98c667ca15df400.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"所有算数指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#所有算数指令"}},[t._v("#")]),t._v(" 所有算数指令")]),t._v(" "),s("h3",{attrs:{id:"所有算术指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#所有算术指令"}},[t._v("#")]),t._v(" 所有算术指令")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("整数运算")])]),t._v(" "),s("p",[t._v("iadd 执行int类型的加法")]),t._v(" "),s("p",[t._v("ladd 执行long类型的加法")]),t._v(" "),s("p",[t._v("isub 执行int类型的减法")]),t._v(" "),s("p",[t._v("lsub 执行long类型的减法")]),t._v(" "),s("p",[t._v("imul 执行int类型的乘法")]),t._v(" "),s("p",[t._v("lmul 执行long类型的乘法")]),t._v(" "),s("p",[t._v("idiv 执行int类型的除法")]),t._v(" "),s("p",[t._v("ldiv 执行long类型的除法")]),t._v(" "),s("p",[t._v("irem 计算int类型除法的余数")]),t._v(" "),s("p",[t._v("lrem 计算long类型除法的余数")]),t._v(" "),s("p",[t._v("ineg 对一个int类型值进行取反操作")]),t._v(" "),s("p",[t._v("lneg 对一个long类型值进行取反操作")]),t._v(" "),s("p",[t._v("iinc 把一个常量值加到一个int类型的局部变量上")]),t._v(" "),s("p",[s("strong",[t._v("逻辑运算")])]),t._v(" "),s("p",[s("strong",[t._v("移位操作")])]),t._v(" "),s("p",[t._v("ishl 执行int类型的向左移位操作")]),t._v(" "),s("p",[t._v("lshl 执行long类型的向左移位操作")]),t._v(" "),s("p",[t._v("ishr 执行int类型的向右移位操作")]),t._v(" "),s("p",[t._v("lshr 执行long类型的向右移位操作")]),t._v(" "),s("p",[t._v("iushr 执行int类型的向右逻辑移位操作")]),t._v(" "),s("p",[t._v("lushr 执行long类型的向右逻辑移位操作")]),t._v(" "),s("p",[s("strong",[t._v("按位布尔运算")])]),t._v(" "),s("p",[t._v("iand 对int类型值进行“逻辑与”操作")]),t._v(" "),s("p",[t._v("land 对long类型值进行“逻辑与”操作")]),t._v(" "),s("p",[t._v("ior 对int类型值进行“逻辑或”操作")]),t._v(" "),s("p",[t._v("lor 对long类型值进行“逻辑或”操作")]),t._v(" "),s("p",[t._v("ixor 对int类型值进行“逻辑异或”操作")]),t._v(" "),s("p",[t._v("lxor 对long类型值进行“逻辑异或”操作")]),t._v(" "),s("p",[s("strong",[t._v("浮点运算")])]),t._v(" "),s("p",[t._v("fadd 执行float类型的加法")]),t._v(" "),s("p",[t._v("dadd 执行double类型的加法")]),t._v(" "),s("p",[t._v("fsub 执行float类型的减法")]),t._v(" "),s("p",[t._v("dsub 执行double类型的减法")]),t._v(" "),s("p",[t._v("fmul 执行float类型的乘法")]),t._v(" "),s("p",[t._v("dmul 执行double类型的乘法")]),t._v(" "),s("p",[t._v("fdiv 执行float类型的除法")]),t._v(" "),s("p",[t._v("ddiv 执行double类型的除法")]),t._v(" "),s("p",[t._v("frem 计算float类型除法的余数")]),t._v(" "),s("p",[t._v("drem 计算double类型除法的余数")]),t._v(" "),s("p",[t._v("fneg 将一个float类型的数值取反")]),t._v(" "),s("p",[t._v("dneg 将一个double类型的数值取反")])]),t._v(" "),s("p",[s("strong",[t._v("算术指令集")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-03-b73cd4997821d948e4a609a5c87ae4b4.png",alt:"image"}})]),t._v(" "),s("p",[s("strong",[t._v("算术指令举例")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-b8fc0577213c159587cca6bc1c2a7635.png",alt:"image"}})]),t._v(" "),s("p",[t._v("Method1")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("method2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" ldc "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4 <10.0>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" fstore_1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" fload_1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" fneg\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" fstore_2\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" fload_2\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" fneg\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" fstore_1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n")])])]),s("hr"),t._v(" "),s("p",[t._v("method3")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-3e072ea7ef57b7d14f2af9d48a417ce0.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-10-86cd4464b20dab4eae8cfcd11452c982.png",alt:"image"}})]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("method4")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-4ef7dca60f8163e79caec9b871f99ab6.png",alt:"image"}})]),t._v(" "),s("p",[t._v("method5")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-510f75c2b42945cf7e238ab744e81f96.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[t._v("#")]),t._v(" 举例")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-3cefc47d4c9b29f6a21218bf334e6ca7.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-50f3c95e957f6940ddd368509e891e61.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"曾经的案例1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#曾经的案例1"}},[t._v("#")]),t._v(" 曾经的案例1")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-5166270beb4607678e5a99d7457e4699.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-5356a7351356b614ac08ef2ffed3a9e4.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-b39985b1e0e76d737d340a74bde7556a.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"曾经的案例2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#曾经的案例2"}},[t._v("#")]),t._v(" 曾经的案例2")]),t._v(" "),s("h4",{attrs:{id:"彻底搞定-运算符号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#彻底搞定-运算符号"}},[t._v("#")]),t._v(" 彻底搞定++运算符号")]),t._v(" "),s("p",[t._v("Method6")]),t._v(" "),s("blockquote",[s("p",[t._v("下面图中，生成的字节码指令一模一样，++i 和 i++ 都一样 ，如果不把这些赋值到一个变量，是一样的。")]),t._v(" "),s("p",[t._v("所以 for(int i = 0;i<10;i++) 和  for(int i = 0;i<10;++i) 的效果是一模一样的。我去")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-042de62e3f4913ca2b73fcf0bb21537e.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-f524f8466453c35c17c1c7773161ea66.png",alt:"image"}})]),t._v(" "),s("p",[t._v("method7")]),t._v(" "),s("blockquote",[s("p",[t._v("虽然说，单独写 i++ 和 ++i 是一样效果，但是和其他的一起使用，效果就不一样咯")])]),t._v(" "),s("p",[t._v("Int b = i++;")]),t._v(" "),s("p",[t._v("下面就是关键  看右边字节码的第三个，首先 iload_1 把本地变量表索引为1的压入栈中，这个时候栈顶是10，然后在 iinc 1 by 1 ,将索引为1的本地变量表的值 +1 ，这个时候了，索引为1的 值就变成了 11了，然后在 istore_2 ,在将当前栈顶的元素（还是为10）放入到 索引为2的地方，"),s("strong",[t._v("所以 i++ 就是先把 i以前的值赋给左边的变量，再执行++操作")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-a165e790660aea9e04410c3756a19105.png",alt:"image"}})]),t._v(" "),s("p",[t._v("++j")]),t._v(" "),s("p",[t._v("而++j 就是 先 ++ 然后在复制，请看 字节码，bi push 20 ，放入到栈中，然后 istore_3 放入到索引为3的位置，然后执行 iinc 3 by 1,将索引为3的位置的值 +1  编程 21，在 iload_3 将索引为3的值入栈，存入到 istore_4 ，赋值给b,")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-b051f5ff51213db533544d073ee193a9.png",alt:"image"}})]),t._v(" "),s("p",[t._v("method8")]),t._v(" "),s("blockquote",[s("p",[t._v("因为已经 iload_1 将 i 的值压入栈中，然后执行了 iinc 1 by 1 ，将i的值改为11，然后继续执行 istroe_1 就将 i的值重新有改为10了，所以最后还是10")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-11-fdc83a9d32c17f8cf331c97c0e202d58.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"比较指令的说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较指令的说明"}},[t._v("#")]),t._v(" 比较指令的说明")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-1f2550ee34f2ab81e51900c4d2d9638d.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"类型转换指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换指令"}},[t._v("#")]),t._v(" 类型转换指令")]),t._v(" "),s("p",[t._v("类型转换指令可以将两种不同的数值类型进行相互转换。")]),t._v(" "),s("p",[t._v("这些转换操作一般用于实现用户代码中的显式类型转换操作，或者用来处理字节码指令集中数据类型相关指令无法与数据类型一一对应的问题。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("宽化类型转换")])]),t._v(" "),s("p",[t._v("i2l 把int类型的数据转化为long类型")]),t._v(" "),s("p",[t._v("i2f 把int类型的数据转化为float类型")]),t._v(" "),s("p",[t._v("i2d 把int类型的数据转化为double类型")]),t._v(" "),s("p",[t._v("l2f 把long类型的数据转化为float类型")]),t._v(" "),s("p",[t._v("l2d 把long类型的数据转化为double类型")]),t._v(" "),s("p",[t._v("f2d 把float类型的数据转化为double类型")]),t._v(" "),s("p",[s("strong",[t._v("窄化类型转换")])]),t._v(" "),s("p",[t._v("i2b 把int类型的数据转化为byte类型")]),t._v(" "),s("p",[t._v("i2c 把int类型的数据转化为char类型")]),t._v(" "),s("p",[t._v("i2s 把int类型的数据转化为short类型")]),t._v(" "),s("p",[t._v("l2i 把long类型的数据转化为int类型")]),t._v(" "),s("p",[t._v("f2i 把float类型的数据转化为int类型")]),t._v(" "),s("p",[t._v("f2l 把float类型的数据转化为long类型")]),t._v(" "),s("p",[t._v("d2i 把double类型的数据转化为int类型")]),t._v(" "),s("p",[t._v("d2l 把double类型的数据转化为long类型")]),t._v(" "),s("p",[t._v("d2f 把double类型的数据转化为float类型")])]),t._v(" "),s("p",[s("strong",[t._v("类型转换指令集")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("byte")])]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("char")])]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("short")])]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("int")])]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("long")])]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("float")])]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("double")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("int")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("i2b")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("i2c")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("i2s")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("○")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("i2l")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("i2f")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("i2d")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("long")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("l2i i2b")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("l2i i2c")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("l2i i2s")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("l2i")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("○")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("l2f")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("l2d")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("float")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("f2i i2b")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("f2i i2c")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("f2i i2s")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("f2i")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("f2l")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("○")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("f2d")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("double")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("d2i i2b")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("d2i i2c")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("d2i i2s")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("d2i")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("d2l")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("d2f")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("○")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-84d0f7e96e42b9a7d273a9be341c396b.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"宽化类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#宽化类型转换"}},[t._v("#")]),t._v(" 宽化类型转换")]),t._v(" "),s("p",[s("strong",[t._v("宽化类型转换( Widening Numeric Conversions)")])]),t._v(" "),s("ol",[s("li",[t._v("转换规则")])]),t._v(" "),s("p",[t._v("Java虚拟机直接支持以下数值的宽化类型转换（ widening numeric conversion,小范围类型向大范围类型的安全转换）。也就是说，并不需要指令执行，包括")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("从int类型到long、float或者 double类型。对应的指令为：i21、i2f、i2d")])]),t._v(" "),s("li",[s("p",[t._v("从long类型到float、 double类型。对应的指令为：i2f、i2d")])]),t._v(" "),s("li",[s("p",[t._v("从float类型到double类型。对应的指令为：f2d")])])]),t._v(" "),s("p",[s("mark",[t._v("简化为：int--\x3elong--\x3efloat-> double")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("精度损失问题")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("宽化类型转换是不会因为超过目标类型最大值而丢失信息的，例如，从int转换到long,或者从int转换到double,都不会丢失任何信息，转换前后的值是精确相等的。")])]),t._v(" "),s("li",[s("p",[t._v("从int、long类型数值转换到float，或者long类型数值转换到double时，将可能发生精度丢失一一可能丢失掉几个最低有效位上的值，转换后的浮点数值是根据IEEE754最接近含入模式所得到的正确整数值。")])])]),t._v(" "),s("p",[t._v("尽管宽化类型转换实际上是可能发生精度丢失的，但是这种转换永远不会导致Java虚拟机抛出运行时异常")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("补充说明")])]),t._v(" "),s("p",[s("mark",[t._v("从byte、char和 short类型到int类型的宽化类型转换实际上是不存在的")]),t._v("。对于byte类型转为int,拟机并没有做实质性的转化处理，只是简单地通过操作数栈交換了两个数据。而将byte转为long时，使用的是i2l,可以看到在内部，byte在这里已经等同于int类型处理，类似的还有 short类型，这种处理方式有两个特点：")]),t._v(" "),s("p",[t._v("一方面可以减少实际的数据类型，如果为 short和byte都准备一套指令，那么指令的数量就会大増，而"),s("mark",[t._v("虚拟机目前的设计上，只愿意使用一个字节表示指令，因此指令总数不能超过256个，为了节省指令资源，将 short和byte当做int处理也在情理之中")]),t._v("。")]),t._v(" "),s("p",[t._v("另一方面，由于局部变量表中的槽位固定为32位，无论是byte或者 short存入局部变量表，都会占用32位空间。从这个角度说，也没有必要特意区分这几种数据类型。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-a83739cd9fdc6a40dfb2db472a859efa.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-41dcd9f3fe176ed2dc68a11952de90b6.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-75198e3fce906b20f4c61bf9a106f581.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"精度损失问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#精度损失问题"}},[t._v("#")]),t._v(" 精度损失问题")]),t._v(" "),s("blockquote",[s("p",[t._v("int 是四个字节。long 是八个字节， float 是四个字节 double 是八个字节")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-d8edf5f94350b5e2a5bce45e5ae15b5e.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("这个时候没有发生精度损失问题，数值不够大 double 是双精度，精度更高一些")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-43cecc94d08183f6c2c6de843a0649a7.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-6786c1191ece5be05d71a1fe9a91c50c.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-77c4711279e83449c2a029cf26175f13.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-53ce13af4187817958880dc617afa68d.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"窄化类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#窄化类型转换"}},[t._v("#")]),t._v(" 窄化类型转换")]),t._v(" "),s("p",[s("strong",[t._v("窄化类型转换( Narrowing Numeric Conversion)")])]),t._v(" "),s("ol",[s("li",[t._v("转换规则")])]),t._v(" "),s("p",[t._v("Java虚拟机也直接支持以下窄化类型转换：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("从主int类型至byte、 short或者char类型。对应的指令有：i2b、i2c、i2s")])]),t._v(" "),s("li",[s("p",[t._v("从long类型到int类型。对应的指令有：l2i")])]),t._v(" "),s("li",[s("p",[t._v("从float类型到int或者long类型。对应的指令有：f2i、f2l")])]),t._v(" "),s("li",[s("p",[t._v("从double类型到int、long或者float类型。对应的指令有：d2i、d2l、d2f")])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("精度损失问题")])]),t._v(" "),s("p",[t._v("窄化类型转换可能会导致转换结果具备不同的正负号、不同的数量级，因此，转换过程很可能会导致数值丢失精度。")]),t._v(" "),s("p",[t._v("尽管数据类型窄化转换可能会发生上限溢出、下限溢出和精度丢失等情况，但是Java虚拟机规范中明确规定数值类型的窄化转换指令永远不可能导致虚拟机抛出运行时异常")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("补充说明")])]),t._v(" "),s("p",[t._v("当将一个浮点值窄化转换为整数类型T(T限于int或long类型之一)的时候，将遵循以下转换规则：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如果浮点值是NaN,那转换结果就是int或long类型的0.")])]),t._v(" "),s("li",[s("p",[t._v("如果浮点值不是无穷大的话，浮点值使用IEEE754的向零含入模式取整，获得整数值v。如果v在目标类型T(int或long)的表示范围之内，那转换结果就是v。否则，将根据v的符号，转换为T所能表示的最大或者最小正数")])])]),t._v(" "),s("p",[t._v("当将一个double类型窄化转换为float类型时，将遵循以下转换规则，通过向最接近数舍入模式舍入一个可以使用float类型表示的数字。最后结果根据下面这3条规则判断：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如果转换结果的绝对值太小而无法使用float来表示，将返回float类型的"),s("mark",[t._v("正负零")])])]),t._v(" "),s("li",[s("p",[t._v("如果转换结果的绝对值太大而无法使用float来表示，将返回float类型的"),s("mark",[t._v("正负无穷大")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("对于double类型的NaN值将按规定转换为float类型的"),s("mark",[t._v("NaN值")]),t._v("。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-e39311ac8b46162c89edbb1b71e7a670.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-be36bb538cb1c32b50aa7d3c95faa98c.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-1ba2afd5a56a2d60f166a31ce3079ce6.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-8594eef3af5912d73bfd10669e0f9180.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"精度损失问题-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#精度损失问题-2"}},[t._v("#")]),t._v(" 精度损失问题")]),t._v(" "),s("blockquote",[s("p",[t._v("byte最大只是 127")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-87c39ad446c2064b91ad53aeabb84475.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-5d030f3b2da7ba6d71c57b97d3c3c6ab.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-12-ea27780ca094593b5585811e43ceeb23.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-537c4a5b77793db2f2076c0d6f9b9c43.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-3e7a394c6bca57abe8abead3757b87b1.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"对象的创建与访问指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的创建与访问指令"}},[t._v("#")]),t._v(" 对象的创建与访问指令")]),t._v(" "),s("p",[t._v("Java是面向对象的程序设计语言，虚拟机平台从字节码层面就对面向对象做了深层次的支持。有一系列指令专门用于对象操作，可进一步细分为创建指令、字段访问指令、数组操作指令、类型检查指令。")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("对象操作指令")])]),t._v(" "),s("p",[t._v("new 创建一个新对象")]),t._v(" "),s("p",[t._v("getfield 从对象中获取字段")]),t._v(" "),s("p",[t._v("putfield 设置对象中字段的值")]),t._v(" "),s("p",[t._v("getstatic 从类中获取静态字段")]),t._v(" "),s("p",[t._v("putstatic 设置类中静态字段的值")]),t._v(" "),s("p",[t._v("checkcast 确定对象为所给定的类型。后跟目标类，判断栈顶元素是否为目标类 / 接口的实例。如果不是便抛出异常")]),t._v(" "),s("p",[t._v("instanceof 判断对象是否为给定的类型。后跟目标类，判断栈顶元素是否为目标类 / 接口的实例。是则压入 1，否则压入 0")]),t._v(" "),s("p",[s("strong",[t._v("数组操作指令")])]),t._v(" "),s("p",[t._v("newarray 分配数据成员类型为基本上数据类型的新数组")]),t._v(" "),s("p",[t._v("anewarray 分配数据成员类型为引用类型的新数组")]),t._v(" "),s("p",[t._v("arraylength 获取数组长度")]),t._v(" "),s("p",[t._v("multianewarray 分配新的多维数组")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-c9f7e43bfc8484a3a471b95787ba3c67.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"创建指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建指令"}},[t._v("#")]),t._v(" 创建指令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("创建指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("new")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("创建类实例")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("newarray")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("创建基本类型数组")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("anewarray")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("创建引用类型数组")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("multilanewarra")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("创建多维数组")])])])]),t._v(" "),s("p",[t._v("虽然类实例和数组都是对象，但Java虚拟机对类实例和数组的创建与操作使用了不同的字节码指令：")]),t._v(" "),s("ol",[s("li",[t._v("创建类实例的指令：\n"),s("ul",[s("li",[t._v("创建类实例的指令：new")]),t._v(" "),s("li",[t._v("它接收一个操作数，为指向常量池的索引，表示要创建的类型，执行完成后，将对象的引用压入栈。")])])]),t._v(" "),s("li",[t._v("创建数组的指令：\n"),s("ul",[s("li",[t._v("创建数组的指令：newarray、anewarray、multianewarray")]),t._v(" "),s("li",[t._v("上述创建指令可以用于创建对象或者数组，由于对象和数组在Java中的广泛使用，这些指令的使用频率也非常高。")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-81072d9b06d5c464725875e31d66ab43.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-10ecf70525e7ed2d9a30f71e3851ce27.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-464d8c65558ad9ee13c6b48de067ca10.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"字段访问指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字段访问指令"}},[t._v("#")]),t._v(" 字段访问指令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("字段访问指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("getstatic、putstatic")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("访问类字段（static字段，或者称为类变量）的指令")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("getfield、 putfield")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("访问类实例字段（非static字段，或者称为实例变量）的指令")])])])]),t._v(" "),s("p",[t._v("对象创建后，就可以通过对象访问指令获取对象实例或数组实例中的字段或者数组元素。")]),t._v(" "),s("ul",[s("li",[s("mark",[t._v("访问类字段（static字段，或者称为类变量）的指令：getstatic、putstatic")])]),t._v(" "),s("li",[s("mark",[t._v("访问类实例字段（非static字段，或者称为实例变量）的指令：getfield、putfield")])])]),t._v(" "),s("p",[t._v("举例：以getstatic指令为例，它含有一个操作数，为指向常量池的Fieldref索引，它的作用就是获取Fieldref指定的对象或者值，并将其压入操作数栈。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hel1o"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("对应的字节码指令：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" getstatic "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#8 <java/lang/System.out>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" ldc "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#9 <hello>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" invokevirtual "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#10 <java/io/PrintStream.println>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n")])])]),s("p",[t._v("图示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-a3b20f13d9fc69cca436cdb76800b3a0.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-b3431e8a7443f5b402a48f15a1c10e7a.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-cff2b6fe3c044553dda5e9c051658c5b.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-a50889674fdf201d50ef1ed72e641b98.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-34cc872b707d61cd1af5aadc022333f7.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-3072e24b397062b764acb48f3dc5850e.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"数组操作指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组操作指令"}},[t._v("#")]),t._v(" 数组操作指令")]),t._v(" "),s("p",[t._v("数组操作指令主要有：xastore和xaload指令。具体为：")]),t._v(" "),s("ul",[s("li",[t._v("把一个数组元素加载到操作数栈的指令：baload、caload、saload、iaload、laload、faload、daload、aaload")]),t._v(" "),s("li",[t._v("将一个操作数栈的值存储到数组元素中的指令：bastore、castore、sastore、iastore、lastore、fastore、dastore、aastore")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("数组指令")]),t._v(" "),s("th",[t._v("byte(boolean)")]),t._v(" "),s("th",[t._v("char")]),t._v(" "),s("th",[t._v("short")]),t._v(" "),s("th",[t._v("long")]),t._v(" "),s("th",[t._v("long")]),t._v(" "),s("th",[t._v("float")]),t._v(" "),s("th",[t._v("double")]),t._v(" "),s("th",[t._v("reference")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("xaload")])]),t._v(" "),s("td",[t._v("baload")]),t._v(" "),s("td",[t._v("caload")]),t._v(" "),s("td",[t._v("saload")]),t._v(" "),s("td",[t._v("iaload")]),t._v(" "),s("td",[t._v("laload")]),t._v(" "),s("td",[t._v("faload")]),t._v(" "),s("td",[t._v("daload")]),t._v(" "),s("td",[t._v("aaload")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("xastore")])]),t._v(" "),s("td",[t._v("bastore")]),t._v(" "),s("td",[t._v("castore")]),t._v(" "),s("td",[t._v("sastore")]),t._v(" "),s("td",[t._v("iastore")]),t._v(" "),s("td",[t._v("lastore")]),t._v(" "),s("td",[t._v("fastore")]),t._v(" "),s("td",[t._v("dastore")]),t._v(" "),s("td",[t._v("aastore")])])])]),t._v(" "),s("p",[t._v("取数组长度的指令：arraylength。该指令弹出栈顶的数组元素，获取数组的长度，将长度压入栈。")]),t._v(" "),s("p",[t._v("指令xaload表示将数组的元素压栈，比如saload、caload分别表示压入short数组和char数组。指令xaload在执行时，要求操作数中栈顶元素为数组索引i，栈顶顺位第2个元素为数组引用a，该指令会弹出栈顶这两个元素，并将a[i]重新压入栈。")]),t._v(" "),s("p",[t._v("xastore则专门针对数组操作，以iastore为例，它用于给一个int数组的给定索引赋值。在iastore执行前，操作数栈顶需要以此准备3个元素：值、索引、数组引用，iastore会弹出这3个值，并将值赋给数组中指定索引的位置。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-13-7b52d2801b19f9828655281e584ce26c.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-daf00fa0a4858bc8a2b88a6c719b516f.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-082ece697b06bc70054527d7be1d0f57.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"boolean类型数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean类型数组"}},[t._v("#")]),t._v(" boolean类型数组")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-41f94553ed6cc96758880bb886985678.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-865c028abeb1ec9c182d43a868744f56.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"类型检查指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型检查指令"}},[t._v("#")]),t._v(" 类型检查指令")]),t._v(" "),s("p",[t._v("检查类实例或数组类型的指令：instanceof、checkcast。")]),t._v(" "),s("ul",[s("li",[t._v("指令checkcast用于检查类型强制转换是否可以进行。如果可以进行，那么checkcast指令不会改变操作数栈，否则它会抛出ClassCastException异常。")]),t._v(" "),s("li",[t._v("指令instanceof用来判断给定对象是否是某一个类的实例，它会将判断结果压入操作数栈。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型检查指令")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("instanceof")]),t._v(" "),s("td",[t._v("检查类型强制转换是否可以进行")])]),t._v(" "),s("tr",[s("td",[t._v("checkcast")]),t._v(" "),s("td",[t._v("判断给定对象是否是某一个类的实例")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-2eb0eb628cf238ff8ae9df11645a0313.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-a4c837c607200e83df18df5772ea7232.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"方法调用与返回指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法调用与返回指令"}},[t._v("#")]),t._v(" 方法调用与返回指令")]),t._v(" "),s("p",[s("strong",[t._v("方法调用指令")])]),t._v(" "),s("p",[t._v("invokcvirtual 运行时按照对象的类来调用实例方法")]),t._v(" "),s("p",[t._v("invokespecial 根据编译时类型来调用实例方法")]),t._v(" "),s("p",[t._v("invokestatic 调用类（静态）方法")]),t._v(" "),s("p",[t._v("invokcinterface 调用接口方法")]),t._v(" "),s("p",[s("strong",[t._v("方法返回指令")])]),t._v(" "),s("p",[t._v("ireturn 从方法中返回int类型的数据")]),t._v(" "),s("p",[t._v("lreturn 从方法中返回long类型的数据")]),t._v(" "),s("p",[t._v("freturn 从方法中返回float类型的数据")]),t._v(" "),s("p",[t._v("dreturn 从方法中返回double类型的数据")]),t._v(" "),s("p",[t._v("areturn 从方法中返回引用类型的数据")]),t._v(" "),s("p",[t._v("return 从方法中返回，返回值为void")]),t._v(" "),s("h3",{attrs:{id:"方法调用指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法调用指令"}},[t._v("#")]),t._v(" 方法调用指令")]),t._v(" "),s("p",[t._v("方法调用指令：invokevirtual、invokeinterface、invokespecial、invokestatic、invokedynamic，以下5条指令用于方法调用：")]),t._v(" "),s("ul",[s("li",[t._v("invokevirtual指令用于调用对象的实例方法，根据对象的实际类型进行分派（虚方法分派），支持多态。这也是Java语言中最常见的方法分派方式。")]),t._v(" "),s("li",[t._v("invokeinterface指令用于调用接口方法，它会在运行时搜索由特定对象所实现的这个接口方法，并找出适合的方法进行调用。")]),t._v(" "),s("li",[t._v("invokespecial指令用于调用一些需要特殊处理的实例方法，包括实例初始化方法（构造器）、私有方法和父类方法。这些方法都是静态类型绑定的，不会在调用时进行动态派发。")]),t._v(" "),s("li",[t._v("invokestatic指令用于调用命名类中的类方法（static方法）。这是静态绑定的。")]),t._v(" "),s("li",[t._v("invokedynamic指令用于调用动态绑定的方法，这个是JDK1.7后新加入的指令。用于在运行时动态解析出调用点限定符所引用的方法，并执行该方法。")]),t._v(" "),s("li",[t._v("invokedynamic指令的分派逻辑是由用户所设定的引导方法决定的，而前面4条调用指令的分派逻辑都固化在java虚拟机内部。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法调用指令")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("invokevirtual")]),t._v(" "),s("td",[t._v("调用对象的实例方法")])]),t._v(" "),s("tr",[s("td",[t._v("invokeinterface")]),t._v(" "),s("td",[t._v("调用接口方法")])]),t._v(" "),s("tr",[s("td",[t._v("invokespecial")]),t._v(" "),s("td",[t._v("调用一些需要特殊处理的实例方法，包括实例初始化方法（构造器）、私有方法和父类方法")])]),t._v(" "),s("tr",[s("td",[t._v("invokestatic")]),t._v(" "),s("td",[t._v("调用命名类中的类方法（static方法）")])]),t._v(" "),s("tr",[s("td",[t._v("invokedynamic")]),t._v(" "),s("td",[t._v("调用动态绑定的方法")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-a1b30b43c5e744038bfd33c7f5a80c02.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"invokespecial"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#invokespecial"}},[t._v("#")]),t._v(" invokespecial")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-fc959fbc57c52bfce4623a44ef8e23fe.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-0b61657326f683c6b4bcaae1c7f6bba8.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"invokestatic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#invokestatic"}},[t._v("#")]),t._v(" invokestatic")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-28bbdc8444f026df8db956dc6521e21e.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-b78110ba7ce6b1f9a9e365b82b09352b.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"invokeinterface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#invokeinterface"}},[t._v("#")]),t._v(" invokeinterface")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-dd6e3c8c4d0bca9ec2ae671904dc9dc6.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"invokevitual"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#invokevitual"}},[t._v("#")]),t._v(" invokevitual")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-14-4e93382944fab7911a23fc2da0d9fd80.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"方法返回指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法返回指令"}},[t._v("#")]),t._v(" 方法返回指令")]),t._v(" "),s("p",[t._v("方法调用结束前，需要进行返回。方法返回指令是根据返回值的类型区分的。")]),t._v(" "),s("ul",[s("li",[t._v("包括ireturn（当返回值是boolean、byte、char、short和int 类型时使用）、lreturn、freturn、dreturn和areturn")]),t._v(" "),s("li",[t._v("另外还有一条return 指令供声明为void的方法、实例初始化方法以及类和接口的类初始化方法使用。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法返回指令")]),t._v(" "),s("th",[t._v("void")]),t._v(" "),s("th",[t._v("int")]),t._v(" "),s("th",[t._v("long")]),t._v(" "),s("th",[t._v("float")]),t._v(" "),s("th",[t._v("double")]),t._v(" "),s("th",[t._v("reference")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("xreturn")])]),t._v(" "),s("td",[t._v("return")]),t._v(" "),s("td",[t._v("ireturn")]),t._v(" "),s("td",[t._v("lreturn")]),t._v(" "),s("td",[t._v("freutrn")]),t._v(" "),s("td",[t._v("dreturn")]),t._v(" "),s("td",[t._v("areturn")])])])]),t._v(" "),s("p",[t._v("通过ireturn指令，将当前函数操作数栈的顶层元素弹出，并将这个元素压入调用者函数的操作数栈中（因为调用者非常关心函数的返回值），所有在当前函数操作数栈中的其他元素都会被丢弃。")]),t._v(" "),s("p",[t._v("如果当前返回的是synchronized方法，那么还会执行一个隐含的monitorexit指令，退出临界区。")]),t._v(" "),s("p",[t._v("最后，会丢弃当前方法的整个帧，恢复调用者的帧，并将控制权转交给调用者。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("methodReturn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("图示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-caf1135f2b2fadb276b530f56484bcb5.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-8cd907ef594b65fed7b0d3bd5649890a.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"ireturn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ireturn"}},[t._v("#")]),t._v(" ireturn")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-52c498665c734f1ece630ddb4ba5c0c0.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"freturn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#freturn"}},[t._v("#")]),t._v(" freturn")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-3f334300772de3a1f5af36089bb83dcc.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"ireturn-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ireturn-2"}},[t._v("#")]),t._v(" ireturn")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-b208b71f2f94a33d435aa4a8f0b7adb3.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"方法调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法调用"}},[t._v("#")]),t._v(" 方法调用")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-3952bbc64af18242cec7f063ab650feb.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"操作数栈管理指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作数栈管理指令"}},[t._v("#")]),t._v(" 操作数栈管理指令")]),t._v(" "),s("p",[t._v("如同操作一个普通数据结构中的堆栈那样，JVM提供的操作数栈管理指令，可以用于直接操作操作数栈的指令。")]),t._v(" "),s("p",[t._v("这类指令包括如下内容：")]),t._v(" "),s("ul",[s("li",[t._v("将一个或两个元素从栈顶弹出，并且直接废弃："),s("code",[t._v("pop，pop2")])]),t._v(" "),s("li",[t._v("复制栈顶一个或两个数值并将复制值或双份的复制值重新压入栈顶："),s("code",[t._v("dup，dup2，dup_x1，dup2_×1，dup_×2，dup2_×2")])]),t._v(" "),s("li",[t._v("将栈最顶端的两个Slot数值位置交换："),s("code",[t._v("swap")]),t._v("。Java虚拟机没有提供交换两个64位数据类型（long、double）数值的指令。")]),t._v(" "),s("li",[t._v("指令"),s("code",[t._v("nop")]),t._v("，是一个非常特殊的指令，它的字节码为0x00。和汇编语言中的nop一样，它表示什么都不做。这条指令一般可用于调试、占位等。")])]),t._v(" "),s("p",[t._v("这些指令属于通用型，对栈的压入或者弹出无需指明数据类型。")]),t._v(" "),s("ul",[s("li",[s("mark",[t._v("不带_x的指令是复制栈顶数据并压入栈顶")]),t._v("。包括两个指令，"),s("code",[t._v("dup，dup2")]),t._v("。dup的系数代表要复制的Slot个数。dup开头的指令用于复制1个Slot的数据。例如1个int或1个reference类型数据dup2开头的指令用于复制2个Slot的数据。例如1个long，或2个int，或1个int+1个float类型数据")]),t._v(" "),s("li",[s("mark",[t._v("带_x的指令是复制栈顶数据并插入栈顶以下的某个位置")]),t._v("。共有4个指令，"),s("code",[t._v("dup_×1，dup2_×1，dup_×2，dup2×2")]),t._v("。对于带_x的复制插入指令，只要将指令的dup和x的系数相加，结果即为需要插入的位置。因此dup_×1插入位置：1+1=2，即栈顶2个slot下面dup_×2插入位置：1+2=3，即栈顶3个slot下面；dup2×1插入位置：2+1=3，即栈顶3个Slot下面")]),t._v(" "),s("li",[t._v("pop：将栈顶的1个Slot数值出栈。例如1个short类型数值")]),t._v(" "),s("li",[t._v("pop2：将栈顶的2个slot数值出栈。例如1个double类型数值，或者2个int类型数值")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("通用(无类型）栈操作")])]),t._v(" "),s("p",[t._v("nop 不做任何操作")]),t._v(" "),s("p",[t._v("pop 弹出栈顶端一个字长的内容")]),t._v(" "),s("p",[t._v("pop2 弹出栈顶端两个字长的内容")]),t._v(" "),s("p",[t._v("dup 复制栈顶部一个字长内容")]),t._v(" "),s("p",[t._v("dup_x1 复制栈顶部一个字长的内容，然后将复制内容及原来弹出的两个字长的内容压入栈")]),t._v(" "),s("p",[t._v("dup_x2 复制栈顶部一个字长的内容，然后将复制内容及原来弹出的三个字长的内容压入栈")]),t._v(" "),s("p",[t._v("dup2 复制栈顶部两个字长内容")]),t._v(" "),s("p",[t._v("dup2_x1 复制栈顶部两个字长的内容，然后将复制内容及原来弹出的三个字长的内容压入栈")]),t._v(" "),s("p",[t._v("dup2_x2 复制栈顶部两个字长的内容，然后将复制内容及原来弹出的四个字长的内容压入栈")]),t._v(" "),s("p",[t._v("swap 交换栈顶部两个字长内容")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-17c5eb879697c032f42532ba80556fc3.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-2b566034ad24793afb1d5d8d2eb112de.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"dup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dup"}},[t._v("#")]),t._v(" dup")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-1777bb12a64797ac4909bc00229a6aa4.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"pop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pop"}},[t._v("#")]),t._v(" Pop")]),t._v(" "),s("blockquote",[s("p",[t._v("不在赋值，直接 obj.tostring  因为 这个obj.tostring 没有使用，所以就直接pop了，因为引用类型占用一个slot，所以是pop，如果是long double 则会pop2")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-6e21563556ee3a0bf271e8f75fee37fb.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"pop2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pop2"}},[t._v("#")]),t._v(" pop2")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-9c5171f4a021d2ff8ebdcf0e7f0764b9.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"dup2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dup2"}},[t._v("#")]),t._v(" dup2")]),t._v(" "),s("blockquote",[s("p",[t._v("long类型2个slot，下面方法，nextIndex 返回值还是0 因为 index++ 是先赋值，后返回，index会变成1")]),t._v(" "),s("ol",[s("li",[t._v("第一步先将this入栈")]),t._v(" "),s("li",[t._v("然后dup 复制一份出来")]),t._v(" "),s("li",[t._v("调用 getfield 获取index")]),t._v(" "),s("li",[t._v("因为long是2个slot 所以 dup2_x1 是将当前栈 复制一份出来，然后插入到当前位置向下数3个slot的位置，也就是栈的地步")]),t._v(" "),s("li",[t._v("然后将常量1压入栈")]),t._v(" "),s("li",[t._v("再将  现在处于栈顶 index 0 加1")]),t._v(" "),s("li",[t._v("然后调用putfield 将 index 赋值为1 此时就会弹出")]),t._v(" "),s("li",[t._v("再返回栈底的 index 0")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-e8706df628419cb86769d0b7b296c173.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"控制转移指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制转移指令"}},[t._v("#")]),t._v(" 控制转移指令")]),t._v(" "),s("p",[t._v("程序流程离不开条件控制，为了支持条件跳转，虚拟机提供了大量字节码指令，大体上可以分为")]),t._v(" "),s("ul",[s("li",[t._v("1）比较指令、")]),t._v(" "),s("li",[t._v("2）条件跳转指令、")]),t._v(" "),s("li",[t._v("3）比较条件跳转指令、")]),t._v(" "),s("li",[t._v("4）多条件分支跳转指令、")]),t._v(" "),s("li",[t._v("5）无条件跳转指令等。")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("比较指令")])]),t._v(" "),s("p",[t._v("lcmp 比较long类型值")]),t._v(" "),s("p",[t._v("fcmpl 比较float类型值（当遇到NaN时，返回-1）")]),t._v(" "),s("p",[t._v("fcmpg 比较float类型值（当遇到NaN时，返回1）")]),t._v(" "),s("p",[t._v("dcmpl 比较double类型值（当遇到NaN时，返回-1）")]),t._v(" "),s("p",[t._v("dcmpg 比较double类型值（当遇到NaN时，返回1）")]),t._v(" "),s("p",[s("strong",[t._v("条件跳转指令")])]),t._v(" "),s("p",[t._v("ifeq 如果等于0，则跳转")]),t._v(" "),s("p",[t._v("ifne 如果不等于0，则跳转")]),t._v(" "),s("p",[t._v("iflt 如果小于0，则跳转")]),t._v(" "),s("p",[t._v("ifge 如果大于等于0，则跳转")]),t._v(" "),s("p",[t._v("ifgt 如果大于0，则跳转")]),t._v(" "),s("p",[t._v("ifle 如果小于等于0，则跳转")]),t._v(" "),s("p",[s("strong",[t._v("比较条件分支指令")])]),t._v(" "),s("p",[t._v("if_icmpeq 如果两个int值相等，则跳转")]),t._v(" "),s("p",[t._v("if_icmpne 如果两个int类型值不相等，则跳转")]),t._v(" "),s("p",[t._v("if_icmplt 如果一个int类型值小于另外一个int类型值，则跳转")]),t._v(" "),s("p",[t._v("if_icmpge 如果一个int类型值大于或者等于另外一个int类型值，则跳转")]),t._v(" "),s("p",[t._v("if_icmpgt 如果一个int类型值大于另外一个int类型值，则跳转")]),t._v(" "),s("p",[t._v("if_icmple 如果一个int类型值小于或者等于另外一个int类型值，则跳转")]),t._v(" "),s("p",[t._v("ifnull 如果等于null，则跳转")]),t._v(" "),s("p",[t._v("ifnonnull 如果不等于null，则跳转")]),t._v(" "),s("p",[t._v("if_acmpeq 如果两个对象引用相等，则跳转")]),t._v(" "),s("p",[t._v("if_acmpne 如果两个对象引用不相等，则跳转")]),t._v(" "),s("p",[s("strong",[t._v("多条件分支跳转指令")])]),t._v(" "),s("p",[t._v("tableswitch 通过索引访问跳转表，并跳转")]),t._v(" "),s("p",[t._v("lookupswitch 通过键值匹配访问跳转表，并执行跳转操作")]),t._v(" "),s("p",[s("strong",[t._v("无条件跳转指令")])]),t._v(" "),s("p",[t._v("goto 无条件跳转")]),t._v(" "),s("p",[t._v("goto_w 无条件跳转（宽索引）")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-58c5a573002f7868bfd05aa64efad1d2.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"_2-8-1-比较指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-1-比较指令"}},[t._v("#")]),t._v(" 2.8.1. 比较指令")]),t._v(" "),s("p",[t._v("比较指令的作用是比较占栈顶两个元素的大小，并将比较结果入栈。比较指令有： dcmpg,dcmpl、 fcmpg、fcmpl、lcmp。与前面讲解的指令类似，首字符d表示double类型，f表示float,l表示long。")]),t._v(" "),s("p",[t._v("对于double和float类型的数字，由于NaN的存在，各有两个版本的比较指令。以float为例，有fcmpg和fcmpl两个指令，它们的区别在于在数字比较时，若遇到NaN值，处理结果不同。")]),t._v(" "),s("p",[t._v("指令dcmpl和 dcmpg也是类似的，根据其命名可以推测其含义，在此不再赘述。")]),t._v(" "),s("p",[t._v("数值类型的数据，才可以谈大小！boolean、引用数据类型不能比较大小。")]),t._v(" "),s("p",[s("strong",[t._v("举例")])]),t._v(" "),s("p",[t._v("指令 fcmp和fcmpl都从中弹出两个操作数，并将它们做比较，设栈顶的元素为v2，顶顺位第2位的元素为v1：若v1=v2，则压入0；若v1>v2，则压入1；若v1<v2，则压入-1。")]),t._v(" "),s("p",[t._v("两个指令的不同之处在于，如果遇到NaN值， fcmpg会压入1,而fcmpl会压入-1")]),t._v(" "),s("h3",{attrs:{id:"条件跳转指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件跳转指令"}},[t._v("#")]),t._v(" 条件跳转指令")]),t._v(" "),s("p",[t._v("条件跳转指令通常和比较指令结合使用。在条件跳转指令执行前，一般可以先用比较指令进行栈顶元素的准备，然后进行条件跳转。")]),t._v(" "),s("p",[t._v("条件跳转指令有：ifeq，iflt，ifle，ifne，ifgt，ifge，ifnull，ifnonnull。这些指令都接收两个字节的操作数，用于计算跳转的位置（16位符号整数作为当前位置的offset）。")]),t._v(" "),s("p",[t._v("它们的统一含义为：弹出栈顶元素，测试它是否满足某一条件，"),s("mark",[t._v("如果满足条件，则跳转到给定位置")]),t._v("。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("<")]),t._v(" "),s("th",[t._v("<=")]),t._v(" "),s("th",[t._v("==")]),t._v(" "),s("th",[t._v("!=")]),t._v(" "),s("th",[t._v(">=")]),t._v(" "),s("th",[t._v(">")]),t._v(" "),s("th",[t._v("null")]),t._v(" "),s("th",[t._v("not null")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("iflt")]),t._v(" "),s("td",[t._v("ifle")]),t._v(" "),s("td",[t._v("ifeq")]),t._v(" "),s("td",[t._v("ifng")]),t._v(" "),s("td",[t._v("ifge")]),t._v(" "),s("td",[t._v("ifgt")]),t._v(" "),s("td",[t._v("ifnull")]),t._v(" "),s("td",[t._v("ifnonnull")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-8866cf9965da619fd03f1b7af3ccd0ae.png",alt:"image"}})]),t._v(" "),s("p",[t._v("与前面运算规则一致：")]),t._v(" "),s("ul",[s("li",[t._v("对于boolean、byte、char、short类型的条件分支比较操作，都是使用int类型的比较指令完成")]),t._v(" "),s("li",[t._v("对于long、float、double类型的条件分支比较操作，则会先执行相应类型的比较运算指令，运算指令会返回一个整型值到操作数栈中，随后再执行int类型的条件分支比较操作来完成整个分支跳转")])]),t._v(" "),s("p",[t._v("由于各类型的比较最终都会转为int类型的比较操作，所以Java虚拟机提供的int类型的条件分支指令是最为丰富和强大的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-15-a4c67f716ab97efe0ce02267ae8f380c.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-1dd01dd5dc92472bfd9e0e3bd3d57625.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"和null进行比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和null进行比较"}},[t._v("#")]),t._v(" 和null进行比较")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-da3acbb0a3fa76f13cf34bf886c9dd48.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"compare"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compare"}},[t._v("#")]),t._v(" compare")]),t._v(" "),s("p",[t._v("Float")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-4b8b057c91baee77238d23da123260c7.png",alt:"image"}})]),t._v(" "),s("p",[t._v("int 和long")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-fcda85cbf26281f1f55ec30652cfb6ad.png",alt:"image"}})]),t._v(" "),s("p",[t._v("double")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-b38dde03f8c5caefdde316649f8f7873.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"比较条件跳转指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较条件跳转指令"}},[t._v("#")]),t._v(" 比较条件跳转指令")]),t._v(" "),s("p",[t._v("比较条件跳转指令类似于比较指令和条件跳转指令的结合体，它将比较和跳转两个步骤合二为一。")]),t._v(" "),s("p",[t._v("这类指令有：if_icmpeq、if_icmpne、if_icmplt、if_icmpgt、if_icmple、if_icmpge、if_acmpeq和if_acmpne。其中指令助记符加上“if_”后，以字符“i”开头的指令针对it型整数操作（也包括short和byte类型），以字符“a”开头的指令表示对象引用的比较。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("<")]),t._v(" "),s("th",[t._v("<=")]),t._v(" "),s("th",[t._v("==")]),t._v(" "),s("th",[t._v("!=")]),t._v(" "),s("th",[t._v(">=")]),t._v(" "),s("th",[t._v(">")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("if_icmplt")]),t._v(" "),s("td",[t._v("if_icmple")]),t._v(" "),s("td",[t._v("if_icmpeq、if_acmpeq")]),t._v(" "),s("td",[t._v("if_icmpne、if_acmpne")]),t._v(" "),s("td",[t._v("if_icmpge")]),t._v(" "),s("td",[t._v("if_icmpgt")])])])]),t._v(" "),s("p",[t._v("这些指令都接收两个字节的操作数作为参数，用于计算跳转的位置。同时在执行指令时，栈顶需要准备两个元素进行比较。指令执行完成后，栈顶的这两个元素被清空，且没有任何数据入栈。"),s("mark",[t._v("如果预设条件成立，则执行跳转，否则，继续执行下一条语句")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-62694b24288efde784b0d4e9ee4540b8.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-7f9c2f101f1732a443cf60e02f0e4616.png",alt:"image"}})]),t._v(" "),s("p",[t._v("short 和 byte")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-07c60bf447866d561917351cf77602a8.png",alt:"image"}})]),t._v(" "),s("p",[t._v("object")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifCompare3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" obj2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" obj2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" new "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#10 <java/lang/Object>")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" dup\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" invokespecial "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1 <java/lang/Object.<init>>")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" astore_1\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" new "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#10 <java/lang/Object>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" dup\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" invokespecial "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1 <java/lang/Object.<init>>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" astore_2\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" getstatic "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4 <java/lang/System.out>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" aload_1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" aload_2\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" if_acmpne "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" iconst_1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" goto "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" iconst_0\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),t._v(" invokevirtual "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5 <java/io/PrintStream.println>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v(" getstatic "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4 <java/lang/System.out>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),t._v(" aload_1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),t._v(" aload_2\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),t._v(" if_acmpeq "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" iconst_1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("41")]),t._v(" goto "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v(" iconst_0\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),t._v(" invokevirtual "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5 <java/io/PrintStream.println>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n")])])]),s("h3",{attrs:{id:"多条件分支跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多条件分支跳转"}},[t._v("#")]),t._v(" 多条件分支跳转")]),t._v(" "),s("p",[t._v("多条件分支跳转指令是专为switch-case语句设计的，主要有tableswitch和lookupswitch。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("指令名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("tableswitch")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用于switch条件跳转，case值连续")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("lookupswitch")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("用于switch条件跳转，case值不连续")])])])]),t._v(" "),s("p",[t._v("从助记符上看，两者都是switch语句的实现，它们的区别：")]),t._v(" "),s("ul",[s("li",[s("mark",[t._v("tableswitch要求多个条件分支值是连续的")]),t._v("，它内部只存放起始值和终止值，以及若干个跳转偏移量，通过给定的操作数index，可以立即定位到跳转偏移量位置，因此"),s("mark",[t._v("效率比较高")]),t._v("。")]),t._v(" "),s("li",[s("mark",[t._v("lookupswitch内部存放着各个离散的case-offset对")]),t._v("，每次执行都要搜索全部的case-offset对，找到匹配的case值，并根据对应的offset计算跳转地址，因此"),s("mark",[t._v("效率较低")]),t._v("。")])]),t._v(" "),s("p",[t._v("指令tableswitch的示意图如下图所示。由于tableswitch的case值是连续的，因此只需要记录最低值和最高值，以及每一项对应的offset偏移量，根据给定的index值通过简单的计算即可直接定位到offset。")]),t._v(" "),s("p",[t._v("指令lookupswitch处理的是离散的case值，但是出于效率考虑，将case-offset对按照case值大小排序，给定index时，需要查找与index相等的case，获得其offset，如果找不到则跳转到default。指令lookupswitch如下图所示。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-982a76461f536a4b504b0479ed87d0fe.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-e4f0b702d8684c005954a28aaf79c078.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-cd2e31c2504407327a464e2f68752248.png",alt:"image"}})]),t._v(" "),s("p",[t._v("ta b leswitch")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-e3c23ad19a4bb9139824f14924ff58e7.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"没有break的情况-直接往下走"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#没有break的情况-直接往下走"}},[t._v("#")]),t._v(" 没有break的情况，直接往下走")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-18-6c1a343e288699aa6ad47ad692168046.png",alt:"image"}})]),t._v(" "),s("p",[t._v("Lookup switch")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-135640a3a52375d579331066be7a04fe.png",alt:"image"}})]),t._v(" "),s("p",[t._v("String")]),t._v(" "),s("p",[t._v("使用hashcode 对比，然后再使用 eqauls对比")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-6b49874862c9f54fc09890f53b9f1ff7.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"无条件跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无条件跳转"}},[t._v("#")]),t._v(" 无条件跳转")]),t._v(" "),s("p",[t._v("目前主要的无条件跳转指令为goto。指令goto接收两个字节的操作数，共同组成一个带符号的整数，用于指定指令的偏移量，指令执行的目的就是跳转到偏移量给定的位置处。")]),t._v(" "),s("p",[t._v("如果指令偏移量太大，超过双字节的带符号整数的范围，则可以使用指令goto_w，它和goto有相同的作用，但是它接收4个字节的操作数，可以表示更大的地址范围。")]),t._v(" "),s("p",[t._v("指令jsr、jsr_w、ret虽然也是无条件跳转的，但主要用于try-finally语句，且已经被虚拟机逐渐废弃，故不在这里介绍这两个指令。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("指令名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("goto")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("无条件跳转")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("goto_w")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("无条件跳转（宽索引）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsr")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转至指定16位offset位置，并将jsr下一条指令地址压入栈顶")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("jsr_w")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转至指定32位offer位置，并将jsr_w下一条指令地址压入栈顶")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ret")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回至由指定的局部变量所给出的指令位置（一般与jsr、jsr_w联合使用）")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("主要goto，下面几个 jsr 很少见，了解就行了。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-4423d6a1b9fab54b6d1ba6fa7cd13173.png",alt:"image"}})]),t._v(" "),s("p",[t._v("int")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-0c0f6a5999c0ceb05893a49736101107.png",alt:"image"}})]),t._v(" "),s("p",[t._v("double")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-c611eb9330c0f6f7eb73c0eef4ac9ee3.png",alt:"image"}})]),t._v(" "),s("p",[t._v("short")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-720acba3f92bdfa25ea5c6731fd9d510.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"思考-while循环和for循环的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思考-while循环和for循环的区别"}},[t._v("#")]),t._v(" 思考 while循环和for循环的区别")]),t._v(" "),s("blockquote",[s("p",[t._v("字节码层面一模一样")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-5cc15cd5e2524ffe2314cb1fd09c53d2.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("Do while 和 for循环的区别，do while 至少会执行一次，而for循环不一定会执行")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-45438dad5925de1df5b9e2e11d2913b3.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"异常处理指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常处理指令"}},[t._v("#")]),t._v(" 异常处理指令")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("异常处理指令")])]),t._v(" "),s("p",[t._v("athrow 抛出异常或错误。将栈顶异常抛出")]),t._v(" "),s("p",[t._v("jsr 跳转到子例程")]),t._v(" "),s("p",[t._v("jsr_w 跳转到子例程（宽索引）")]),t._v(" "),s("p",[t._v("ret 从子例程返回")])]),t._v(" "),s("p",[s("strong",[t._v("athrow指令")])]),t._v(" "),s("p",[t._v("在Java程序中显示抛出异常的操作（throw语句）都是由athrow指令来实现。")]),t._v(" "),s("p",[t._v("除了使用throw语句显示抛出异常情况之外，"),s("mark",[t._v("JVM规范还规定了许多运行时异常会在其他Java虚拟机指令检测到异常状况时自动抛出")]),t._v("。例如，在之前介绍的整数运算时，当除数为零时，虚拟机会在idiv或1div指令中抛出ArithmeticException异常。")]),t._v(" "),s("p",[t._v("正常情况下，操作数栈的压入弹出都是一条条指令完成的。唯一的例外情况是"),s("mark",[t._v("在抛异常时，Java虚拟机会清除操作数栈上的所有内容，而后将异常实例压入调用者操作数栈上")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("处理异常")])]),t._v(" "),s("p",[t._v("在Java虚拟机中，"),s("mark",[t._v("处理异常（catch语句）不是由字节码指令来实现的（早期使用jsr、ret指令），而是采用异常表来完成的")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("异常表")])]),t._v(" "),s("p",[t._v("如果一个方法定义了一个try-catch 或者try-finally的异常处理，就会创建一个异常表。它包含了每个异常处理或者finally块的信息。异常表保存了每个异常处理信息。比如：")]),t._v(" "),s("ul",[s("li",[t._v("起始位置")]),t._v(" "),s("li",[t._v("结束位置")]),t._v(" "),s("li",[t._v("程序计数器记录的代码处理的偏移地址")]),t._v(" "),s("li",[t._v("被捕获的异常类在常量池中的索引")])]),t._v(" "),s("p",[s("mark",[t._v("当一个异常被抛出时，JVM会在当前的方法里寻找一个匹配的处理，如果没有找到，这个方法会强制结束并弹出当前栈帧")]),t._v("，并且异常会重新抛给上层调用的方法（在调用方法栈帧）。如果在所有栈帧弹出前仍然没有找到合适的异常处理，这个线程将终止。如果这个异常在最后一个非守护线程里抛出，将会导致JVM自己终止，比如这个线程是个main线程。")]),t._v(" "),s("p",[s("mark",[t._v("不管什么时候抛出异常，如果异常处理最终匹配了所有异常类型，代码就会继续执行")]),t._v("。在这种情况下，如果方法结束后没有抛出异常，仍然执行finally块，在return前，它直接跳到finally块来完成目标")]),t._v(" "),s("h3",{attrs:{id:"抛出异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抛出异常"}},[t._v("#")]),t._v(" 抛出异常")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-affcf6e6c699fb613e7261d20e544473.png",alt:"image"}}),t._v(" "),s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-681049cb66318ea076bf9b50c45170ff.png",alt:"image"}}),t._v(" "),s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-73d8001ec04797944331d8f2ce2766ae.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-1a38900920cb0602d65f63f50e72842d.png",alt:"image"}}),t._v(" "),s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-2f5490cad922a19da824d6decb02bb1b.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("除数为0的情况，这种情况，是系统内部定义好的异常，不会出现athorw")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-896ad18d555cdb02cc1f4b4af3107b1b.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"异常处理与异常表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常处理与异常表"}},[t._v("#")]),t._v(" 异常处理与异常表")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-19-8f0ad861af68c5ebecb46eacb65209e0.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-797dba7a0730b6c6b1bd45c07106f043.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-dc9a0f39e3b11a3703dfc994fe45e50a.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"思考题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思考题"}},[t._v("#")]),t._v(" 思考题")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-9c5171f4a021d2ff8ebdcf0e7f0764b9.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"同步控制指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步控制指令"}},[t._v("#")]),t._v(" 同步控制指令")]),t._v(" "),s("p",[t._v("Java虚拟机支持两种同步结构：方法级的同步和方法内部一段指令序列的同步，这两种同步都是使用monitor来支持的")]),t._v(" "),s("h3",{attrs:{id:"_2-10-1-方法级的同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-1-方法级的同步"}},[t._v("#")]),t._v(" 2.10.1. 方法级的同步")]),t._v(" "),s("p",[s("mark",[t._v("方法级的同步：是隐式的")]),t._v("，即无须通过字节码指令来控制，它实现在方法调用和返回操作之中。虚拟机可以从方法常量池的方法表结构中的ACC_SYNCHRONIZED访问标志得知一个方法是否声明为同步方法；")]),t._v(" "),s("p",[t._v("当调用方法时，调用指令将会检查方法的ACC_SYNCHRONIZED访问标志是否设置。")]),t._v(" "),s("ul",[s("li",[t._v("如果设置了，执行线程将先持有同步锁，然后执行方法。最后在方法完成（无论是正常完成还是非正常完成）时释放同步锁。")]),t._v(" "),s("li",[t._v("在方法执行期间，执行线程持有了同步锁，其他任何线程都无法再获得同一个锁。")]),t._v(" "),s("li",[t._v("如果一个同步方法执行期间抛出了异常，并且在方法内部无法处理此异常，那这个同步方法所持有的锁将在异常抛到同步方法之外时自动释放。")])]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("对应的字节码：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  aload_0\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  dup\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  getfield "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2 <com/atguigu/java1/SynchronizedTest.i>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("  iconst_1 \n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("  iadd\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("  putfield "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2 <com/atguigu/java1/SynchronizedTest.i>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n")])])]),s("p",[t._v("这段代码和普通的无同步操作的代码没有什么不同，没有使用monitorenter和monitorexit进行同步区控制。")]),t._v(" "),s("p",[t._v("这是因为，对于同步方法而言，"),s("mark",[t._v("当虚拟机通过方法的访问标示符判断是一个同步方法时，会自动在方法调用前进行加锁")]),t._v("，当同步方法执行完毕后，不管方法是正常结束还是有异常抛出，均会由虚拟机释放这个锁。")]),t._v(" "),s("p",[t._v("因此，对于同步方法而言，monitorenter和monitorexit指令是隐式存在的，并未直接出现在字节码中。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-160ef15992950dc14407df9950541008.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"方法同步指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法同步指令"}},[t._v("#")]),t._v(" 方法同步指令")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-d53d47ef5875e295d714ae929c1999b6.png",alt:"image"}}),t._v(" "),s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-c27424c961de1ef2d643b3d0777578fa.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-863604712264b16eb50d8a1e8d9d6e22.png",alt:"image"}})]),t._v(" "),s("blockquote",[s("p",[t._v("同步方法，同步不会体现在字节码中，而是体现在方法的访问标示中")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-1f9c7b2e33ffd538ce2073dfdbf41502.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"方法内指定指令序列同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法内指定指令序列同步"}},[t._v("#")]),t._v(" 方法内指定指令序列同步")]),t._v(" "),s("p",[t._v("同步一段指令集序列：通常是由java中的synchronized语句块来表示的。jvm的指令集有monitorenter和monitorexit 两条指令来支持synchronized关键字的语义。")]),t._v(" "),s("p",[s("mark",[t._v("当一个线程进入同步代码块时，它使用monitorenter指令请求进入")]),t._v("。如果当前对象的监视器计数器为0，则它会被准许进入，若为1，则判断持有当前监视器的线程是否为自己，如果是，则进入，否则进行等待，直到对象的监视器计数器为0，才会被允许进入同步块。")]),t._v(" "),s("p",[s("mark",[t._v("当线程退出同步块时，需要使用monitorexit声明退出")]),t._v("。在Java虚拟机中，任何对象都有一个监视器与之相关联，用来判断对象是否被锁定，当监视器被持有后，对象处于锁定状态。")]),t._v(" "),s("p",[t._v("指令monitorenter和monitorexit在执行时，都需要在操作数栈顶压入对象，之后monitorenter和monitorexit的锁定和释放都是针对这个对象的监视器进行的。")]),t._v(" "),s("p",[t._v("下图展示了监视器如何保护临界区代码不同时被多个线程访问，只有当线程4离开临界区后，线程1、2、3才有可能进入。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-3383ded9fb010745fcf55ed64ded7438.png",alt:"image"}}),t._v(" "),s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-3e4af776d6ad0378fd526ad9c4f7e751.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-117c3a7c5808e911f99ad4dee2d3aea9.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-58c5a573002f7868bfd05aa64efad1d2.png",alt:"image"}}),t._v(" "),s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-ca316f8fed771259bf3b05ef4892c8fa.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-2f95b46ee088442ad68a12324f83936e.png",alt:"image"}})]),t._v(" "),s("p",[t._v("对应的字节码：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(": aloade\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(": dup\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(": astore_1\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(": monitorenter\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(": aload_0\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(": dup\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(": getfield "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2 //Field i:I")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(": iconst_1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(": isub\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(": putfield "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2 //Field i:I")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(": aload_1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(": monitorexit\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(": goto "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(": astore_2\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v(": aload_1\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(": monitorexit\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(": aload_2\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(": athrow\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(": "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v("\n\nException table:\n\tfrom to target "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\t "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("\t   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v("  any\n\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v("\t "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v("  any\n")])])]),s("p",[t._v("编译器必须确保无论方法通过何种方式完成，方法中调用过的每条monitorenter指令都必须执行其对应的monitorexit指令，而无论这个方法是正常结束还是异常结束。")]),t._v(" "),s("p",[t._v("为了保证在方法异常完成时monitorenter和monitorexit指令依然可以正确配对执行，编译器会自动产生一个异常处理器，这个异常处理器声明可处理所有的异常，它的目的就是用来执行monitorexit指令")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-327daf736da07d8740121f8797c86bb4.png",alt:"image"}}),t._v(" "),s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-03effcfe1dd1b39d4f3288f1ef916c8a.png",alt:"image"}}),t._v(" "),s("img",{attrs:{src:"https://static.lovedata.net/21-01-20-f4728bcd6a1ddc6b49b3a26deb0915be.png",alt:"image"}})])])}),[],!1,null,null,null);a.default=v.exports}}]);