(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{614:function(t,a,s){"use strict";s.r(a);var e=s(14),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"第十章、对象实例化、内存布局及访问定位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第十章、对象实例化、内存布局及访问定位"}},[t._v("#")]),t._v(" 第十章、对象实例化、内存布局及访问定位")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#对象实例化"}},[t._v("对象实例化")]),s("ul",[s("li",[s("a",{attrs:{href:"#_8-1-1-创建对象的方式"}},[t._v("8.1.1. 创建对象的方式")])]),s("li",[s("a",{attrs:{href:"#字节码角度看对象创建过程"}},[t._v("字节码角度看对象创建过程")])]),s("li",[s("a",{attrs:{href:"#执行步骤上来分析"}},[t._v("执行步骤上来分析")]),s("ul",[s("li",[s("a",{attrs:{href:"#_1-判断对象对应的类是否加载、链接、初始化"}},[t._v("1. 判断对象对应的类是否加载、链接、初始化")])]),s("li",[s("a",{attrs:{href:"#_2-为对象分配内存"}},[t._v("2. 为对象分配内存")])]),s("li",[s("a",{attrs:{href:"#_3-处理并发问题"}},[t._v("3. 处理并发问题")])]),s("li",[s("a",{attrs:{href:"#_4-初始化分配到的内存"}},[t._v("4. 初始化分配到的内存")])]),s("li",[s("a",{attrs:{href:"#_5-设置对象的对象头"}},[t._v("5. 设置对象的对象头")])]),s("li",[s("a",{attrs:{href:"#_6-执行init方法进行初始化"}},[t._v("6. 执行init方法进行初始化")])])])])])]),s("li",[s("a",{attrs:{href:"#对象的内存布局"}},[t._v("对象的内存布局")]),s("ul",[s("li",[s("a",{attrs:{href:"#_8-2-1-对象头-header"}},[t._v("8.2.1. 对象头（Header）")]),s("ul",[s("li",[s("a",{attrs:{href:"#运行时元数据"}},[t._v("运行时元数据")])]),s("li",[s("a",{attrs:{href:"#类型指针"}},[t._v("类型指针")])])])]),s("li",[s("a",{attrs:{href:"#_8-2-2-实例数据-instance-data"}},[t._v("8.2.2. 实例数据（Instance Data）")])]),s("li",[s("a",{attrs:{href:"#_8-2-3-对齐填充-padding"}},[t._v("8.2.3. 对齐填充（Padding）")])])])]),s("li",[s("a",{attrs:{href:"#对象的访问定位"}},[t._v("对象的访问定位")]),s("ul",[s("li",[s("a",{attrs:{href:"#句柄访问"}},[t._v("句柄访问")])]),s("li",[s("a",{attrs:{href:"#直接指针-hospot"}},[t._v("直接指针(hospot)")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"对象实例化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象实例化"}},[t._v("#")]),t._v(" 对象实例化")]),t._v(" "),s("p",[s("strong",[t._v("面试题")])]),t._v(" "),s("blockquote",[s("p",[s("mark",[t._v("美团")]),t._v("：")]),t._v(" "),s("p",[t._v("对象在JVM中是怎么存储的？")]),t._v(" "),s("p",[t._v("对象头信息里面有哪些东西？")]),t._v(" "),s("p",[s("mark",[t._v("蚂蚁金服")]),t._v("：")]),t._v(" "),s("p",[t._v("Java对象头有什么？")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-04bd2a351f012bb8f382d01bbe2babd9.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-9cdca0010fb62b18187b073c4a08cda4.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"_8-1-1-创建对象的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-1-创建对象的方式"}},[t._v("#")]),t._v(" 8.1.1. 创建对象的方式")]),t._v(" "),s("ul",[s("li",[t._v("new：最常见的方式、Xxx的静态方法，XxxBuilder/XxxFactory的静态方法")]),t._v(" "),s("li",[t._v("Class的newInstance方法：反射的方式，只能调用空参的构造器，权限必须是public")]),t._v(" "),s("li",[t._v("Constructor的newInstance(XXX)：反射的方式，可以调用空参、带参的构造器，权限没有要求")]),t._v(" "),s("li",[t._v("使用clone()：不调用任何的构造器，要求当前的类需要实现Cloneable接口，实现clone()")]),t._v(" "),s("li",[t._v("使用序列化：从文件中、从网络中获取一个对象的二进制流")]),t._v(" "),s("li",[t._v("第三方库 Objenesis")])]),t._v(" "),s("h3",{attrs:{id:"字节码角度看对象创建过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字节码角度看对象创建过程"}},[t._v("#")]),t._v(" 字节码角度看对象创建过程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-e6d2e3f816098458df653958b17c7221.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-25-db1dc87b5705295270e9cc020df8d497.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"执行步骤上来分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行步骤上来分析"}},[t._v("#")]),t._v(" 执行步骤上来分析")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-7c78f8b5b68c9af2d0432ae383bbf406.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"_1-判断对象对应的类是否加载、链接、初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-判断对象对应的类是否加载、链接、初始化"}},[t._v("#")]),t._v(" 1. 判断对象对应的类是否加载、链接、初始化")]),t._v(" "),s("p",[t._v("虚拟机遇到一条new指令，首先去检查这个指令的参数能否在Metaspace的常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已经被加载，解析和初始化（即判断类元信息是否存在）。")]),t._v(" "),s("p",[t._v("如果没有，那么在双亲委派模式下，使用当前类加载器以ClassLoader + 包名 + 类名为key进行查找对应的 .class文件；")]),t._v(" "),s("ul",[s("li",[t._v("如果没有找到文件，则抛出ClassNotFoundException异常")]),t._v(" "),s("li",[t._v("如果找到，则进行类加载，并生成对应的Class对象")])]),t._v(" "),s("h4",{attrs:{id:"_2-为对象分配内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-为对象分配内存"}},[t._v("#")]),t._v(" 2. 为对象分配内存")]),t._v(" "),s("p",[t._v("首先计算对象占用空间的大小，接着在堆中划分一块内存给新对象。如果实例成员变量是引用变量，仅分配引用变量空间即可，即4个字节大小")]),t._v(" "),s("p",[s("strong",[t._v("如果内存规整")]),t._v("：虚拟机将采用的是"),s("mark",[t._v("指针碰撞法（Bump The Point）")]),t._v("来为对象分配内存。")]),t._v(" "),s("ul",[s("li",[t._v("意思是所有用过的内存在一边，空闲的内存放另外一边，中间放着一个指针作为分界点的指示器，分配内存就仅仅是把指针指向空闲那边挪动一段与对象大小相等的距离罢了。如果垃圾收集器选择的是Serial ，ParNew这种基于压缩算法的，虚拟机采用这种分配方式。一般使用带Compact（整理）过程的收集器时，使用指针碰撞。")])]),t._v(" "),s("p",[s("strong",[t._v("如果内存不规整")]),t._v("：虚拟机需要维护一个"),s("mark",[t._v("空闲列表（Free List）")]),t._v("来为对象分配内存。")]),t._v(" "),s("ul",[s("li",[t._v("已使用的内存和未使用的内存相互交错，那么虚拟机将采用的是空闲列表来为对象分配内存。意思是虚拟机维护了一个列表，记录上那些内存块是可用的，再分配的时候从列表中找到一块足够大的空间划分给对象实例，并更新列表上的内容。")])]),t._v(" "),s("p",[t._v("选择哪种分配方式由Java堆是否规整所决定，而Java堆是否规整又由所采用的垃圾收集器是否带有压缩整理功能决定。")]),t._v(" "),s("h4",{attrs:{id:"_3-处理并发问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-处理并发问题"}},[t._v("#")]),t._v(" 3. 处理并发问题")]),t._v(" "),s("ul",[s("li",[t._v("采用CAS失败重试、区域加锁保证更新的原子性")]),t._v(" "),s("li",[t._v("每个线程预先分配一块TLAB：通过设置 "),s("code",[t._v("-XX:+UseTLAB")]),t._v("参数来设定")])]),t._v(" "),s("h4",{attrs:{id:"_4-初始化分配到的内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-初始化分配到的内存"}},[t._v("#")]),t._v(" 4. 初始化分配到的内存")]),t._v(" "),s("p",[t._v("所有属性设置默认值，保证对象实例字段在不赋值时可以直接使用")]),t._v(" "),s("h4",{attrs:{id:"_5-设置对象的对象头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-设置对象的对象头"}},[t._v("#")]),t._v(" 5. 设置对象的对象头")]),t._v(" "),s("p",[t._v("将对象的所属类（即类的元数据信息）、对象的HashCode和对象的GC信息、锁信息等数据存储在对象的对象头中。这个过程的具体设置方式取决于JVM实现。")]),t._v(" "),s("h4",{attrs:{id:"_6-执行init方法进行初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-执行init方法进行初始化"}},[t._v("#")]),t._v(" 6. 执行init方法进行初始化")]),t._v(" "),s("p",[t._v("在Java程序的视角看来，初始化才正式开始。"),s("mark",[t._v("初始化成员变量，执行实例化代码块，调用类的构造方法")]),t._v("，并把堆内对象的首地址赋值给引用变量。")]),t._v(" "),s("p",[t._v("因此一般来说（由字节码中跟随invokespecial指令所决定），new指令之后会接着就是执行方法，把对象按照程序员的意愿进行初始化，这样一个真正可用的对象才算完成创建出来。")]),t._v(" "),s("p",[s("strong",[t._v("给对象属性赋值的操作")])]),t._v(" "),s("ul",[s("li",[t._v("属性的默认初始化")]),t._v(" "),s("li",[t._v("显式初始化")]),t._v(" "),s("li",[t._v("代码块中初始化")]),t._v(" "),s("li",[t._v("构造器中初始化")])]),t._v(" "),s("p",[s("strong",[t._v("对象实例化的过程")])]),t._v(" "),s("ol",[s("li",[t._v("加载类元信息")]),t._v(" "),s("li",[t._v("为对象分配内存")]),t._v(" "),s("li",[t._v("处理并发问题")]),t._v(" "),s("li",[t._v("属性的默认初始化（零值初始化）")]),t._v(" "),s("li",[t._v("设置对象头信息")]),t._v(" "),s("li",[t._v("属性的显示初始化、代码块中初始化、构造器中初始化")])]),t._v(" "),s("ul",[s("li",[t._v("第一步 类链接 加载 初始化\n"),s("ul",[s("li",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-23a0f67dbe78d8989436598253d723c1.png",alt:"image"}})])])]),t._v(" "),s("li",[t._v("为对象分配内存\n"),s("ul",[s("li",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-7e9e1eecc48e615f393a69ff8498b719.png",alt:"image"}})]),t._v(" "),s("li",[t._v("内存是否规整\n"),s("ul",[s("li",[t._v("规整\n"),s("ul",[s("li",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-245a12969c77f12f1f04882f0710a0d2.png",alt:"image"}})])])]),t._v(" "),s("li",[t._v("不规整\n"),s("ul",[s("li",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-b9d9b5556e3f12c8324fa997353d71ce.png",alt:"image"}})])])]),t._v(" "),s("li",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-765948ce28c2d3d9c35ec66c6df015f2.png",alt:"image"}})])])])])]),t._v(" "),s("li",[t._v("处理并发安全问题")]),t._v(" "),s("li",[t._v("初始化分配到的空间 赋值默认的初始化值\n"),s("ul",[s("li",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-d407a048f86128ceb24c7d62ad40109f.png",alt:"image"}})])])]),t._v(" "),s("li",[t._v("对象头\n"),s("ul",[s("li",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-135de6bd2ec47751741e5d92acb6e3d2.png",alt:"image"}})])])]),t._v(" "),s("li",[t._v("init方法初始化\n"),s("ul",[s("li",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-b602aef0599a94f7332cf9ff5bc4f693.png",alt:"image"}})]),t._v(" "),s("li",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-999c0a38dd1706acd96a5a34d2eb4884.png",alt:"image"}})]),t._v(" "),s("li",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-c278bf7f37569034265ae8bfc789a345.png",alt:"image"}})]),t._v(" "),s("li",[t._v("后面的三步 "),s("strong",[t._v("显示初始化。代码块种初始化  构造器中的初始化 都是在这个 init中执行的")])])])])]),t._v(" "),s("h2",{attrs:{id:"对象的内存布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的内存布局"}},[t._v("#")]),t._v(" 对象的内存布局")]),t._v(" "),s("h3",{attrs:{id:"_8-2-1-对象头-header"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-1-对象头-header"}},[t._v("#")]),t._v(" 8.2.1. 对象头（Header）")]),t._v(" "),s("p",[t._v("对象头包含了两部分，分别是"),s("mark",[t._v("运行时元数据（Mark Word）")]),t._v("和"),s("mark",[t._v("类型指针")]),t._v("。如果是数组，还需要记录数组的长度")]),t._v(" "),s("h4",{attrs:{id:"运行时元数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时元数据"}},[t._v("#")]),t._v(" 运行时元数据")]),t._v(" "),s("ul",[s("li",[t._v("哈希值（HashCode）")]),t._v(" "),s("li",[t._v("GC分代年龄")]),t._v(" "),s("li",[t._v("锁状态标志")]),t._v(" "),s("li",[t._v("线程持有的锁")]),t._v(" "),s("li",[t._v("偏向线程ID")]),t._v(" "),s("li",[t._v("翩向时间戳")])]),t._v(" "),s("h4",{attrs:{id:"类型指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型指针"}},[t._v("#")]),t._v(" 类型指针")]),t._v(" "),s("p",[t._v("指向类元数据InstanceKlass，确定该对象所属的类型。")]),t._v(" "),s("h3",{attrs:{id:"_8-2-2-实例数据-instance-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-2-实例数据-instance-data"}},[t._v("#")]),t._v(" 8.2.2. 实例数据（Instance Data）")]),t._v(" "),s("p",[t._v("它是对象真正存储的有效信息，包括程序代码中定义的各种类型的字段（包括从父类继承下来的和本身拥有的字段）")]),t._v(" "),s("ul",[s("li",[t._v("相同宽度的字段总是被分配在一起")]),t._v(" "),s("li",[t._v("父类中定义的变量会出现在子类之前")]),t._v(" "),s("li",[t._v("如果CompactFields参数为true（默认为true）：子类的窄变量可能插入到父类变量的空隙")])]),t._v(" "),s("h3",{attrs:{id:"_8-2-3-对齐填充-padding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-3-对齐填充-padding"}},[t._v("#")]),t._v(" 8.2.3. 对齐填充（Padding）")]),t._v(" "),s("p",[t._v("不是必须的，也没有特别的含义，仅仅起到占位符的作用")]),t._v(" "),s("p",[s("strong",[t._v("举例")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Customer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Account")]),t._v(" acct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"匿名客户"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Customer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        acct "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Account")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomerTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Customer")]),t._v(" cust"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Customer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("图示")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-f0f25ef69879318fc0ee38262e442318.png",alt:"image"}})]),t._v(" "),s("p",[t._v("小结图示 一般")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-f4f3e74ce234448ad1ffd157256fe1a8.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-26-0290bdf5ba0146b203357109ce36824f.png",alt:"image"}})]),t._v(" "),s("h2",{attrs:{id:"对象的访问定位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的访问定位"}},[t._v("#")]),t._v(" 对象的访问定位")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-30-0d868e0337b186ee2999546b9b6aed9f.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"句柄访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#句柄访问"}},[t._v("#")]),t._v(" 句柄访问")]),t._v(" "),s("p",[t._v("缺点：需要单独开辟空间，两次访问")]),t._v(" "),s("p",[t._v("优点：对象移动（标记整理算法）的时候，引用不用改地址，栈空间地址比较稳定")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-30-0e200f96b74e04603b055dc16ebc2293.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"直接指针-hospot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接指针-hospot"}},[t._v("#")]),t._v(" 直接指针(hospot)")]),t._v(" "),s("p",[t._v("缺点：地址不稳定，需要经常修改")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/20-11-30-25424423f01d0f0a2efa23e697fe79ca.png",alt:"image"}})])])}),[],!1,null,null,null);a.default=v.exports}}]);