(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{559:function(a,t,i){"use strict";i.r(t);var l=i(14),v=Object(l.a)({},(function(){var a=this,t=a.$createElement,i=a._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[i("h1",{attrs:{id:"impala"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#impala"}},[a._v("#")]),a._v(" Impala")]),a._v(" "),i("p"),i("div",{staticClass:"table-of-contents"},[i("ul",[i("li",[i("a",{attrs:{href:"#impala-特点"}},[a._v("impala 特点")])]),i("li",[i("a",{attrs:{href:"#impala为什么会这么快"}},[a._v("Impala为什么会这么快?")])]),i("li",[i("a",{attrs:{href:"#impala-查询流程"}},[a._v("Impala 查询流程")])]),i("li",[i("a",{attrs:{href:"#impala的部署方式"}},[a._v("Impala的部署方式")])]),i("li",[i("a",{attrs:{href:"#混合部署"}},[a._v("混合部署")])]),i("li",[i("a",{attrs:{href:"#独立部署"}},[a._v("独立部署")])]),i("li",[i("a",{attrs:{href:"#impala和hive的关系"}},[a._v("impala和hive的关系")])]),i("li",[i("a",{attrs:{href:"#impala不足"}},[a._v("Impala不足")])])])]),i("p"),a._v(" "),i("h2",{attrs:{id:"impala-特点"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#impala-特点"}},[a._v("#")]),a._v(" impala 特点")]),a._v(" "),i("p",[i("a",{attrs:{href:"https://juejin.im/entry/5a72d3d1f265da3e4d730b37",target:"_blank",rel:"noopener noreferrer"}},[a._v("Kudu+Impala介绍 | 微店数据科学团队博客"),i("OutboundLink")],1)]),a._v(" "),i("ol",[i("li",[a._v("Impala作为老牌的SQL解析引擎，其面对即席查询(Ad-Hoc Query)类请求的稳定性和速度在工业界得到过广泛的验证")]),a._v(" "),i("li",[a._v("没有存储，负责解析sql")]),a._v(" "),i("li",[a._v("定位类似hive，关注即席查询sql快速解析")]),a._v(" "),i("li",[a._v("长sql还是hive更合适")]),a._v(" "),i("li",[a._v("group by sql 使用内存计算，建议内存128G以上  "),i("strong",[a._v("Hhttps://zhuanlan.zhihu.com/p/65593795ive使用MR，效率低，稳定性好")])]),a._v(" "),i("li",[a._v("不支持高并发，由于单个sql执行代价较高")]),a._v(" "),i("li",[a._v("不能代替hive")]),a._v(" "),i("li",[a._v("至少需要128G以上内存，并且把80%分配给Impala")]),a._v(" "),i("li",[a._v("不会对表数据Cache，仅仅缓存一些表数据等元数据")]),a._v(" "),i("li",[a._v("可以使用 hive metastore "),i("strong",[a._v("Hive 是必选组件")])])]),a._v(" "),i("h2",{attrs:{id:"impala为什么会这么快"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#impala为什么会这么快"}},[a._v("#")]),a._v(" Impala为什么会这么快?")]),a._v(" "),i("p",[a._v("为速度而生，执行效率优化，非MR模型，MR sql转换为MR原语，需要多层迭代，造成极大浪费")]),a._v(" "),i("ul",[i("li",[a._v("impala尽可能把数据缓存在内存中，数据不落地就能完成sql查询")]),a._v(" "),i("li",[a._v("常驻进程，避免MR启动开销")]),a._v(" "),i("li",[a._v("专为SQL设计，减少迭代次数，避免不必要shuffle和sort")]),a._v(" "),i("li",[a._v("利用现代化高性能服务器\n"),i("ul",[i("li",[a._v("LLVM 生产动态代码")]),a._v(" "),i("li",[a._v("协调控制磁盘io，控制吞吐，吞吐量最大化")]),a._v(" "),i("li",[a._v("代码效率曾采用C++，提速")]),a._v(" "),i("li",[a._v("程序内存使用上，利用C++天然优势，遵循极少内存使用原则")])])])]),a._v(" "),i("h2",{attrs:{id:"impala-查询流程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#impala-查询流程"}},[a._v("#")]),a._v(" Impala 查询流程")]),a._v(" "),i("p",[i("a",{attrs:{href:"https://blog.csdn.net/yu616568/article/details/52431835",target:"_blank",rel:"noopener noreferrer"}},[a._v("大数据时代快速SQL引擎-Impala"),i("OutboundLink")],1)]),a._v(" "),i("p",[i("img",{attrs:{src:"https://static.lovedata.net/jpg/2018/5/21/84f8934b8517992c953bdf693d06b162.jpg",alt:"image"}})]),a._v(" "),i("p",[a._v("下图展示了执行select t1.n1, t2.n2, count(1) as c from t1 join t2 on t1.id = t2.id join t3 on t1.id = t3.id where t3.n3 between ‘a’ and ‘f’ group by t1.n1, t2.n2 order by c desc limit 100;查询的执行逻辑，首先Query Planner生成单机的物理执行计划，如下图所示：")]),a._v(" "),i("p",[i("img",{attrs:{src:"https://static.lovedata.net/jpg/2018/5/21/379355edbd81503c0f525b698f70e543.jpg",alt:"image"}})]),a._v(" "),i("p",[i("img",{attrs:{src:"https://static.lovedata.net/jpg/2018/5/21/293fc15dcc24eafafc9e577f9850a1a0.jpg",alt:"image"}})]),a._v(" "),i("h2",{attrs:{id:"impala的部署方式"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#impala的部署方式"}},[a._v("#")]),a._v(" Impala的部署方式")]),a._v(" "),i("h2",{attrs:{id:"混合部署"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#混合部署"}},[a._v("#")]),a._v(" 混合部署")]),a._v(" "),i("p",[a._v("混合部署意味着将Impala集群部署在Hadoop集群之上，共享整个Hadoop集群的资源，\n前者的优势是Impala可以和Hadoop集群共享数据，不需要进行数据的拷贝，但是存在Impala和Hadoop集群抢占资源的情况，进而可能影响Impala的查询性能")]),a._v(" "),i("p",[i("img",{attrs:{src:"https://static.lovedata.net/jpg/2018/5/21/8651108dd21a447b7f781417cfb4a353.jpg",alt:"image"}})]),a._v(" "),i("h2",{attrs:{id:"独立部署"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#独立部署"}},[a._v("#")]),a._v(" 独立部署")]),a._v(" "),i("p",[a._v("独立部署则是单独使用部分机器只部署HDFS和Impala\n而后者可以提供稳定的高性能，但是需要持续的从Hadoop集群拷贝数据到Impala集群上，增加了ETL的复杂度")]),a._v(" "),i("p",[i("img",{attrs:{src:"https://static.lovedata.net/jpg/2018/5/21/a022911b475d7424a30cc3b68673820a.jpg",alt:"image"}})]),a._v(" "),i("h2",{attrs:{id:"impala和hive的关系"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#impala和hive的关系"}},[a._v("#")]),a._v(" impala和hive的关系")]),a._v(" "),i("blockquote",[i("p",[i("a",{attrs:{href:"http://iochina.top/2019/08/28/impala/",target:"_blank",rel:"noopener noreferrer"}},[a._v("impala - 林哥博客 |  菜鸟技术聚集地"),i("OutboundLink")],1)])]),a._v(" "),i("ul",[i("li",[i("p",[a._v("impala是基于Hive的大数据实时分析查询引擎，直接使用Hive的元数据库Metadata，意味着impala元数据都存储在Hive的metastore中。并且impala兼容Hive的sql解析，实现了Hive的SQL语义的子集，功能还在不断完善中。")])]),a._v(" "),i("li",[i("p",[a._v("直接选用impala代替hive，是因为impala快")]),a._v(" "),i("ol",[i("li",[a._v("基于内存计算，能够对PB级数据进行交互式实时查询、分析。")]),a._v(" "),i("li",[a._v("摒弃了MR计算改用C++编写，有针对性的硬件优化，例如使用SSE指令。")]),a._v(" "),i("li",[a._v("兼容HiveSQL，无缝迁移。")]),a._v(" "),i("li",[a._v("通过使用LLVM来统一编译运行时代码，避免为了支持通用编译而带来的不必要的开销。")]),a._v(" "),i("li",[a._v("支持sql92标准，并且有自己的解析器和优化器。")]),a._v(" "),i("li",[a._v("具有数据仓库的特性，对hive原有数据做数据分析。")]),a._v(" "),i("li",[a._v("使用了支持Data locality的/O调度机制。")]),a._v(" "),i("li",[a._v("支持列式存储。")]),a._v(" "),i("li",[a._v("支持jdbc/odbc远程访问。")])])]),a._v(" "),i("li",[i("p",[a._v("执行机制\nhive: hive sql–>mr—>yarn—>hdfs\n最大的弊端在于mr执行中资源申请消耗数据之间的shuffle。尤其涉及多个mr程序串联 影响会放大")]),a._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[a._v("impala：impala sql--\x3e执行计划数--\x3ehdfs\n")])])])]),a._v(" "),i("li",[i("p",[a._v("语言层面\nhive:java 依赖于jvm 涉及启动销毁 属于偏上层语言。\nimpala： C++ 偏向于底层语言 可以更好的调用系统资源")])]),a._v(" "),i("li",[i("p",[a._v("数据流\nhive :推的方式 前述节点计算完毕数据退给后续节点计算\nimpala：拉的方式 不断调用获取前述节点的计算结果 边拉边计算")])]),a._v(" "),i("li",[i("p",[a._v("内存\nhive优先使用内存 如果不足 使用外存（磁盘）\nimpala当下只用内存 内存不足报错 通常去配合hive使用。")])]),a._v(" "),i("li",[i("p",[a._v("调度\nhive 资源调度是用yarn完成\nimpala 自己调度 策略极其简单")])]),a._v(" "),i("li",[i("p",[a._v("容错\nhive容错准备来说就是hadoop容错机制 task重试机制 推测执行机制\nimpala没有容错能力 设计的时候认为 错了再来也会很快 再执行的成本低")])]),a._v(" "),i("li",[i("p",[a._v("适用层面\nhive适用于复杂的批处理任务分析\nimpala适用于交互式实时任务处理 通常要hive使用")])])]),a._v(" "),i("h2",{attrs:{id:"impala不足"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#impala不足"}},[a._v("#")]),a._v(" Impala不足")]),a._v(" "),i("blockquote",[i("p",[i("a",{attrs:{href:"http://iochina.top/2019/08/28/impala/",target:"_blank",rel:"noopener noreferrer"}},[a._v("impala - 林哥博客 |  菜鸟技术聚集地"),i("OutboundLink")],1)])]),a._v(" "),i("ol",[i("li",[a._v("基于内存进行计算，对内存依赖性较大")]),a._v(" "),i("li",[a._v("改用C++编写，以为着对C++普通用户不可见。")]),a._v(" "),i("li",[a._v("基于Hive，与Hive共存亡。")]),a._v(" "),i("li",[a._v("实践中impala的分区超过一万，性能严重下降，容易出现问题。")]),a._v(" "),i("li",[a._v("稳定性不如Hive")])])])}),[],!1,null,null,null);t.default=v.exports}}]);