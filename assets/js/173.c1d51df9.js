(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{631:function(t,s,a){"use strict";a.r(s);var e=a(14),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_5-分析gc日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-分析gc日志"}},[t._v("#")]),t._v(" 5. 分析GC日志")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_5-1-gc分类"}},[t._v("5.1. GC分类")])]),a("li",[a("a",{attrs:{href:"#_5-2-gc日志分类"}},[t._v("5.2. GC日志分类")])]),a("li",[a("a",{attrs:{href:"#_5-3-gc日志结构剖析"}},[t._v("5.3. GC日志结构剖析")])]),a("li",[a("a",{attrs:{href:"#_5-4-gc日志分析工具"}},[t._v("5.4. GC日志分析工具")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"_5-1-gc分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-gc分类"}},[t._v("#")]),t._v(" 5.1. GC分类")]),t._v(" "),a("p",[t._v("针对HotSpot VM的实现，它里面的GC按照回收区域又分为两大种类型：一种是部分收集（Partial GC），一种是整堆收集（Full GC）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("部分收集（Partial GC）：不是完整收集整个Java堆的垃圾收集。其中又分为：")]),t._v(" "),a("ul",[a("li",[t._v("新生代收集（Minor GC / Young GC）：只是新生代（Eden / S0, S1）的垃圾收集")]),t._v(" "),a("li",[t._v("老年代收集（Major GC / Old GC）：只是老年代的垃圾收集。目前，只有CMS GC会有单独收集老年代的行为。"),a("mark",[t._v("注意，很多时候Major GC会和Full GC混淆使用，需要具体分辨是老年代回收还是整堆回收。")])])])]),t._v(" "),a("li",[a("p",[t._v("混合收集（Mixed GC）：收集整个新生代以及部分老年代的垃圾收集。目前，只有G1 GC会有这种行为")])]),t._v(" "),a("li",[a("p",[t._v("整堆收集（Full GC）：收集整个java堆和方法区的垃圾收集。")])])]),t._v(" "),a("h2",{attrs:{id:"_5-2-gc日志分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-gc日志分类"}},[t._v("#")]),t._v(" 5.2. GC日志分类")]),t._v(" "),a("p",[a("strong",[t._v("MinorGC")])]),t._v(" "),a("p",[t._v("MinorGC（或young GC或YGC）日志：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("GC "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Allocation")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Failure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PSYoungGen")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31744")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2192")]),t._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("36864")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31744")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2200")]),t._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("121856")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0139308")]),t._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Times")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.05")]),t._v(" sys"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" real"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),t._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://static.lovedata.net/zs/20210506202127.png",alt:"image-20210506202126562"}}),t._v(" "),a("img",{attrs:{src:"https://static.lovedata.net/zs/20210506202158.png",alt:"image-20210506202156090"}}),t._v(" "),a("strong",[t._v("FullGC")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Full")]),t._v(" GC "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Metadata")]),t._v(" GC "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Threshold")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PSYoungGen")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5104")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("132096")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Par01dGen")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("416")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5453")]),t._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50176")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5520")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5453")]),t._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("182272")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Metaspace")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20637")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20637")]),t._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1067008")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0245883")]),t._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Times")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.06")]),t._v(" sys"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" real"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.02")]),t._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://static.lovedata.net/zs/20210506202331.png",alt:"image-20210506202330868"}}),t._v(" "),a("img",{attrs:{src:"https://static.lovedata.net/zs/20210506202350.png",alt:"image-20210506202349072"}})]),t._v(" "),a("h2",{attrs:{id:"_5-3-gc日志结构剖析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-gc日志结构剖析"}},[t._v("#")]),t._v(" 5.3. GC日志结构剖析")]),t._v(" "),a("p",[a("strong",[t._v("透过日志看垃圾收集器")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v('Serial收集器：新生代显示 "[DefNew"，即 Default New Generation')])]),t._v(" "),a("li",[a("p",[t._v('ParNew收集器：新生代显示 "[ParNew"，即 Parallel New Generation')])]),t._v(" "),a("li",[a("p",[t._v('Parallel Scavenge收集器：新生代显示"[PSYoungGen"，JDK1.7使用的即PSYoungGen')])]),t._v(" "),a("li",[a("p",[t._v('Parallel Old收集器：老年代显示"[ParoldGen"')])]),t._v(" "),a("li",[a("p",[t._v("G1收集器：显示”garbage-first heap“")])])]),t._v(" "),a("p",[a("strong",[t._v("透过日志看GC原因")])]),t._v(" "),a("ul",[a("li",[t._v("Allocation Failure：表明本次引起GC的原因是因为新生代中没有足够的区域存放需要分配的数据")]),t._v(" "),a("li",[t._v("Metadata GCThreshold：Metaspace区不够用了")]),t._v(" "),a("li",[t._v("FErgonomics：JVM自适应调整导致的GC")]),t._v(" "),a("li",[t._v("System：调用了System.gc()方法")])]),t._v(" "),a("p",[a("strong",[t._v("透过日志看GC前后情况")])]),t._v(" "),a("p",[t._v("通过图示，我们可以发现GC日志格式的规律一般都是：GC前内存占用-＞GC后内存占用（该区域内存总大小）")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PSYoungGen")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5986")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("696")]),t._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8704")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5986")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("704")]),t._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9216")]),t._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("中括号内：GC回收前年轻代堆大小，回收后大小，（年轻代堆总大小）")])]),t._v(" "),a("li",[a("p",[t._v("括号外：GC回收前年轻代和老年代大小，回收后大小，（年轻代和老年代总大小）")])])]),t._v(" "),a("p",[a("mark",[t._v("注意")]),t._v("：Minor GC堆内存总容量 = 9/10 年轻代 + 老年代。原因是Survivor区只计算from部分，而JVM默认年轻代中Eden区和Survivor区的比例关系，Eden:S0:S1=8:1:1。")]),t._v(" "),a("p",[a("strong",[t._v("透过日志看GC时间")])]),t._v(" "),a("p",[t._v("GC日志中有三个时间：user，sys和real")]),t._v(" "),a("ul",[a("li",[t._v("user：进程执行用户态代码（核心之外）所使用的时间。这是执行此进程所使用的实际CPU 时间，其他进程和此进程阻塞的时间并不包括在内。在垃圾收集的情况下，表示GC线程执行所使用的 CPU 总时间。")]),t._v(" "),a("li",[t._v("sys：进程在内核态消耗的 CPU 时间，即在内核执行系统调用或等待系统事件所使用的CPU 时间")]),t._v(" "),a("li",[t._v("real：程序从开始到结束所用的时钟时间。这个时间包括其他进程使用的时间片和进程阻塞的时间（比如等待 I/O 完成）。对于并行gc，这个数字应该接近（用户时间＋系统时间）除以垃圾收集器使用的线程数。")])]),t._v(" "),a("p",[t._v("由于多核的原因，一般的GC事件中，real time是小于sys time＋user time的，因为一般是多个线程并发的去做GC，所以real time是要小于sys＋user time的。如果real＞sys＋user的话，则你的应用可能存在下列问题：IO负载非常重或CPU不够用。")]),t._v(" "),a("h2",{attrs:{id:"_5-4-gc日志分析工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-gc日志分析工具"}},[t._v("#")]),t._v(" 5.4. GC日志分析工具")]),t._v(" "),a("p",[a("strong",[t._v("GCEasy")])]),t._v(" "),a("p",[t._v("GCEasy是一款在线的GC日志分析器，可以通过GC日志分析进行内存泄露检测、GC暂停原因分析、JVM配置建议优化等功能，大多数功能是免费的。")]),t._v(" "),a("p",[t._v("官网地址："),a("a",{attrs:{href:"https://gceasy.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gceasy.io/"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("GCViewer")])]),t._v(" "),a("p",[t._v("GCViewer是一款离线的GC日志分析器，用于可视化Java VM选项 -verbose:gc 和 .NET生成的数据 -Xloggc:<file>。还可以计算与垃圾回收相关的性能指标（吞吐量、累积的暂停、最长的暂停等）。当通过更改世代大小或设置初始堆大小来调整特定应用程序的垃圾回收时，此功能非常有用。")]),t._v(" "),a("p",[t._v("源码下载："),a("a",{attrs:{href:"https://github.com/chewiebug/GCViewer",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/chewiebug/GCViewer"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("运行版本下载："),a("a",{attrs:{href:"https://github.com/chewiebug/GCViewer/wiki/Changelog",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/chewiebug/GCViewer/wiki/Changelog"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("GChisto")])]),t._v(" "),a("ul",[a("li",[t._v("官网上没有下载的地方，需要自己从SVN上拉下来编译")]),t._v(" "),a("li",[t._v("不过这个工具似乎没怎么维护了，存在不少bug")])]),t._v(" "),a("p",[a("strong",[t._v("HPjmeter")])]),t._v(" "),a("ul",[a("li",[t._v("工具很强大，但是只能打开由以下参数生成的GC log，-verbose:gc  -Xloggc:gc.log。添加其他参数生成的gc.log无法打开")]),t._v(" "),a("li",[t._v("HPjmeter集成了以前的HPjtune功能，可以分析在HP机器上产生的垃圾回收日志文件")])])])}),[],!1,null,null,null);s.default=r.exports}}]);