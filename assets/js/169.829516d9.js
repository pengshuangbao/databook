(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{634:function(_,v,t){"use strict";t.r(v);var l=t(14),a=Object(l.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"_1-概述篇"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述篇"}},[_._v("#")]),_._v(" 1. 概述篇")]),_._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-大厂面试题"}},[_._v("1.1. 大厂面试题")])]),t("li",[t("a",{attrs:{href:"#_1-2-背景说明"}},[_._v("1.2. 背景说明")])]),t("li",[t("a",{attrs:{href:"#_1-3-调优概述"}},[_._v("1.3. 调优概述")])]),t("li",[t("a",{attrs:{href:"#_1-4-性能优化的步骤"}},[_._v("1.4. 性能优化的步骤")])]),t("li",[t("a",{attrs:{href:"#_1-5-性能评价-测试指标"}},[_._v("1.5. 性能评价/测试指标")])])])]),t("p"),_._v(" "),t("h2",{attrs:{id:"_1-1-大厂面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-大厂面试题"}},[_._v("#")]),_._v(" 1.1. 大厂面试题")]),_._v(" "),t("blockquote",[t("p",[t("mark",[_._v("支付宝：")])]),_._v(" "),t("p",[_._v("支付宝三面：JVM性能调优都做了什么？")]),_._v(" "),t("p",[t("mark",[_._v("小米：")])]),_._v(" "),t("p",[_._v("有做过JVM内存优化吗？")]),_._v(" "),t("p",[_._v("从SQL、JVM、架构、数据库四个方面讲讲优化思路")]),_._v(" "),t("p",[t("mark",[_._v("蚂蚁金服：")])]),_._v(" "),t("p",[_._v("JVM的编译优化")]),_._v(" "),t("p",[_._v("jvm性能调优都做了什么")]),_._v(" "),t("p",[_._v("JVM诊断调优工具用过哪些？")]),_._v(" "),t("p",[_._v("二面：jvm怎样调优，堆内存、栈空间设置多少合适")]),_._v(" "),t("p",[_._v("三面：JVM相关的分析工具使用过的有哪些？具体的性能调优步骤如何")]),_._v(" "),t("p",[t("mark",[_._v("阿里：")])]),_._v(" "),t("p",[_._v("如何进行JVM调优？有哪些方法？")]),_._v(" "),t("p",[_._v("如何理解内存泄漏问题？有哪些情况会导致内存泄漏？如何解决？")]),_._v(" "),t("p",[t("mark",[_._v("字节跳动：")])]),_._v(" "),t("p",[_._v("三面：JVM如何调优、参数怎么调？")]),_._v(" "),t("p",[t("mark",[_._v("拼多多：")])]),_._v(" "),t("p",[_._v("从SQL、JVM、架构、数据库四个方面讲讲优化思路")]),_._v(" "),t("p",[t("mark",[_._v("京东：")])]),_._v(" "),t("p",[_._v("JVM诊断调优工具用过哪些？")]),_._v(" "),t("p",[_._v("每秒几十万并发的秒杀系统为什么会频繁发生GC？")]),_._v(" "),t("p",[_._v("日均百万级交易系统如何优化JVM？")]),_._v(" "),t("p",[_._v("线上生产系统OOM如何监控及定位与解决？")]),_._v(" "),t("p",[_._v("高并发系统如何基于G1垃圾回收器优化性能？")])]),_._v(" "),t("h2",{attrs:{id:"_1-2-背景说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-背景说明"}},[_._v("#")]),_._v(" 1.2. 背景说明")]),_._v(" "),t("p",[t("strong",[_._v("生产环境中的问题")])]),_._v(" "),t("ul",[t("li",[_._v("生产环境发生了内存溢出该如何处理？")]),_._v(" "),t("li",[_._v("生产环境应该给服务器分配多少内存合适？")]),_._v(" "),t("li",[_._v("如何对垃圾回收器的性能进行调优？")]),_._v(" "),t("li",[_._v("生产环境CPU负载飙高该如何处理？")]),_._v(" "),t("li",[_._v("生产环境应该给应用分配多少线程合适？")]),_._v(" "),t("li",[_._v("不加log，如何确定请求是否执行了某一行代码？")]),_._v(" "),t("li",[_._v("不加log，如何实时查看某个方法的入参与返回值？")])]),_._v(" "),t("p",[t("strong",[_._v("为什么要调优")])]),_._v(" "),t("ul",[t("li",[_._v("防止出现OOM")]),_._v(" "),t("li",[_._v("解决OOM")]),_._v(" "),t("li",[_._v("减少Full GC出现的频率")])]),_._v(" "),t("p",[t("strong",[_._v("不同阶段的考虑")])]),_._v(" "),t("ul",[t("li",[_._v("上线前")]),_._v(" "),t("li",[_._v("项目运行阶段")]),_._v(" "),t("li",[_._v("线上出现OOM")])]),_._v(" "),t("h2",{attrs:{id:"_1-3-调优概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-调优概述"}},[_._v("#")]),_._v(" 1.3. 调优概述")]),_._v(" "),t("p",[t("strong",[_._v("监控的依据")])]),_._v(" "),t("ul",[t("li",[_._v("运行日志")]),_._v(" "),t("li",[_._v("异常堆栈")]),_._v(" "),t("li",[_._v("GC日志")]),_._v(" "),t("li",[_._v("线程快照")]),_._v(" "),t("li",[_._v("堆转储快照")])]),_._v(" "),t("p",[t("strong",[_._v("调优的大方向")])]),_._v(" "),t("ul",[t("li",[_._v("合理地编写代码")]),_._v(" "),t("li",[_._v("充分并合理的使用硬件资源")]),_._v(" "),t("li",[_._v("合理地进行JVM调优")])]),_._v(" "),t("h2",{attrs:{id:"_1-4-性能优化的步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-性能优化的步骤"}},[_._v("#")]),_._v(" 1.4. 性能优化的步骤")]),_._v(" "),t("p",[t("strong",[_._v("第1步：性能监控")])]),_._v(" "),t("blockquote",[t("p",[_._v("一种以非强行或者入侵方式收集或查看应用运营性能数据的活动。监控通常是指种在生产、质量评估或 者开发环境下实施的带有预防或主动性的活动。当应用相关干系人提出性能问题却没有提供足够多的线索时，首先我们霄要进行性能监控，随后是性能分析。")])]),_._v(" "),t("ul",[t("li",[_._v("GC频繁")]),_._v(" "),t("li",[_._v("cpu load过高")]),_._v(" "),t("li",[_._v("OOM")]),_._v(" "),t("li",[_._v("内存泄露")]),_._v(" "),t("li",[_._v("死锁")]),_._v(" "),t("li",[_._v("程序响应时间较长")])]),_._v(" "),t("p",[t("strong",[_._v("第2步：性能分析")])]),_._v(" "),t("blockquote",[t("p",[_._v("一种以侵入方式收集运行性能数据的活动，它会影响应用的吞吐量或响应性。性能分析是针对性能问题的答复结果，关注的范围通常比性能监控更加集中。性能分析很少在生产环境下进行，通常是在质量评估、系统测试或者开发环境下进行，是性能监控之后的步骤。")])]),_._v(" "),t("ul",[t("li",[_._v("打印GC日志，通过GCviewer或者 http://gceasy.io 来分析异常信息")]),_._v(" "),t("li",[_._v("灵活运用命令行工具、jstack、jmap、jinfo等")]),_._v(" "),t("li",[_._v("dump出堆文件，使用内存分析工具分析文件")]),_._v(" "),t("li",[_._v("使用阿里Arthas、jconsole、JVisualVM来实时查看JVM状态")]),_._v(" "),t("li",[_._v("jstack查看堆栈信息")])]),_._v(" "),t("p",[t("strong",[_._v("第3步：性能调优")])]),_._v(" "),t("blockquote",[t("p",[_._v("一种种为改善应用响应性或吞吐量而更改参数、源代码、属性配置的活动，性能调优是在性能监控、性能分析之后的活动。")])]),_._v(" "),t("ul",[t("li",[_._v("适当增加内存，根据业务背景选择垃圾回收器")]),_._v(" "),t("li",[_._v("优化代码，控制内存使用")]),_._v(" "),t("li",[_._v("增加机器，分散节点压力")]),_._v(" "),t("li",[_._v("合理设置线程池线程数量")]),_._v(" "),t("li",[_._v("使用中间件提高程序效率，比如缓存、消息队列等")]),_._v(" "),t("li",[_._v("其他……")])]),_._v(" "),t("h2",{attrs:{id:"_1-5-性能评价-测试指标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-性能评价-测试指标"}},[_._v("#")]),_._v(" 1.5. 性能评价/测试指标")]),_._v(" "),t("blockquote",[t("p",[_._v("jvm调优重点关注停顿时间和吞吐量")])]),_._v(" "),t("p",[t("strong",[_._v("停顿时间（或响应时间）")])]),_._v(" "),t("p",[_._v("提交请求和返回该请求的响应之间使用的时间，一般比较关注平均响应时间。常用操作的响应时间列表：")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[_._v("操作")]),_._v(" "),t("th",{staticStyle:{"text-align":"left"}},[_._v("响应时间")])])]),_._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[_._v("打开一个站点")]),_._v(" "),t("td",{staticStyle:{"text-align":"left"}},[_._v("几秒")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[_._v("数据库查询一条记录（有索引）")]),_._v(" "),t("td",{staticStyle:{"text-align":"left"}},[_._v("十几毫秒")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[_._v("机械磁盘一次寻址定位")]),_._v(" "),t("td",{staticStyle:{"text-align":"left"}},[_._v("4毫秒")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[_._v("从机械磁盘顺序读取1M数据")]),_._v(" "),t("td",{staticStyle:{"text-align":"left"}},[_._v("2毫秒")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[_._v("从SSD磁盘顺序读取1M数据")]),_._v(" "),t("td",{staticStyle:{"text-align":"left"}},[_._v("0.3毫秒")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[_._v("从远程分布式换成Redis 读取一个数据")]),_._v(" "),t("td",{staticStyle:{"text-align":"left"}},[_._v("0.5毫秒")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[_._v("从内存读取 1M数据")]),_._v(" "),t("td",{staticStyle:{"text-align":"left"}},[_._v("十几微妙")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[_._v("Java程序本地方法调用")]),_._v(" "),t("td",{staticStyle:{"text-align":"left"}},[_._v("几微妙")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[_._v("网络传输2Kb数据")]),_._v(" "),t("td",{staticStyle:{"text-align":"left"}},[_._v("1 微妙")])])])]),_._v(" "),t("p",[_._v("在垃圾回收环节中：")]),_._v(" "),t("ul",[t("li",[_._v("暂停时间：执行垃圾收集时，程序的工作线程被暂停的时间。")]),_._v(" "),t("li",[_._v("-XX:MaxGCPauseMillis")])]),_._v(" "),t("p",[t("strong",[_._v("吞吐量")])]),_._v(" "),t("ul",[t("li",[_._v("对单位时间内完成的工作量（请求）的量度")]),_._v(" "),t("li",[_._v("在GC中：运行用户代码的事件占总运行时间的比例（总运行时间：程序的运行时间+内存回收的时间）")]),_._v(" "),t("li",[_._v("吞吐量为1-1/(1+n)，其中-XX::GCTimeRatio=n")])]),_._v(" "),t("p",[t("strong",[_._v("并发数")])]),_._v(" "),t("ul",[t("li",[_._v("同一时刻，对服务器有实际交互的请求数")])]),_._v(" "),t("blockquote",[t("p",[_._v("1000个人同时在线，估计并发数在5%6 -15%之间，也就是网时并发量: 50- 150之间。|")])]),_._v(" "),t("p",[t("strong",[_._v("内存占用")])]),_._v(" "),t("ul",[t("li",[_._v("Java堆区所占的内存大小")])]),_._v(" "),t("p",[t("strong",[_._v("相互间的关系")])]),_._v(" "),t("p",[_._v("以高速公路通行状况为例")]),_._v(" "),t("ul",[t("li",[_._v("吞吐量：每天通过高速公路收费站的车辆的数据")]),_._v(" "),t("li",[_._v("并发数：高速公路上正在行驶的车辆的数目")]),_._v(" "),t("li",[_._v("响应时间：车速")])]),_._v(" "),t("p",[_._v("车比较少的情况下，车速就比较快，吞吐量也不高")]),_._v(" "),t("p",[_._v("车越来越多的以后，车速就变慢， 吞吐量就明显提升")]),_._v(" "),t("p",[_._v("随着车辆越来越逗，车速变0，吞吐量就没有了")])])}),[],!1,null,null,null);v.default=a.exports}}]);