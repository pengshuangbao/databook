(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{628:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_2-jvm监控及诊断工具-命令行篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-jvm监控及诊断工具-命令行篇"}},[t._v("#")]),t._v(" 2. JVM监控及诊断工具-命令行篇")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#_2-1-概述"}},[t._v("2.1. 概述")])]),s("li",[s("a",{attrs:{href:"#_2-2-jps-查看正在运行的java进程"}},[t._v("2.2. jps：查看正在运行的Java进程")])]),s("li",[s("a",{attrs:{href:"#_2-3-jstat-查看jvm统计信息"}},[t._v("2.3. jstat：查看JVM统计信息")])]),s("li",[s("a",{attrs:{href:"#_2-4-jinfo-实时查看和修改jvm配置参数"}},[t._v("2.4. jinfo：实时查看和修改JVM配置参数")])]),s("li",[s("a",{attrs:{href:"#_2-5-jmap-导出内存映像文件-内存使用情况"}},[t._v("2.5. jmap：导出内存映像文件&内存使用情况")]),s("ul",[s("li",[s("a",{attrs:{href:"#使用1-导出内存映像文件"}},[t._v("使用1:导出内存映像文件")]),s("ul",[s("li",[s("a",{attrs:{href:"#手动方式"}},[t._v("手动方式")])]),s("li",[s("a",{attrs:{href:"#自动方式"}},[t._v("自动方式")])])])]),s("li",[s("a",{attrs:{href:"#使用2-显示堆内存相关信息"}},[t._v("使用2：显示堆内存相关信息")]),s("ul",[s("li",[s("a",{attrs:{href:"#jap-heap-pid"}},[t._v("jap -heap pid")])]),s("li",[s("a",{attrs:{href:"#jmap-histo-pid"}},[t._v("jmap -histo pid")])])])]),s("li",[s("a",{attrs:{href:"#小结"}},[t._v("小结")])])])]),s("li",[s("a",{attrs:{href:"#_2-6-jhat-jdk自带堆分析工具"}},[t._v("2.6. jhat：JDK自带堆分析工具")])]),s("li",[s("a",{attrs:{href:"#_2-7-jstack-打印jvm中线程快照"}},[t._v("2.7. jstack：打印JVM中线程快照")])]),s("li",[s("a",{attrs:{href:"#_2-8-jcmd-多功能命令行"}},[t._v("2.8. jcmd：多功能命令行")])]),s("li",[s("a",{attrs:{href:"#_2-9-jstatd-远程主机信息收集"}},[t._v("2.9. jstatd：远程主机信息收集")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"_2-1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-概述"}},[t._v("#")]),t._v(" 2.1. 概述")]),t._v(" "),s("p",[t._v("性能诊断是软件工程师在日常工作中需要经常面对和解决的问题，在用户体验至上的今天，解决好应用的性能问题能带来非常大的收益。")]),t._v(" "),s("p",[t._v("Java 作为最流行的编程语言之一，其应用性能诊断一直受到业界广泛关注。可能造成 Java 应用出现性能问题的因素非常多，例如线程控制、磁盘读写、数据库访问、网络I/O、垃圾收集等。想要定位这些问题，一款优秀的性能诊断工具必不可少。")]),t._v(" "),s("p",[t._v("体会1：使用数据说明问题，使用知识分析问题，使用工具处理问题。")]),t._v(" "),s("p",[t._v("体会2：无监控、不调优！")]),t._v(" "),s("p",[s("strong",[t._v("简单命令行工具")])]),t._v(" "),s("p",[t._v("在我们刚接触java学习的时候，大家肯定最先了解的两个命令就是javac，java，那么除此之外，还有没有其他的命令可以供我们使用呢？")]),t._v(" "),s("p",[t._v("我们进入到安装jdk的bin目录，发现还有一系列辅助工具。这些辅助工具用来获取目标 JVM 不同方面、不同层次的信息，帮助开发人员很好地解决Java应用程序的一些疑难杂症。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504195825.png",alt:"image-20210504195803526"}}),t._v(" "),s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504195838.png",alt:"image-20210504195836342"}}),t._v("\n官方源码地址："),s("a",{attrs:{href:"http://hg.openjdk.java.net/jdk/jdk11/file/1ddf9a99e4ad/src/jdk.jcmd/share/classes/sun/tools",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://hg.openjdk.java.net/jdk/jdk11/file/1ddf9a99e4ad/src/jdk.jcmd/share/classes/sun/tools"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_2-2-jps-查看正在运行的java进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-jps-查看正在运行的java进程"}},[t._v("#")]),t._v(" 2.2. jps：查看正在运行的Java进程")]),t._v(" "),s("p",[t._v("jps(Java Process Status)：显示指定系统内所有的HotSpot虚拟机进程（查看虚拟机进程信息），可用于查询正在运行的虚拟机进程。")]),t._v(" "),s("p",[t._v("说明：对于本地虚拟机进程来说，进程的本地虚拟机ID与操作系统的进程ID是一致的，是唯一的。")]),t._v(" "),s("p",[t._v("基本使用语法为：jps [options] [hostid]")]),t._v(" "),s("p",[t._v("我们还可以通过追加参数，来打印额外的信息。")]),t._v(" "),s("p",[s("strong",[t._v("options参数")])]),t._v(" "),s("ul",[s("li",[t._v("-q：仅仅显示LVMID（local virtual machine id），即本地虚拟机唯一id。不显示主类的名称等")]),t._v(" "),s("li",[t._v("-l：输出应用程序主类的全类名 或 如果进程执行的是jar包，则输出jar完整路径")]),t._v(" "),s("li",[t._v("-m：输出虚拟机进程启动时传递给主类main()的参数")]),t._v(" "),s("li",[t._v("-v：列出虚拟机进程启动时的JVM参数。比如：-Xms20m -Xmx50m是启动程序指定的jvm参数。")])]),t._v(" "),s("p",[t._v("说明：以上参数可以综合使用。")]),t._v(" "),s("p",[t._v("补充：如果某 Java 进程关闭了默认开启的UsePerfData参数（即使用参数-XX：-UsePerfData），那么jps命令（以及下面介绍的jstat）将无法探知该Java 进程。")]),t._v(" "),s("p",[s("strong",[t._v("hostid参数")])]),t._v(" "),s("p",[t._v("RMI注册表中注册的主机名。如果想要远程监控主机上的 java 程序，需要安装 jstatd。")]),t._v(" "),s("p",[t._v("对于具有更严格的安全实践的网络场所而言，可能使用一个自定义的策略文件来显示对特定的可信主机或网络的访问，尽管这种技术容易受到IP地址欺诈攻击。")]),t._v(" "),s("p",[t._v("如果安全问题无法使用一个定制的策略文件来处理，那么最安全的操作是不运行jstatd服务器，而是在本地使用jstat和jps工具。")]),t._v(" "),s("h2",{attrs:{id:"_2-3-jstat-查看jvm统计信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-jstat-查看jvm统计信息"}},[t._v("#")]),t._v(" 2.3. jstat：查看JVM统计信息")]),t._v(" "),s("p",[t._v("jstat（JVM Statistics Monitoring Tool）：用于监视虚拟机各种运行状态信息的命令行工具。它可以显示本地或者远程虚拟机进程中的类装载、内存、垃圾收集、JIT编译等运行数据。在没有GUI图形界面，只提供了纯文本控制台环境的服务器上，它将是运行期定位虚拟机性能问题的首选工具。常用于检测垃圾回收问题以及内存泄漏问题。")]),t._v(" "),s("p",[t._v("官方文档："),s("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstat.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstat.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("基本使用语法为：jstat -<option> [-t] [-h<lines>] <vmid> [<interval> [<count>]]")]),t._v(" "),s("p",[t._v("查看命令相关参数：jstat-h 或 jstat-help")]),t._v(" "),s("p",[t._v("其中vmid是进程id号，也就是jps之后看到的前面的号码，如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504201704.png",alt:"image-20210504201703222"}}),t._v(" "),s("strong",[t._v("option参数")])]),t._v(" "),s("p",[t._v("选项option可以由以下值构成。")]),t._v(" "),s("p",[s("mark",[t._v("类装载相关的：")])]),t._v(" "),s("ul",[s("li",[t._v("-class：显示ClassLoader的相关信息：类的装载、卸载数量、总空间、类装载所消耗的时间等")])]),t._v(" "),s("p",[s("mark",[t._v("垃圾回收相关的：")])]),t._v(" "),s("ul",[s("li",[t._v("-gc：显示与GC相关的堆信息。包括Eden区、两个Survivor区、老年代、永久代等的容量、已用空间、GC时间合计等信息。")]),t._v(" "),s("li",[t._v("-gccapacity：显示内容与-gc基本相同，但输出主要关注Java堆各个区域使用到的最大、最小空间。")]),t._v(" "),s("li",[t._v("-gcutil：显示内容与-gc基本相同，但输出主要关注已使用空间占总空间的百分比。")]),t._v(" "),s("li",[t._v("-gccause：与-gcutil功能一样，但是会额外输出导致最后一次或当前正在发生的GC产生的原因。")]),t._v(" "),s("li",[t._v("-gcnew：显示新生代GC状况")]),t._v(" "),s("li",[t._v("-gcnewcapacity：显示内容与-gcnew基本相同，输出主要关注使用到的最大、最小空间")]),t._v(" "),s("li",[t._v("-geold：显示老年代GC状况")]),t._v(" "),s("li",[t._v("-gcoldcapacity：显示内容与-gcold基本相同，输出主要关注使用到的最大、最小空间")]),t._v(" "),s("li",[t._v("-gcpermcapacity：显示永久代使用到的最大、最小空间。")])]),t._v(" "),s("p",[s("mark",[t._v("JIT相关的：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("-compiler：显示JIT编译器编译过的方法、耗时等信息")])]),t._v(" "),s("li",[s("p",[t._v("-printcompilation：输出已经被JIT编译的方法")])])]),t._v(" "),s("p",[s("strong",[t._v("jstat -class")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202501.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -compiler")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202507.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -printcompilation")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202510.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -gc")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202516.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -gccapacity")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202522.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -gcutil")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202524.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -gccause")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202527.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -gcnew")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202530.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -gcnewcapacity")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202532.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -gcold")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202534.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -gcoldcapacity")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202537.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -t")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202539.png",alt:"img"}}),t._v(" "),s("strong",[t._v("jstat -t -h")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504202541.png",alt:"img"}})]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("表头")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("含义（字节）")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("EC")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Eden区的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("EU")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Eden区已使用的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("S0C")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("幸存者0区的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("S1C")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("幸存者1区的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("S0U")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("幸存者0区已使用的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("S1U")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("幸存者1区已使用的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("MC")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("元空间的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("MU")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("元空间已使用的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("OC")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("老年代的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("OU")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("老年代已使用的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("CCSC")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("压缩类空间的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("CCSU")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("压缩类空间已使用的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("YGC")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从应用程序启动到采样时young gc的次数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("YGCT")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从应用程序启动到采样时young gc消耗时间（秒）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("FGC")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从应用程序启动到采样时full gc的次数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("FGCT")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从应用程序启动到采样时的full gc的消耗时间（秒）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GCT")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从应用程序启动到采样时gc的总时间")])])])]),t._v(" "),s("p",[s("strong",[t._v("interval参数：")]),t._v(" 用于指定输出统计数据的周期，单位为毫秒。即：查询间隔")]),t._v(" "),s("p",[s("strong",[t._v("count参数：")]),t._v(" 用于指定查询的总次数")]),t._v(" "),s("p",[s("strong",[t._v("-t参数：")]),t._v(" 可以在输出信息前加上一个Timestamp列，显示程序的运行时间。单位：秒")]),t._v(" "),s("p",[t._v("我们可以比较Java进程的启动时间以及总GC时间(GCT列)，或者两次测量的问隔时间以及总GC时间的增量，来得出GC时间占运行时间的比例。如果该比例超过"),s("strong",[t._v("20%")]),t._v("， 则说明目前堆的压力较大;如果该比例超过"),s("strong",[t._v("90%")]),t._v("，则说明堆里几乎没有"),s("strong",[t._v("可用空间")]),t._v("，随时都可能抛出"),s("strong",[t._v("00M")]),t._v("异常。")]),t._v(" "),s("p",[s("strong",[t._v("-h参数：")]),t._v(" 可以在周期性数据输出时，输出多少行数据后输出一个表头信息")]),t._v(" "),s("p",[s("strong",[t._v("补充：")]),t._v(" jstat还可以用来判断是否出现内存泄漏。")]),t._v(" "),s("p",[t._v("第1步：在长时间运行的 Java 程序中，我们可以运行jstat命令连续获取多行性能数据，并取这几行数据中 OU 列（即已占用的老年代内存）的最小值。")]),t._v(" "),s("p",[t._v("第2步：然后，我们每隔一段较长的时间重复一次上述操作，来获得多组 OU 最小值。如果这些值呈上涨趋势，则说明该 Java 程序的老年代内存已使用量在不断上涨，这意味着无法回收的对象在不断增加，因此很有可能存在内存泄漏。")]),t._v(" "),s("h2",{attrs:{id:"_2-4-jinfo-实时查看和修改jvm配置参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-jinfo-实时查看和修改jvm配置参数"}},[t._v("#")]),t._v(" 2.4. jinfo：实时查看和修改JVM配置参数")]),t._v(" "),s("p",[s("strong",[t._v("jinfo(Configuration Info for Java)：")])]),t._v(" "),s("p",[t._v("查看虚拟机配置参数信息，也可用于调整虚拟机的配置参数。在很多情况卡，Java应用程序不会指定所有的Java虚拟机参数。而此时，开发人员可能不知道某一个具体的Java虚拟机参数的默认值。在这种情况下，可能需要通过查找文档获取某个参数的默认值。这个查找过程可能是非常艰难的。但有了jinfo工具，开发人员可以很方便地找到Java虚拟机参数的当前值。")]),t._v(" "),s("p",[t._v("基本使用语法为：jinfo [options] pid")]),t._v(" "),s("p",[t._v("说明：java 进程ID必须要加上")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("选项")]),t._v(" "),s("th",[t._v("选项说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("no option")]),t._v(" "),s("td",[t._v("输出全部的参数和系统属性")])]),t._v(" "),s("tr",[s("td",[t._v("-flag name")]),t._v(" "),s("td",[t._v("输出对应名称的参数")])]),t._v(" "),s("tr",[s("td",[t._v("-flag [+-]name")]),t._v(" "),s("td",[t._v("开启或者关闭对应名称的参数 只有被标记为manageable的参数才可以被动态修改")])]),t._v(" "),s("tr",[s("td",[t._v("-flag name=value")]),t._v(" "),s("td",[t._v("设定对应名称的参数")])]),t._v(" "),s("tr",[s("td",[t._v("-flags")]),t._v(" "),s("td",[t._v("输出全部的参数")])]),t._v(" "),s("tr",[s("td",[t._v("-sysprops")]),t._v(" "),s("td",[t._v("输出系统属性")])])])]),t._v(" "),s("p",[t._v("**jinfo -sysprops ** 可以查看由System,getProperties获取的")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("jinfo -sysprops")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("jboss.modules.system.pkgs")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("com.intellij.rt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("java.vendor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("Oracle Corporation")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("sun.java.launcher")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("SUN_STANDARD")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("sun.management.compiler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("HotSpot 64-Bit Tiered Compilers")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("catalina.useNaming")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("os.name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("Windows 10")]),t._v("\n...\n")])])]),s("p",[s("strong",[t._v("jinfo -flags")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jinfo -flags "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25592")]),t._v("\nNon-default VM flags: -XX:CICompilerCount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" -XX:InitialHeapSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("333447168")]),t._v(" -XX:MaxHeapSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5324668928")]),t._v(" -XX:MaxNewSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1774714880")]),t._v(" -XX:MinHeapDeltaBytes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("524288")]),t._v(" -XX:NewSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("111149056")]),t._v(" -XX:OldSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("222298112")]),t._v(" -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseFastUnorderedTimeStamps -XX:-UseLargePagesIndividualAllocation -XX:+UseParallelGC\nCommand line:  -agentlib:jdwp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("transport"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dt_socket,address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:8040,suspend"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("y,server"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("n -Drebel.base"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("C:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Users"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(".jrebel -Drebel.env.ide.plugin.version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021.1")]),t._v(".2 -Drebel.env.ide.version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020.3")]),t._v(".3 -Drebel.env.ide.product"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("IU -Drebel.env.ide"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("intellij -Drebel.notification.url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://localhost:7976 -agentpath:C:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Users"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("AppData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Roaming"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("JetBrains"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("IntelliJIdea2020.3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("plugins"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("jr-ide-idea"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("lib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("jrebel6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("lib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("jrebel64.dll -Dmaven.home"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("D:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("eclipse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("maven -Didea.modules.paths.file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("C:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Users"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("AppData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Local"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("JetBrains"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("IntelliJIdea2020.3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Maven"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("idea-projects-state-596682c7.properties -Dclassworlds.conf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("C:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Users"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Vector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("AppData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Local"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("idea-6755-mvn.conf -Dmaven.ext.class.path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("D:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("IDEA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("plugins"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("maven"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("lib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("maven-event-listener.jar -javaagent:D:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("IDEA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("plugins"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("lib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("rt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("debugger-agent.jar -Dfile.encoding"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("UTF-8\n")])])]),s("p",[s("strong",[t._v("jinfo -flag")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jinfo -flag UseParallelGC "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25592")]),t._v("\n-XX:+UseParallelGC\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jinfo -flag UseG1GC "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25592")]),t._v("\n-XX:-UseG1GC\n")])])]),s("p",[s("strong",[t._v("jinfo -flag name")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jinfo -flag UseParallelGC "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25592")]),t._v("\n-XX:+UseParallelGC\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jinfo -flag UseG1GC "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25592")]),t._v("\n-XX:-UseG1GC\n")])])]),s("p",[t._v("jinfo不仅可以查看运行时某一个Java虚拟机参数的实际取值，甚至可以在运行时修改部分参数，并使之立即生效。\n但是，并非所有参数都支持动态修改。参数只有被标记为manageable的flag可以被实时修改其实，这个修改能力是极其有限的。")]),t._v(" "),s("p",[t._v("#可以查看被标记为manageable的参 数\n"),s("strong",[t._v("java -XX:+PrintFlagsFinal -version| grep manageable")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-12-3c241f9d5897eea2a67ea541b6891acd.png",alt:"image"}})]),t._v(" "),s("p",[s("strong",[t._v("jinfo -flag [+-]name")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jinfo -flag +PrintGCDetails "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25592")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jinfo -flag PrintGCDetails "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25592")]),t._v("\n-XX:+PrintGCDetails\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jinfo -flag -PrintGCDetails "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25592")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jinfo -flag PrintGCDetails "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25592")]),t._v("\n-XX:-PrintGCDetails\n")])])]),s("p",[t._v("拓展：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("java -XX:+PrintFlagsInitial 查看所有JVM参数启动的初始值")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Global flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n     intx ActiveProcessorCount                      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" -1                                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    uintx AdaptiveSizeDecrementScaleFactor          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("                                   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    uintx AdaptiveSizeMajorGCDecayTimeScale         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("                                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    uintx AdaptiveSizePausePolicy                   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("                                   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])])]),t._v(" "),s("li",[s("p",[t._v("java -XX:+PrintFlagsFinal 查看所有JVM参数的最终值")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Global flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n     intx ActiveProcessorCount                      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" -1                                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n     intx CICompilerCount                          :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("                                   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    uintx InitialHeapSize                          :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("333447168")]),t._v("                           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    uintx MaxHeapSize                              :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1029701632")]),t._v("                          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    uintx MaxNewSize                               :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1774714880")]),t._v("                          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("java -XX:+PrintCommandLineFlags 查看哪些已经被用户或者JVM设置过的详细的XX参数的名称和值")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("-XX:InitialHeapSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("332790016")]),t._v(" -XX:MaxHeapSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5324640256")]),t._v(" -XX:+PrintCommandLineFlags -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:-UseLargePagesIndividualAllocation -XX:+UseParallelGC \n")])])])])]),t._v(" "),s("h2",{attrs:{id:"_2-5-jmap-导出内存映像文件-内存使用情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-jmap-导出内存映像文件-内存使用情况"}},[t._v("#")]),t._v(" 2.5. jmap：导出内存映像文件&内存使用情况")]),t._v(" "),s("p",[t._v("jmap（JVM Memory Map）：作用一方面是获取dump文件（堆转储快照文件，二进制文件），它还可以获取目标Java进程的内存相关信息，包括Java堆各区域的使用情况、堆中对象的统计信息、类加载信息等。开发人员可以在控制台中输入命令“jmap -help”查阅jmap工具的具体使用方式和一些标准选项配置。")]),t._v(" "),s("p",[t._v("官方帮助文档："),s("a",{attrs:{href:"https://docs.oracle.com/en/java/javase/11/tools/jmap.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.oracle.com/en/java/javase/11/tools/jmap.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("基本使用语法为：")]),t._v(" "),s("ul",[s("li",[t._v("jmap [option] <pid>t;")]),t._v(" "),s("li",[t._v("jmap [option] <executable <core>")]),t._v(" "),s("li",[t._v("jmap [option] [server_id@] <remote server IP or hostname>")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("选项")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("mark",[t._v("-dump")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("生成dump文件（Java堆转储快照）"),s("br"),t._v("-dump:live只保存堆中的存活对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("mark",[t._v("-heap")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("输出整个堆空间的详细信息，包括GC的使用、堆配置信息，以及内存的使用信息等")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("mark",[t._v("-histo")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("输出堆空间中对象的统计信息，包括类、实例数量和合计容量，-histo:live只统计堆中的存活对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-J <flag>")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("传递参数给jmap启动的jvm")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-finalizerinfo")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("显示在F-Queue中等待Finalizer线程执行finalize方法的对象，仅linux/solaris平台有效")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-permstat")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("以ClassLoader为统计口径输出永久代的内存状态信息，仅linux/solaris平台有效")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-F")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("当虚拟机进程对-dump选项没有任何响应时，强制执行生成dump文件，仅linux/solaris平台有效")])])])]),t._v(" "),s("p",[t._v("说明：这些参数和linux下输入显示的命令多少会有不同，包括也受jdk版本的影响。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jmap -dump:format"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("b,file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename.hprof"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jmap -dump:live,format"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("b,file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename.hprof"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"使用1-导出内存映像文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用1-导出内存映像文件"}},[t._v("#")]),t._v(" 使用1:导出内存映像文件")]),t._v(" "),s("p",[t._v("一般来说， 使用jmap指 令生成dump文件的操作算得上是最常用的jmap命令之，将堆中所有存活对象导出至”一个文件之中。")]),t._v(" "),s("p",[t._v("Heap Dump又叫做堆存储文件，指一个Java进程在某个时间点的内存快照。Heap Dump在触发内存快照的时候会保存此刻的信息如下:\nAll objects\nClass,fields ,primitive values and references")]),t._v(" "),s("p",[t._v("All Classes\nClassLoader, name ,super class,static fields")]),t._v(" "),s("p",[t._v("Garbage Collection Roots\nobjects defined to be reachable by the JVM")]),t._v(" "),s("p",[t._v("Thread Stacks and Local Variables\nThe call-stacks of threads at the moment of the snapshot, and per-frame information about local objects")]),t._v(" "),s("p",[t._v("说明:")]),t._v(" "),s("ol",[s("li",[t._v("通常在写Heap Dump文件前会触发一次Full GC，所以heap dump文件 里保存的都是FullGC后留下的对象信息。")]),t._v(" "),s("li",[t._v("由于生成dump文件比较耗时，因此大家需要耐心等待，尤其是大内存镜像生成dump文件则需要耗费更长的时间来完成。")])]),t._v(" "),s("h4",{attrs:{id:"手动方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手动方式"}},[t._v("#")]),t._v(" 手动方式")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("jmap -dump:format"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("b,file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename.hprof"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一般生产上dump文件比较大，可以使用live，这样文件就比较小")]),t._v("\njmap -dump:live,format"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("b,file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename.hprof"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h4",{attrs:{id:"自动方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动方式"}},[t._v("#")]),t._v(" 自动方式")]),t._v(" "),s("p",[t._v("当程序发生0OM退出系统时，些瞬时 信息都随着程序的终止而消失，而重现00M问题往往比较困难或者耗时。此时若能在0OM时，自动导出dump文件就显得非常迫切。")]),t._v(" "),s("p",[t._v("这里介绍一种比较常用的取得堆快照文件的方法，即使用:\n-Xx: +HeapDumpOnOutOfMemoryError:在程序发生0OM时， 导出应用程序的当前堆快照。\n-XX:HeapDumpPath:可以指定堆快照的保存位置。")]),t._v(" "),s("p",[t._v("比如:\n-Xmx180m   -XX: +HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=D: \\m.hprof")]),t._v(" "),s("h3",{attrs:{id:"使用2-显示堆内存相关信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用2-显示堆内存相关信息"}},[t._v("#")]),t._v(" 使用2：显示堆内存相关信息")]),t._v(" "),s("h4",{attrs:{id:"jap-heap-pid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jap-heap-pid"}},[t._v("#")]),t._v(" jap -heap pid")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-12-2010586cc36dba251efbdfca8e5ba4a7.png",alt:"image"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-12-561aa1062c9b7f0e824606a9efa43b48.png",alt:"image"}})]),t._v(" "),s("h4",{attrs:{id:"jmap-histo-pid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jmap-histo-pid"}},[t._v("#")]),t._v(" jmap -histo pid")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/21-06-12-589a5799041da9150161843c94932605.png",alt:"image"}})]),t._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("由于jmap将访问堆中的所有对象，为了保证在此过程中不被应用线程干扰，jmap需要借助安全点机制，让所有线程停留在不改变堆中数据的状态。也就是说，由jmap导出的堆快照必定是安全点位置的。这可能导致基于该堆快照的分析结果存在偏差。")]),t._v(" "),s("p",[t._v("举个例子，假设在编译生成的机器码中，某些对象的生命周期在两个安全点之间，那么:live选项将无法探知到这些对象。")]),t._v(" "),s("p",[t._v("另外，如果某个线程长时间无法跑到安全点，jmap将一直等下去。与前面讲的jstat则不同，垃圾回收器会主动将jstat所需要的摘要数据保存至固定位置之中，而jstat只需直接读取即可。")]),t._v(" "),s("h2",{attrs:{id:"_2-6-jhat-jdk自带堆分析工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-jhat-jdk自带堆分析工具"}},[t._v("#")]),t._v(" 2.6. jhat：JDK自带堆分析工具")]),t._v(" "),s("p",[t._v("jhat(JVM Heap Analysis Tool)：")]),t._v(" "),s("p",[t._v("Sun JDK提供的jhat命令与jmap命令搭配使用，用于分析jmap生成的heap dump文件（堆转储快照）。jhat内置了一个微型的HTTP/HTML服务器，生成dump文件的分析结果后，用户可以在浏览器中查看分析结果（分析虚拟机转储快照信息）。")]),t._v(" "),s("p",[t._v("使用了jhat命令，就启动了一个http服务，端口是7000，即http://localhost:7000/，就可以在浏览器里分析。")]),t._v(" "),s("p",[t._v("说明：jhat命令在JDK9、JDK10中已经被删除，官方建议用VisualVM代替。")]),t._v(" "),s("p",[t._v("基本适用语法：jhat <option> <dumpfile>")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("option参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-stack false｜true")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("关闭｜打开对象分配调用栈跟踪")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-refs false｜true")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("关闭｜打开对象引用跟踪")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-port port-number")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置jhat HTTP Server的端口号，默认7000")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-exclude exclude-file")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("执行对象查询时需要排除的数据成员")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-baseline exclude-file")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定一个基准堆转储")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-debug int")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置debug级别")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-version")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("启动后显示版本信息就退出")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-J <flag>")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("传入启动参数，比如-J-Xmx512m")])])])]),t._v(" "),s("h2",{attrs:{id:"_2-7-jstack-打印jvm中线程快照"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-jstack-打印jvm中线程快照"}},[t._v("#")]),t._v(" 2.7. jstack：打印JVM中线程快照")]),t._v(" "),s("p",[t._v("jstack（JVM Stack Trace）：用于生成虚拟机指定进程当前时刻的线程快照（虚拟机堆栈跟踪）。线程快照就是当前虚拟机内指定进程的每一条线程正在执行的方法堆栈的集合。")]),t._v(" "),s("p",[t._v("生成线程快照的作用：可用于定位线程出现长时间停顿的原因，如线程间死锁、死循环、请求外部资源导致的长时间等待等问题。这些都是导致线程长时间停顿的常见原因。当线程出现停顿时，就可以用jstack显示各个线程调用的堆栈情况。")]),t._v(" "),s("p",[t._v("官方帮助文档："),s("a",{attrs:{href:"https://docs.oracle.com/en/java/javase/11/tools/jstack.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.oracle.com/en/java/javase/11/tools/jstack.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在thread dump中，要留意下面几种状态")]),t._v(" "),s("ul",[s("li",[s("mark",[t._v("死锁，Deadlock（重点关注）")])]),t._v(" "),s("li",[s("mark",[t._v("等待资源，Waiting on condition（重点关注）")])]),t._v(" "),s("li",[s("mark",[t._v("等待获取监视器，Waiting on monitor entry（重点关注）")])]),t._v(" "),s("li",[s("mark",[t._v("阻塞，Blocked（重点关注）")])]),t._v(" "),s("li",[t._v("执行中，Runnable")]),t._v(" "),s("li",[t._v("暂停，Suspended")]),t._v(" "),s("li",[t._v("对象等待中，Object.wait() 或 TIMED＿WAITING")]),t._v(" "),s("li",[t._v("停止，Parked")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("option参数")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-F")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("当正常输出的请求不被响应时，强制输出线程堆栈")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-l")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("除堆栈外，显示关于锁的附加信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-m")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果调用本地方法的话，可以显示C/C++的堆栈")])])])]),t._v(" "),s("h2",{attrs:{id:"_2-8-jcmd-多功能命令行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-jcmd-多功能命令行"}},[t._v("#")]),t._v(" 2.8. jcmd：多功能命令行")]),t._v(" "),s("p",[t._v("在JDK 1.7以后，新增了一个命令行工具jcmd。它是一个多功能的工具，可以用来实现前面除了jstat之外所有命令的功能。比如：用它来导出堆、内存使用、查看Java进程、导出线程信息、执行GC、JVM运行时间等。")]),t._v(" "),s("p",[t._v("官方帮助文档："),s("a",{attrs:{href:"https://docs.oracle.com/en/java/javase/11/tools/jcmd.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.oracle.com/en/java/javase/11/tools/jcmd.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("jcmd拥有jmap的大部分功能，并且在Oracle的官方网站上也推荐使用jcmd命令代jmap命令")]),t._v(" "),s("p",[t._v("**jcmd -l：**列出所有的JVM进程")]),t._v(" "),s("p",[t._v("**jcmd 进程号 help：**针对指定的进程，列出支持的所有具体命令")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504213050.png",alt:"image-20210504213044819"}}),t._v("\n**jcmd 进程号 具体命令：**显示指定进程的指令命令的数据")]),t._v(" "),s("ul",[s("li",[t._v("Thread.print 可以替换 jstack指令")]),t._v(" "),s("li",[t._v("GC.class_histogram 可以替换 jmap中的-histo操作")]),t._v(" "),s("li",[t._v("GC.heap_dump 可以替换 jmap中的-dump操作")]),t._v(" "),s("li",[t._v("GC.run 可以查看GC的执行情况")]),t._v(" "),s("li",[t._v("VM.uptime 可以查看程序的总执行时间，可以替换jstat指令中的-t操作")]),t._v(" "),s("li",[t._v("VM.system_properties 可以替换 jinfo -sysprops 进程id")]),t._v(" "),s("li",[t._v("VM.flags 可以获取JVM的配置参数信息")])]),t._v(" "),s("h2",{attrs:{id:"_2-9-jstatd-远程主机信息收集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-jstatd-远程主机信息收集"}},[t._v("#")]),t._v(" 2.9. jstatd：远程主机信息收集")]),t._v(" "),s("p",[t._v("之前的指令只涉及到监控本机的Java应用程序，而在这些工具中，一些监控工具也支持对远程计算机的监控（如jps、jstat）。为了启用远程监控，则需要配合使用jstatd 工具。命令jstatd是一个RMI服务端程序，它的作用相当于代理服务器，建立本地计算机与远程监控工具的通信。jstatd服务器将本机的Java应用程序信息传递到远程计算机。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/20210504213302.png",alt:"image-20210504213301077"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);