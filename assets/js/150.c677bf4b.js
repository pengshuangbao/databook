(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{610:function(t,a,v){"use strict";v.r(a);var s=v(14),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"第三章、运行时数据区概念及线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第三章、运行时数据区概念及线程"}},[t._v("#")]),t._v(" 第三章、运行时数据区概念及线程")]),t._v(" "),v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#概述"}},[t._v("概述")])]),v("li",[v("a",{attrs:{href:"#线程"}},[t._v("线程")]),v("ul",[v("li",[v("a",{attrs:{href:"#_3-1-2-线程"}},[t._v("3.1.2. 线程")])]),v("li",[v("a",{attrs:{href:"#_3-1-3-jvm系统线程"}},[t._v("3.1.3. JVM系统线程")])])])])])]),v("p"),t._v(" "),v("h2",{attrs:{id:"概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),v("p",[t._v("本节主要讲的是运行时数据区，也就是下图这部分，它是在类加载完成后的阶段")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.lovedata.net/21-06-03-1131e697416c65de6967b3c23cdd411b.png",alt:"image"}})]),t._v(" "),v("p",[t._v("当我们通过前面的：类的加载-> 验证 -> 准备 -> 解析 -> 初始化 这几个阶段完成后，就会用到执行引擎对我们的类进行使用，同时执行引擎将会使用到我们运行时数据区")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.lovedata.net/21-06-03-0457a66969d9d29aba1cc9b569d60504.png",alt:"image"}})]),t._v(" "),v("p",[t._v("内存是非常重要的系统资源，是硬盘和CPU的中间仓库及桥梁，承载着操作系统和应用程序的实时运行JVM内存布局规定了Java在运行过程中内存申请、分配、管理的策略，保证了JVM的高效稳定运行。不同的JVM对于内存的划分方式和管理机制存在着部分差异。结合JVM虚拟机规范，来探讨一下经典的JVM内存布局。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.lovedata.net/20-11-08-421a9f83fff809104d7c6a3699ee84a6.png",alt:"image"}})]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.lovedata.net/20-11-08-cfc5528b2f28a895f62f062a9996b248.png",alt:"image"}})]),t._v(" "),v("p",[t._v("下面称为非堆区")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.lovedata.net/20-11-08-d5cdeba019bc8a0208c00be24735cd32.png",alt:"image"}})]),t._v(" "),v("p",[t._v("Java虚拟机定义了若干种程序运行期间会使用到的运行时数据区，其中有一些会随着虚拟机启动而创建，随着虚拟机退出而销毁。另外一些则是与线程一一对应的，这些与线程对应的数据区域会随着线程开始和结束而创建和销毁。")]),t._v(" "),v("p",[t._v("灰色的为单独线程私有的，红色的为多个线程共享的。即：")]),t._v(" "),v("ul",[v("li",[t._v("每个线程：独立包括程序计数器、栈、本地栈。")]),t._v(" "),v("li",[t._v("线程间共享：堆、堆外内存（永久代或元空间、代码缓存）")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.lovedata.net/20-11-08-5b3f6021182ef536ea7898b48f3fe108.png",alt:"image"}})]),t._v(" "),v("blockquote",[v("p",[t._v("方法区在JDK1.8的时候换为元空间了(MetaSpace)，用的是本地内存")])]),t._v(" "),v("p",[t._v("每个JVM只有一个Runtime实例。即为运行时环境，相当于内存结构的中间的那个框框：运行时环境。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.lovedata.net/21-06-03-9c608e89a68a10ff0dad17ca7993a278.png",alt:"image"}})]),t._v(" "),v("h2",{attrs:{id:"线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[t._v("#")]),t._v(" 线程")]),t._v(" "),v("h3",{attrs:{id:"_3-1-2-线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-线程"}},[t._v("#")]),t._v(" 3.1.2. 线程")]),t._v(" "),v("p",[t._v("线程是一个程序里的运行单元。JVM允许一个应用有多个线程并行的执行。 在Hotspot JVM里，每个线程都与操作系统的本地线程直接映射。")]),t._v(" "),v("p",[t._v("当一个Java线程准备好执行以后，此时一个操作系统的本地线程也同时创建。Java线程执行终止后，本地线程也会回收。")]),t._v(" "),v("p",[t._v("操作系统负责所有线程的安排调度到任何一个可用的CPU上。一旦本地线程初始化成功，它就会调用Java线程中的run()方法。")]),t._v(" "),v("h3",{attrs:{id:"_3-1-3-jvm系统线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-jvm系统线程"}},[t._v("#")]),t._v(" 3.1.3. JVM系统线程")]),t._v(" "),v("p",[t._v("如果你使用console或者是任何一个调试工具，都能看到在后台有许多线程在运行。这些后台线程不包括调用"),v("code",[t._v("public static void main(String[] args)")]),t._v("的main线程以及所有这个main线程自己创建的线程。")]),t._v(" "),v("p",[t._v("这些主要的后台系统线程在Hotspot JVM里主要是以下几个：")]),t._v(" "),v("ul",[v("li",[v("p",[v("mark",[t._v("虚拟机线程")]),t._v('：这种线程的操作是需要JVM达到安全点才会出现。这些操作必须在不同的线程中发生的原因是他们都需要JVM达到安全点，这样堆才不会变化。这种线程的执行类型包括"stop-the-world"的垃圾收集，线程栈收集，线程挂起以及偏向锁撤销。')])]),t._v(" "),v("li",[v("p",[v("mark",[t._v("周期任务线程")]),t._v("：这种线程是时间周期事件的体现（比如中断），他们一般用于周期性操作的调度执行。")])]),t._v(" "),v("li",[v("p",[v("mark",[t._v("GC线程")]),t._v("：这种线程对在JVM里不同种类的垃圾收集行为提供了支持。")])]),t._v(" "),v("li",[v("p",[v("mark",[t._v("编译线程")]),t._v("：这种线程在运行时会将字节码编译成到本地代码。")])]),t._v(" "),v("li",[v("p",[v("mark",[t._v("信号调度线程")]),t._v("：这种线程接收信号并发送给JVM，在它内部通过调用适当的方法进行处理。")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.lovedata.net/20-11-08-6f0ff7f4b42b39e26f331765b81e18cb.png",alt:"image"}})]),t._v(" "),v("p",[v("img",{attrs:{src:"https://static.lovedata.net/20-11-08-49919a09b22a90b456177f1edff2e16d.png",alt:"image"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);