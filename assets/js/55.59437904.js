(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{516:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"flink配置详解及如何配置高可用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flink配置详解及如何配置高可用"}},[t._v("#")]),t._v(" Flink配置详解及如何配置高可用？")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#flink-配置详解"}},[t._v("Flink 配置详解")]),s("ul",[s("li",[s("a",{attrs:{href:"#flink-conf-yaml"}},[t._v("flink-conf.yaml")])]),s("li",[s("a",{attrs:{href:"#masters"}},[t._v("masters")])]),s("li",[s("a",{attrs:{href:"#slaves"}},[t._v("slaves")])])])]),s("li",[s("a",{attrs:{href:"#log-配置"}},[t._v("Log 配置")])]),s("li",[s("a",{attrs:{href:"#如何配置-jobmanager-高可用"}},[t._v("如何配置 JobManager 高可用？")]),s("ul",[s("li",[s("a",{attrs:{href:"#搭建-standalone-集群高可用-jobmanager"}},[t._v("搭建 Standalone 集群高可用 JobManager")])]),s("li",[s("a",{attrs:{href:"#搭建-yarn-集群高可用-jobmanager"}},[t._v("搭建 YARN 集群高可用 JobManager")])])])]),s("li",[s("a",{attrs:{href:"#小结与反思"}},[t._v("小结与反思")])])])]),s("p"),t._v(" "),s("p",[t._v("在讲解 7.2 节中如何部署 Flink 作业之前，希望能够再细讲下 Flink 中的配置，虽然在 2.2 节中简单讲解过。")]),t._v(" "),s("h3",{attrs:{id:"flink-配置详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flink-配置详解"}},[t._v("#")]),t._v(" Flink 配置详解")]),t._v(" "),s("h4",{attrs:{id:"flink-conf-yaml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flink-conf-yaml"}},[t._v("#")]),t._v(" flink-conf.yaml")]),t._v(" "),s("p",[s("strong",[t._v("基础配置")])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# jobManager 的IP地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("jobmanager.rpc.address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("localhost")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# JobManager 的端口号")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("jobmanager.rpc.port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("6123")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# JobManager JVM heap 内存大小")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("jobmanager.heap.size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("1024m")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TaskManager JVM heap 内存大小")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("taskmanager.heap.size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("1024m")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每个 TaskManager 提供的任务 slots 数量大小")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("taskmanager.numberOfTaskSlots")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 程序默认并行计算的个数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("parallelism.default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件系统来源")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fs.default-scheme  ")]),t._v("\n")])])]),s("p",[s("strong",[t._v("高可用性配置")])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以选择 'NONE' 或者 'zookeeper'.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# high-availability: zookeeper")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件系统路径，让 Flink 在高可用性设置中持久保存元数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# high-availability.storageDir: hdfs:///flink/ha/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# zookeeper 集群中仲裁者的机器 ip 和 port 端口号")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# high-availability.zookeeper.quorum: localhost:2181")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认是 open，如果 zookeeper security 启用了该值会更改成 creator")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# high-availability.zookeeper.client.acl: open")]),t._v("\n")])])]),s("p",[s("strong",[t._v("容错和检查点配置")])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用于存储和检查点状态")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# state.backend: filesystem")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存储检查点的数据文件和元数据的默认目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# state.checkpoints.dir: hdfs://namenode-host:port/flink-checkpoints")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# savepoints 的默认目标目录(可选)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# state.savepoints.dir: hdfs://namenode-host:port/flink-checkpoints")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用于启用/禁用增量 checkpoints 的标志")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# state.backend.incremental: false")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Web 前端配置")])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于 Web 的运行时监视器侦听的地址.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#jobmanager.web.address: 0.0.0.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  Web 的运行时监视器端口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rest.port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("8081")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否从基于 Web 的 jobmanager 启用作业提交")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# jobmanager.web.submit.enable: false")]),t._v("\n")])])]),s("p",[s("strong",[t._v("高级配置")])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# io.tmp.dirs: /tmp")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否应在 TaskManager 启动时预先分配 TaskManager 管理的内存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# taskmanager.memory.preallocate: false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 类加载解析顺序，是先检查用户代码 jar（“child-first”）还是应用程序类路径（“parent-first”）。 默认设置指示首先从用户代码 jar 加载类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# classloader.resolve-order: child-first")]),t._v("\n")])])]),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用于网络缓冲区的 JVM 内存的分数。 这决定了 TaskManager 可以同时拥有多少流数据交换通道以及通道缓冲的程度。 如果作业被拒绝或者您收到系统没有足够缓冲区的警告，请增加此值或下面的最小/最大值。 另请注意，“taskmanager.network.memory.min”和“taskmanager.network.memory.max”可能会覆盖此分数")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# taskmanager.network.memory.fraction: 0.1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# taskmanager.network.memory.min: 67108864")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# taskmanager.network.memory.max: 1073741824")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Flink 集群安全配置")])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指示是否从 Kerberos ticket 缓存中读取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# security.kerberos.login.use-ticket-cache: true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 包含用户凭据的 Kerberos 密钥表文件的绝对路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# security.kerberos.login.keytab: /path/to/kerberos/keytab")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 与 keytab 关联的 Kerberos 主体名称")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# security.kerberos.login.principal: flink-user")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以逗号分隔的登录上下文列表，用于提供 Kerberos 凭据（例如，`Client，KafkaClient`使用凭证进行 ZooKeeper 身份验证和 Kafka 身份验证）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# security.kerberos.login.contexts: Client,KafkaClient")]),t._v("\n")])])]),s("p",[s("strong",[t._v("ZooKeeper 安全配置")])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 覆盖以下配置以提供自定义 ZK 服务名称")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# zookeeper.sasl.service-name: zookeeper")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 该配置必须匹配 "security.kerberos.login.contexts" 中的列表（含有一个）')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# zookeeper.sasl.login-context-name: Client")]),t._v("\n")])])]),s("p",[s("strong",[t._v("HistoryServer")])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你可以通过 bin/historyserver.sh (start|stop) 命令启动和关闭 HistoryServer")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将已完成的作业上传到的目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# jobmanager.archive.fs.dir: hdfs:///completed-jobs/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于 Web 的 HistoryServer 的地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# historyserver.web.address: 0.0.0.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于 Web 的 HistoryServer 的端口号")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# historyserver.web.port: 8082")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以逗号分隔的目录列表，用于监视已完成的作业")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# historyserver.archive.fs.dir: hdfs:///completed-jobs/")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 刷新受监控目录的时间间隔（以毫秒为单位）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# historyserver.archive.fs.refresh-interval: 10000")]),t._v("\n")])])]),s("h4",{attrs:{id:"masters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#masters"}},[t._v("#")]),t._v(" masters")]),t._v(" "),s("p",[t._v("以 host:port 构成")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\nlocalhost:8081")]),t._v(" "),s("h4",{attrs:{id:"slaves"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slaves"}},[t._v("#")]),t._v(" slaves")]),t._v(" "),s("p",[t._v("里面是每个 worker 节点的 IP/Hostname，每一个 worker 结点之后都会运行一个 TaskManager，一个一行。")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\nlocalhost")]),t._v(" "),s("h3",{attrs:{id:"log-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#log-配置"}},[t._v("#")]),t._v(" Log 配置")]),t._v(" "),s("p",[t._v("在 Flink 的日志配置文件（"),s("code",[t._v("logback.xml")]),t._v(" 或 "),s("code",[t._v("log4j.properties")]),t._v("）中有配置日志存储的地方，"),s("code",[t._v("logback.xml")]),t._v("\n配置日志存储的路径是：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v(" "),s("appender",{staticClass:"ch.qos.logback.core.FileAppender",attrs:{name:"file"}},[s("file",[t._v("${log.file}")]),t._v(" "),s("append",[t._v("false")]),t._v(" "),s("encoder",[s("pattern",[t._v("%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{60} %X{sourceThread} - %msg%n")])])],1)],1),t._v(" "),s("p",[s("code",[t._v("log4j.properties")]),t._v(" 和 "),s("code",[t._v("log4j-cli.properties")]),t._v(" 的配置日志存储的路径是：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\nlog4j.appender.file.file=${log.file}")]),t._v(" "),s("p",[t._v("从上面两个配置可以看到日志的路径都是由 "),s("code",[t._v("log.file")]),t._v(" 变量控制的，如果系统变量没有配置的话，则会使用 "),s("code",[t._v("bin／flink")]),t._v(" 脚本里配置的值。")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v('\nlog=$FLINK_LOG_DIR/flink-$FLINK_IDENT_STRING-client-$HOSTNAME.log\nlog_setting=(-Dlog.file="$log" -Dlog4j.configuration=file:"$FLINK_CONF_DIR"/log4j-cli.properties -Dlogback.configurationFile=file:"$FLINK_CONF_DIR"/logback.xml)')]),t._v(" "),s("p",[t._v("从上面可以看到 log 里配置的 FLINK "),s("em",[t._v("LOG")]),t._v(" DIR 变量是在 bin 目录下的 config.sh 里初始化的。")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v('\nDEFAULT_FLINK_LOG_DIR=$FLINK_HOME_DIR_MANGLED/log\nKEY_ENV_LOG_DIR="env.log.dir"')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v('if [ -z "${FLINK_LOG_DIR}" ]; then\n    FLINK_LOG_DIR=$(readFromConfig ${KEY_ENV_LOG_DIR} "${DEFAULT_FLINK_LOG_DIR}" "${YAML_CONF}")\nfi\n')])])]),s("p",[t._v("从上面可以知道日志默认就是在 Flink 的 log 目录下，你可以通过在 "),s("code",[t._v("flink-conf.yaml")]),t._v(" 配置文件中配置 "),s("code",[t._v("env.log.dir")]),t._v("\n参数来更改保存日志的目录。另外通过源码可以发现，如果找不到 "),s("code",[t._v("log.file")]),t._v(" 环境变量，则会去找 "),s("code",[t._v("web.log.path")]),t._v(" 的配置，但是该配置在\nStandalone 下是不起作用的，日志依旧是会在 "),s("code",[t._v("log")]),t._v(" 目录，在 YARN 下是会起作用的。")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LogFileLocation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Configuration")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" logEnv "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log.file"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" logFilePath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logEnv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logFilePath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        LOG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Log file environment variable '{}' is not set.\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" logEnv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        logFilePath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebOptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LOG_PATH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//该值为 web.log.path")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// not configured, cannot serve log files")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logFilePath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" logFilePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        LOG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("warn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JobManager log files are unavailable in the web dashboard. "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Log file location not found in environment variable '{}' or configuration key '{}'.\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            logEnv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebOptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LOG_PATH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LogFileLocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" outFilePath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logFilePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" logFilePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"out"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    LOG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Determined location of main cluster component log file: {}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" logFilePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    LOG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Determined location of main cluster component stdout file: {}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outFilePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LogFileLocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolveFileLocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logFilePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolveFileLocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("outFilePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * The log file location (may be in /log for standalone but under log directory when using YARN).\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigOption")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" LOG_PATH "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"web.log.path"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("noDefaultValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withDeprecatedKeys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jobmanager.web.log.path"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withDescription")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Path to the log file (may be in /log for standalone but under log directory when using YARN)."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("另外可能会在本地 IDE 中运行作业出不来日志的情况，这时请检查是否有添加日志的依赖。")]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.slf4j"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("slf4j-api"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.7.25"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.slf4j"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("slf4j-simple"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.7.25"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"如何配置-jobmanager-高可用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何配置-jobmanager-高可用"}},[t._v("#")]),t._v(" 如何配置 JobManager 高可用？")]),t._v(" "),s("p",[t._v("JobManager 协调每个 Flink 作业的部署，它负责调度和资源管理。默认情况下，每个 Flink 集群只有一个 JobManager\n实例，这样就可能会产生单点故障，如果 JobManager 崩溃，则无法提交新作业且运行中的作业也会失败。如果保证 JobManager\n的高可用，则可以避免这个问题。下面分别下如何搭建 Standalone 集群和 YARN 集群高可用的 JobManager。")]),t._v(" "),s("h4",{attrs:{id:"搭建-standalone-集群高可用-jobmanager"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搭建-standalone-集群高可用-jobmanager"}},[t._v("#")]),t._v(" 搭建 Standalone 集群高可用 JobManager")]),t._v(" "),s("p",[t._v("Standalone 集群的 JobManager 高可用性的概念是：任何时候只有一个主 JobManager 和多个备\nJobManager，以便在主节点失败时有新的 JobManager 接管集群。这样就保证了没有单点故障，一旦备 JobManager\n接管集群，作业就可以依旧正常运行。主备 JobManager 实例之间没有明确的区别，每个 JobManager 都可以充当主备节点。例如，请考虑以下三个\nJobManager 实例的设置。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://static.lovedata.net/zs/lsiuRC.jpg",alt:"images"}}),t._v(" "),s("strong",[t._v("如何配置")])]),t._v(" "),s("p",[t._v("要启用 JobManager 高可用性功能，首先必须在配置文件 flink-conf.yaml 中将高可用性模式设置为 ZooKeeper，配置\nZooKeeper quorum，将所有 JobManager 主机及其 Web UI 端口写入配置文件。每个 ip:port 都是一个 ZooKeeper\n服务器的 ip 及其端口，Flink 可以通过指定的地址和端口访问 ZooKeeper。另外就是高可用存储目录，JobManager 元数据保存在\n"),s("code",[t._v("high-availability.storageDir")]),t._v(" 指定的文件系统中，在 ZooKeeper 中仅保存了指向此状态的指针, 推荐这个目录是\nHDFS、S3、Ceph、NFS 等，该文件系统中保存了 JobManager 恢复状态需要的所有元数据。")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\nhigh-availability: zookeeper\nhigh-availability.zookeeper.quorum: ip1:2181 [,...],ip2:2181\nhigh-availability.storageDir: hdfs:///flink/ha/")]),t._v(" "),s("p",[t._v("Flink 利用 ZooKeeper 在所有正在运行的 JobManager 实例之间进行分布式协调。ZooKeeper 是独立于 Flink 的服务，通过\nleader 选举和轻量级一致性状态存储提供高可靠的分布式协调服务。Flink 包含用于 Bootstrap ZooKeeper 安装的脚本。 它在我们的\nFlink 安装路径下面 /conf/zoo.cfg 。")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\ntickTime=2000\ninitLimit=10\nsyncLimit=5\n# dataDir=/tmp/zookeeper\nclientPort=2181\n# ZooKeeper quorum peers\n# 下面这个配置 ZK 地址\nserver.1=localhost:2888:3888\n# server.2=host:peer-port:leader-port")]),t._v(" "),s("p",[t._v("要启动 HA 集群，请配置 masters 文件，该文件包含启动 JobManager 的所有主机以及 Web 用户界面绑定的端口，一行写一个。")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\nlocalhost:8081\nxxx.xxx.xxx.xxx:8081")]),t._v(" "),s("p",[t._v("默认情况下，JobManager 选一个随机端口作为进程通信端口，可以通过 high-availability.jobmanager.port\n更改此设置。此配置接受单个端口（例如\n"),s("code",[t._v("50010")]),t._v("），范围（"),s("code",[t._v("50000-50025")]),t._v("）或两者的组合（"),s("code",[t._v("50010,50011,50020-50025,50050-50075")]),t._v("）。")]),t._v(" "),s("p",[s("strong",[t._v("启动")])]),t._v(" "),s("p",[t._v("配置好了之后的示例如下，假设是配置两个 JobManager 的 Standalone 的集群，在 flink-conf.yaml 中配置高可用模式和\nZookeeper 如下：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\nhigh-availability: zookeeper\nhigh-availability.zookeeper.quorum: localhost:2181\nhigh-availability.storageDir: hdfs:///flink/recovery")]),t._v(" "),s("p",[t._v("masters 中配置如下：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\nlocalhost:8081\nlocalhost:8082")]),t._v(" "),s("p",[t._v("在 zoo.cfg 中配置 Zookeeper 服务如下：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\nserver.0=localhost:2888:3888")]),t._v(" "),s("p",[t._v("启动 ZooKeeper 集群：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\n$ bin/start-zookeeper-quorum.sh\nStarting zookeeper daemon on host localhost.")]),t._v(" "),s("p",[t._v("启动一个 Flink HA 集群：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\n$ bin/start-cluster.sh\nStarting HA cluster with 2 masters and 1 peers in ZooKeeper quorum.\nStarting jobmanager daemon on host localhost.\nStarting jobmanager daemon on host localhost.\nStarting taskmanager daemon on host localhost.")]),t._v(" "),s("p",[t._v("停止 ZooKeeper 和集群：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\n$ bin/stop-cluster.sh\nStopping taskmanager daemon (pid: 7647) on localhost.\nStopping jobmanager daemon (pid: 7495) on host localhost.\nStopping jobmanager daemon (pid: 7349) on host localhost.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("$ bin/stop-zookeeper-quorum.sh\nStopping zookeeper daemon (pid: 7101) on host localhost.\n")])])]),s("h4",{attrs:{id:"搭建-yarn-集群高可用-jobmanager"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搭建-yarn-集群高可用-jobmanager"}},[t._v("#")]),t._v(" 搭建 YARN 集群高可用 JobManager")]),t._v(" "),s("p",[t._v("当在 YARN 上配置高可用的 JobManager 时，它只会运行一个 JobManager 实例，不会运行多个，该 JobManager\n实例失败时，YARN 会将其重新启动。Yarn 的具体行为取决于使用的 YARN 版本。")]),t._v(" "),s("p",[s("strong",[t._v("如何配置")])]),t._v(" "),s("p",[t._v("在 YARN 配置文件 yarn-site.xml 中，需要配置 application master 的最大重试次数：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v(" "),s("property",[s("name",[t._v("yarn.resourcemanager.am.max-attempts")]),t._v(" "),s("value",[t._v("4")]),t._v(" "),s("description",[t._v("\nThe maximum number of application master execution attempts.\n")])],1)],1),t._v(" "),s("p",[t._v("当前 YARN 版本的默认值为 2（表示允许单个 JobManager 失败两次）。除了上面可以配置最大重试次数外，还可以在 flink-conf.yaml\n配置如下：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\nyarn.application-attempts: 10")]),t._v(" "),s("p",[t._v("这意味着在如果程序启动失败，YARN 会再重试 9 次（9 次重试 + 1 次启动），如果启动 10 次作业还失败，YARN\n才会将该任务的状态置为失败。如果因为节点硬件故障或重启，NodeManager 重新同步等操作，需要 YARN 继续尝试启动应用。这些重启尝试不计入\nyarn.application-attempts 个数中。")]),t._v(" "),s("p",[s("strong",[t._v("容器关闭行为")])]),t._v(" "),s("ul",[s("li",[t._v("YARN 2.3.0 < 版本 < 2.4.0. 如果 application master 进程失败，则所有的 container 都会重启。")]),t._v(" "),s("li",[t._v("YARN 2.4.0 < 版本 < 2.6.0. TaskManager container 在 application master 故障期间，会继续工作。这具有以下优点：作业恢复时间更快，且缩短所有 TaskManager 启动时申请资源的时间。")]),t._v(" "),s("li",[t._v("YARN 2.6.0 <= version: 将尝试失败有效性间隔设置为 Flink 的 Akka 超时值。尝试失败有效性间隔表示只有在系统在一个间隔期间看到最大应用程序尝试次数后才会终止应用程序，这避免了持久的工作会耗尽它的应用程序尝试。")])]),t._v(" "),s("p",[s("strong",[t._v("启动")])]),t._v(" "),s("p",[t._v("配置好了的示例如下，首先在 flink-conf.yaml 配置 HA 模式和 Zookeeper 集群：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\nhigh-availability: zookeeper\nhigh-availability.zookeeper.quorum: localhost:2181\nyarn.application-attempts: 10")]),t._v(" "),s("p",[t._v("在 zoo.cfg 配置 ZooKeeper 服务：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\nserver.0=localhost:2888:3888")]),t._v(" "),s("p",[t._v("启动 Zookeeper 集群：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\n$ bin/start-zookeeper-quorum.sh\nStarting zookeeper daemon on host localhost.")]),t._v(" "),s("p",[t._v("启动 HA 集群：")]),t._v(" "),s("p",[t._v("​"),s("br"),t._v("\n$ bin/yarn-session.sh -n 2")]),t._v(" "),s("h3",{attrs:{id:"小结与反思"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结与反思"}},[t._v("#")]),t._v(" 小结与反思")]),t._v(" "),s("p",[t._v("本节一开始对 Flink 的所有配置文件做了一个详细的介绍，分析了每种配置的作用和使用场景，然后介绍了 Flink 中的日志配置，最后讲解了下\nJobManager 的高可用配置。")])])}),[],!1,null,null,null);a.default=e.exports}}]);